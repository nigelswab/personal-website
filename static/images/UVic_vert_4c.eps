%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UVic_vert_4c.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Rose
%%CreationDate: 4/18/08
%%BoundingBox: 0 0 58 86
%%HiResBoundingBox: 0 0 57.0416 85.2994
%%CropBox: 0 0 57.0416 85.2994
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">uv_cst_4c</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-02-11T09:41:30-08:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-18T09:53:17-07:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-18T09:53:17-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>172</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXzB/zlVpq6p+Yv&#xA;k3TGkMS30a2xlA5FRNdBOVNq05Yqj/8AoTLTf+pqm/6Q1/6rYq7/AKEy03/qapv+kNf+q2Ku/wCh&#xA;MtN/6mqb/pDX/qtirv8AoTLTf+pqm/6Q1/6rYq7/AKEy03/qapv+kNf+q2Ku/wChMtN/6mqb/pDX&#xA;/qtirv8AoTLTf+pqm/6Q1/6rYq7/AKEy03/qapv+kNf+q2Ku/wChMtN/6mqb/pDX/qtirv8AoTLT&#xA;f+pqm/6Q1/6rYq7/AKEy03/qapv+kNf+q2Ku/wChMtN/6mqb/pDX/qtirv8AoTLTf+pqm/6Q1/6r&#xA;Yq7/AKEy03/qapv+kNf+q2Ku/wChMtN/6mqb/pDX/qtirBtJ8gQ+Q/8AnIry55eivWv0jnt5vrDx&#xA;iIn1UY04hn6fPFX2TirsVdirsVdir5s/5yQ/8m9+X3/GSD/qNXFXvHm3zp5Z8paW2pa/fR2cG4iR&#xA;jWWVhT4IYx8UjbjZRikAk0Ob5z1X/nKjzxda0yaJZ6XZ26t/o+l3hklupFHaV0dI1cj9gUI75Qc4&#xA;HTZ2+LsacvTxQGT+Ze/6r8rt75+WPn+y89+UbbXbeL6tMWa3vrMnkYbmKnNK0FdiGHsRl4NuolEx&#xA;NHmGV4odirzr80Pzr8t+SbaS1hePU/MZH7rSo5APT/4suXFRCi9fi3PbxyMpCPNv0+nnllwwH6h7&#xA;y8e8vf8AOVXm9dUju9ag02+8v+qseoLpyzLPbK5oHX1GPML8vi8R1yEcwJoinNz9lSjjOSMo5Ix+&#xA;rhvb5gfN9R288NxBHcQOJIZlWSKRTVWVhVWB8CDlrq1+Kqd1dW1pbyXN1MkFvCpeWaVgiIo6szNQ&#xA;AfPFXz5+ZP8AzlGtlfGw8mfU5LWM8Zdcv/UMMj91tYk4s4XoZD8P6zXLKBsNy7DT9nyyDikRjj0M&#xA;uvu6/oZL+SX53aj5w1G58veY4LeDW44Rd2NzaVFvd29QGKhi1GXkO+4rsKYYTEhs1azRT08+GXUW&#xA;CORHeHsWTcR2KuxV8x+ef/WttB/1rL/k22KvpzFXYq7FXYq7FXzZ/wA5If8Ak3vy+/4yQf8AUauK&#xA;vefNvk7y95s0eXStctVuLdwTHJ0lhkptLDJ1R17EfqxITGRibGxfGNnZ21hPfpd+i13pl1cWU+oc&#xA;VRnEEhTmz+4G++azPEiVDk+ldh6iGTTjNMRExYMth8yyT8qPzjT8v9V1FZIE1Pyvq1wk91NauGmt&#xA;ZSOJfh0PKu477b9jl4J7CJ2LyXbOjvJPNjMZ45G/Sbq+99c6Tq2m6vptvqemXCXdhdoJbe4iNVdT&#xA;/nQg7g7HMh0KLxV47/zkd5E0a78mX/m62tkh8waOiS/WUUKbiDmEkgn7SJxYla7gjbvkJwEg5Wj1&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:98345BDA17DADC118641CCE4C9965C08</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:E009D71EBD0EDD118297B750AF45A23F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:9b49cf33-ade1-014e-b86e-7a9f99a58276</stRef:instanceID>
            <stRef:documentID>uuid:B5C4A03015DADC118641CCE4C9965C08</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>4.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>80% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>80.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>60% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>40% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>39.999996</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>20% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>19.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red M=100 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Red M=75 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Red M=50 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Red M=25 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Green C=80 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Green C=60 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Green C=40 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Green C=20 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue C=100 M=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Blue C=75 M=37.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Blue C=50 M=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Blue C=25 M=12.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Orange M=50 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Orange M=37.5 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Orange M=25 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Orange M=12.5 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Violet C=50 M=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Violet C=37.5 M=67.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>67.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Violet C=25 M=45 </xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Violet C=12.5 M=22.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>22.500002</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Azure C=80</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Azure C=60</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Azure C=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Azure C=20</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -85.2993 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 85.2993 li
57.0415 85.2993 li
57.0415 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2.05273 63.8735 mo
2.05273 68.9829 li
2.05273 70.6938 2.7627 71.4927 3.84766 71.4927 cv
5 71.4927 5.69336 70.7017 5.69336 68.9829 cv
5.69336 63.8735 li
7.29492 63.8735 li
7.29492 68.8794 li
7.29492 71.5786 5.90625 72.7798 3.79004 72.7798 cv
1.76855 72.7798 0.451172 71.645 0.451172 68.8872 cv
0.451172 63.8735 li
2.05273 63.8735 li
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
f
9.04688 68.1899 mo
9.04688 67.4575 9.02344 66.856 8.99512 66.3071 cv
10.3926 66.3071 li
10.4717 67.2583 li
10.5088 67.2583 li
10.7891 66.7661 11.4746 66.1646 12.5254 66.1646 cv
13.6289 66.1646 14.7754 66.8755 14.7754 68.8774 cv
14.7754 72.6353 li
13.1738 72.6353 li
13.1738 69.0649 li
13.1738 68.1567 12.8408 67.4653 11.9668 67.4653 cv
11.3291 67.4653 10.8887 67.9146 10.7217 68.4048 cv
10.6729 68.5356 10.6484 68.729 10.6484 68.9126 cv
10.6484 72.6353 li
9.04688 72.6353 li
9.04688 68.1899 li
cp
f
17.2637 65.3286 mo
16.7051 65.3286 16.3369 64.9243 16.3389 64.4165 cv
16.3369 63.9048 16.7168 63.5063 17.2822 63.5063 cv
17.8535 63.5063 18.2178 63.9009 18.2236 64.4165 cv
18.2256 64.9243 17.8574 65.3286 17.2764 65.3286 cv
17.2637 65.3286 li
cp
16.4805 72.6353 mo
16.4805 66.3071 li
18.082 66.3071 li
18.082 72.6353 li
16.4805 72.6353 li
cp
f
20.8164 66.3071 mo
21.8428 69.52 li
22.0225 70.0786 22.1572 70.5884 22.2744 71.1021 cv
22.3125 71.1021 li
22.4316 70.5786 22.5723 70.0825 22.7432 69.52 cv
23.7461 66.3071 li
25.4277 66.3071 li
23.0117 72.6353 li
21.4355 72.6353 li
19.0859 66.3071 li
20.8164 66.3071 li
cp
f
31.5747 69.9146 mo
31.606 69.7661 31.6313 69.5278 31.6313 69.231 cv
31.6313 67.8442 30.9614 66.1528 28.9053 66.1528 cv
26.8691 66.1528 25.8096 67.8052 25.8096 69.5513 cv
25.8096 71.4907 27.0137 72.7603 29.0684 72.7603 cv
29.9868 72.7603 30.7388 72.5884 31.2798 72.3599 cv
31.0435 71.2583 li
30.5591 71.436 30.0317 71.5513 29.2969 71.5513 cv
28.2725 71.5513 27.3848 71.0493 27.3418 69.9028 cv
31.5747 69.9146 li
cp
27.3398 68.7876 mo
27.4102 68.1392 27.8203 67.2446 28.8057 67.2446 cv
29.8774 67.2446 30.1313 68.2017 30.1255 68.7876 cv
27.3398 68.7876 li
cp
f
32.9321 68.3423 mo
32.9321 67.4946 32.9146 66.8716 32.8794 66.3071 cv
34.2661 66.3071 li
34.3247 67.5103 li
34.3696 67.5103 li
34.6821 66.6177 35.4204 66.1646 36.1021 66.1646 cv
36.2583 66.1646 36.3501 66.1704 36.479 66.1997 cv
36.479 67.7056 li
36.3286 67.6782 36.1899 67.6606 35.9966 67.6606 cv
35.2329 67.6606 34.7056 68.145 34.561 68.8716 cv
34.5337 69.0122 34.52 69.1821 34.52 69.354 cv
34.52 72.6353 li
32.9185 72.6353 li
32.9321 68.3423 li
cp
f
37.4712 71.1646 mo
37.8247 71.3833 38.5142 71.6255 39.0864 71.6255 cv
39.7915 71.6255 40.106 71.3306 40.106 70.9146 cv
40.106 70.4868 39.8442 70.27 39.0669 69.9927 cv
37.8267 69.5688 37.311 68.895 37.3169 68.145 cv
37.3169 67.0317 38.2427 66.1646 39.7192 66.1646 cv
40.4165 66.1646 41.0259 66.3384 41.397 66.5415 cv
41.0806 67.6665 li
40.813 67.5142 40.3013 67.3013 39.7407 67.3013 cv
39.1724 67.3013 38.856 67.5825 38.856 67.9712 cv
38.856 68.3735 39.1606 68.5669 39.9595 68.8579 cv
41.1118 69.2661 41.6431 69.8521 41.6489 70.7856 cv
41.6489 71.9399 40.7505 72.772 39.0786 72.772 cv
38.313 72.772 37.6157 72.5884 37.1509 72.3286 cv
37.4712 71.1646 li
cp
f
43.7563 65.3286 mo
43.1978 65.3286 42.8306 64.9243 42.8325 64.4165 cv
42.8306 63.9048 43.2095 63.5063 43.7759 63.5063 cv
44.3462 63.5063 44.7114 63.9009 44.7173 64.4165 cv
44.7192 64.9243 44.3521 65.3286 43.77 65.3286 cv
43.7563 65.3286 li
cp
42.9731 72.6353 mo
42.9731 66.3071 li
44.5747 66.3071 li
44.5747 72.6353 li
42.9731 72.6353 li
cp
f
48.3911 64.6802 mo
48.3911 66.3071 li
49.9146 66.3071 li
49.9146 67.4985 li
48.3911 67.4985 li
48.3911 70.2915 li
48.3911 71.0669 48.5981 71.4595 49.2095 71.4595 cv
49.5005 71.4595 49.6509 71.4399 49.8325 71.3911 cv
49.8638 72.6079 li
49.6235 72.6978 49.2036 72.772 48.6997 72.772 cv
48.1118 72.772 47.6216 72.5728 47.3247 72.2505 cv
46.981 71.8872 46.8228 71.3052 46.8228 70.4751 cv
46.8228 67.4985 li
45.9204 67.4985 li
45.9204 66.3071 li
46.8228 66.3071 li
46.8228 65.1294 li
48.3911 64.6802 li
cp
f
52.4731 66.3071 mo
53.6138 69.6997 li
53.7407 70.0923 53.8774 70.5747 53.9712 70.9263 cv
54.0083 70.9263 li
54.106 70.5708 54.2251 70.0942 54.3423 69.686 cv
55.3345 66.3071 li
57.0415 66.3071 li
55.4556 70.6255 li
54.5864 72.9888 54.0005 74.0376 53.2544 74.6938 cv
52.6255 75.2427 51.9731 75.4517 51.5767 75.5044 cv
51.2153 74.1567 li
51.4829 74.0903 51.8188 73.9458 52.1392 73.7192 cv
52.4438 73.52 52.7974 73.147 53.0181 72.7114 cv
53.0806 72.6021 53.1177 72.5083 53.1177 72.4302 cv
53.1177 72.3599 53.1001 72.2661 53.0337 72.1177 cv
50.7095 66.3071 li
52.4731 66.3071 li
cp
f
3.18066 85.2993 mo
4.78613 85.2993 6.41895 84.2563 6.41895 81.9302 cv
6.41895 80.0122 5.1582 78.6841 3.27539 78.6841 cv
1.36816 78.6841 0 79.9634 0 82.0396 cv
0 84.0669 1.38184 85.2993 3.16699 85.2993 cv
3.18066 85.2993 li
cp
3.19336 84.1372 mo
2.24023 84.1372 1.63281 83.2173 1.63281 81.9985 cv
1.63281 80.9438 2.09277 79.8481 3.21582 79.8481 cv
4.32031 79.8481 4.76074 80.9829 4.76074 81.9771 cv
4.76074 83.2505 4.12305 84.1372 3.20605 84.1372 cv
3.19336 84.1372 li
cp
f
7.91504 85.1567 mo
7.91504 80.02 li
7.05664 80.02 li
7.05664 78.8286 li
7.91504 78.8286 li
7.91504 78.5591 li
7.91504 77.7388 8.13477 76.9146 8.68262 76.395 cv
9.15137 75.9497 9.78418 75.7837 10.3398 75.7837 cv
10.7646 75.7837 11.1055 75.854 11.3555 75.9399 cv
11.2441 77.1704 li
11.0703 77.1079 10.8584 77.0552 10.5615 77.0552 cv
9.76953 77.0552 9.50488 77.7212 9.50488 78.4966 cv
9.50488 78.8286 li
10.8887 78.8286 li
10.8887 80.02 li
9.51563 80.02 li
9.51563 85.1567 li
7.91504 85.1567 li
cp
f
16.7236 85.1567 mo
13.8867 76.395 li
15.6328 76.395 li
16.8291 80.3794 li
17.167 81.4829 17.459 82.5103 17.6855 83.5688 cv
17.7148 83.5688 li
17.9463 82.5356 18.2646 81.4673 18.6055 80.4028 cv
19.8838 76.395 li
21.5869 76.395 li
18.5576 85.1567 li
16.7236 85.1567 li
cp
f
23.3389 77.8501 mo
22.7803 77.8501 22.4121 77.4438 22.4141 76.936 cv
22.4121 76.4243 22.792 76.0278 23.3574 76.0278 cv
23.9287 76.0278 24.293 76.4204 24.2988 76.936 cv
24.3008 77.4438 23.9336 77.8501 23.3516 77.8501 cv
23.3389 77.8501 li
cp
22.5557 85.1567 mo
22.5557 78.8286 li
24.1572 78.8286 li
24.1572 85.1567 li
22.5557 85.1567 li
cp
f
30.5259 84.9653 mo
30.1938 85.1235 29.5342 85.2935 28.7393 85.2935 cv
26.7559 85.2935 25.4766 84.02 25.4766 82.0571 cv
25.4766 80.1606 26.7715 78.688 28.998 78.688 cv
29.5889 78.688 30.1782 78.8169 30.5435 78.9771 cv
30.2603 80.1802 li
30.0024 80.0552 29.6182 79.9321 29.0488 79.9321 cv
27.8281 79.9321 27.1055 80.8247 27.1104 81.9849 cv
27.1104 83.2837 27.9639 84.0278 29.0537 84.0278 cv
29.6025 84.0278 29.9985 83.9087 30.311 83.7778 cv
30.5259 84.9653 li
cp
f
33.7427 77.2017 mo
33.7427 78.8286 li
35.2661 78.8286 li
35.2661 80.02 li
33.7427 80.02 li
33.7427 82.813 li
33.7427 83.5864 33.9497 83.981 34.561 83.981 cv
34.8521 83.981 35.0024 83.9614 35.1841 83.9106 cv
35.2153 85.1294 li
34.9751 85.2192 34.5552 85.2935 34.0513 85.2935 cv
33.4634 85.2935 32.9731 85.0923 32.6763 84.772 cv
32.3325 84.4087 32.1743 83.8247 32.1743 82.9966 cv
32.1743 80.02 li
31.272 80.02 li
31.272 78.8286 li
32.1743 78.8286 li
32.1743 77.6489 li
33.7427 77.2017 li
cp
f
39.1782 85.2993 mo
40.7837 85.2993 42.4165 84.2563 42.4165 81.9302 cv
42.4165 80.0122 41.1567 78.6841 39.2739 78.6841 cv
37.3657 78.6841 35.9985 79.9634 35.9985 82.0396 cv
35.9985 84.0669 37.3794 85.2993 39.1646 85.2993 cv
39.1782 85.2993 li
cp
39.1919 84.1372 mo
38.2388 84.1372 37.6313 83.2173 37.6313 81.9985 cv
37.6313 80.9438 38.0903 79.8481 39.2134 79.8481 cv
40.3188 79.8481 40.7583 80.9829 40.7583 81.9771 cv
40.7583 83.2505 40.1216 84.1372 39.2036 84.1372 cv
39.1919 84.1372 li
cp
f
43.7485 80.8618 mo
43.7485 80.0142 43.731 79.3911 43.6958 78.8286 cv
45.0825 78.8286 li
45.1411 80.0298 li
45.186 80.0298 li
45.4985 79.1392 46.2368 78.6841 46.9185 78.6841 cv
47.0747 78.6841 47.1665 78.6899 47.2954 78.7192 cv
47.2954 80.2271 li
47.145 80.1978 47.0044 80.1821 46.813 80.1821 cv
46.0493 80.1821 45.52 80.6665 45.3774 81.3911 cv
45.3501 81.5337 45.3364 81.7017 45.3364 81.8735 cv
45.3364 85.1567 li
43.7349 85.1567 li
43.7485 80.8618 li
cp
f
49.1587 77.8501 mo
48.6001 77.8501 48.231 77.4438 48.2329 76.936 cv
48.231 76.4243 48.6118 76.0278 49.1782 76.0278 cv
49.7485 76.0278 50.1138 76.4204 50.1177 76.936 cv
50.1196 77.4438 49.7524 77.8501 49.1724 77.8501 cv
49.1587 77.8501 li
cp
48.3755 85.1567 mo
48.3755 78.8286 li
49.9771 78.8286 li
49.9771 85.1567 li
48.3755 85.1567 li
cp
f
56.6079 81.354 mo
56.6079 79.9653 56.0278 78.6841 53.9985 78.6841 cv
53.0024 78.6841 52.1821 78.9556 51.7036 79.2466 cv
52.022 80.2856 li
52.4536 80.0122 53.104 79.813 53.7231 79.813 cv
54.8442 79.8091 55.0083 80.5005 55.0083 80.9165 cv
55.0083 81.02 li
52.6763 81.0122 51.2544 81.8208 51.2544 83.4165 cv
51.2544 84.3813 51.9653 85.2993 53.2485 85.2993 cv
54.0688 85.2993 54.731 84.9517 55.1138 84.4517 cv
55.1528 84.4517 li
55.2622 85.1567 li
56.7056 85.1567 li
56.6372 84.7661 56.6079 84.2075 56.6079 83.6313 cv
56.6079 81.354 li
cp
55.0513 82.9321 mo
55.0513 83.0435 55.0396 83.1685 55.0063 83.2798 cv
54.8521 83.7427 54.3931 84.1548 53.7544 84.1548 cv
53.2485 84.1548 52.8423 83.8638 52.8423 83.2446 cv
52.8423 82.2798 53.9224 82.0415 55.0513 82.0571 cv
55.0513 82.9321 li
cp
f
28.4023 53.3599 mo
21.1968 53.3599 7.41846 43.6353 7.41846 28.3896 cv
7.41846 28.3896 7.41846 24.7744 7.41846 20.1006 cv
49.2817 20.1006 li
49.2817 24.7744 49.2817 28.3896 49.2817 28.3896 cv
49.2817 43.6353 35.5728 53.3599 28.4023 53.3599 cv
cp
false sop
level3{
gsave
clp
[-1.45383e-06 33.2598 -33.2598 -1.45383e-06 28.3496 20.1006 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s-Witr0IBoq3D!kp65OfoTB1bnW3_\mZ.>Xl\tlSk_fENjba$Jj+m[Fi._4@h1Yh<g4KA7f7<o2e:7N.
dXD0*c[5^$b^'6taa!jp`chCk_fYqf_/oYc^2a2]]5R`X\8M?T[;>mOZ>0FJY\=(FX_7\AWb)5<Vdoc7
UgjB3Tj[p.T3hR*S6c1%R9T^uQ<F7pP?7ekOB2DgN`?&cMc0T]Lf+3YKhqaTJkc:OJ5$"LI7jPFH:\)A
G=MW<F@H68EC9d3DaFF/CdA%*Bg2S%Aj$+u@ls_q?oe8l?8qoh>;cHb=>^'^<AOUY;DA.T:G;bP9eHDL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.45383e-06 33.2598 -33.2598 -1.45383e-06 28.3496 20.1006 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~s8Mupr;6?dq=s^Xp@\+No^hYDnaQ#9md9B-lg!a!ki_*jjlGL_j5T%Vi8<GKh;$f?g=b03f@JO'eC2mp
daHOicd0n]bfn8QaiVWE`l?!9_o'@._83q%^V7Co]Xtbc\[],W[^EKLZa-j@Yct=7Y-"e,X/`.uW2HMi
V50o^U7n9RTV%jJSXc4>R[KS2Q^3r&Pa%ApOcb`dO,f6[N/W[PM2@%DLPCM9KS+l-JUi9#IsufnI!^0b
H$FOWG'.nKF)l8?E,]`6DJa3+CMITuBP1siARo=]@UW\Q?XI,G?!LW=>$>'2='&F&<)cdo;,L.c:/4MX
~>
<~R$a8-Q^3r'QBd`"P`q;oP*(lgOH5H`O,f6[NJrgSMi*CLMM[1GLkgb?L4t>8KnP,3K7\]+JUi9$J:E&t
IXZ]nI!g9fH?sj^H$OXZGB\4RF`heJFEDSFEcQ/>E,]`6Df9N2D/F**CMR["Bk_6oBP;$kAnGUcA7T1[
@q0"X@UW\Q?sd8I?=$rD?!LW=>?Y35=]ed-='&I(<`N.!<)Z^n;GpCi;,C(b:JOYZ9he>U9M8#N8kDTF
84Z6@7Rfj:77BU46UO1,5s[e&5X7Ou5!D+m4?P_g4$,Ja3B9&Y2`EWQ2)R6K1c.!E1,:R=0JG170/"q1
~>
0 <~%LrsY%LrsY%LrsY%LrsY%LrsY%LijV%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[:K$47+I$47+I$47+I$47+I$47+I$47(G#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89
"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
48.5747 18.8398 mo
48.5747 1.42285 li
7.97607 1.42285 li
7.97607 18.8398 li
48.5747 18.8398 li
cp
0 0 0 0 cmyk
f
32.9048 8.86426 mo
32.1479 9.63965 31.5435 9.8125 31.3677 9.85156 cv
30.7778 9.50977 30.3462 9.2002 30.1978 9.07129 cv
30.1235 9.00684 30.0542 8.94629 29.9849 8.88379 cv
30.4165 8.94824 31.8794 9.13184 32.9048 8.86426 cv
cp
0 0.91 0.76 0 cmyk
f
0.144 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
32.9048 8.86426 mo
32.1479 9.63965 31.5435 9.8125 31.3677 9.85156 cv
30.7778 9.50977 30.3462 9.2002 30.1978 9.07129 cv
30.1235 9.00684 30.0542 8.94629 29.9849 8.88379 cv
30.4165 8.94824 31.8794 9.13184 32.9048 8.86426 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
24.8047 14.0811 mo
25.0254 13.6885 25.4136 13.042 25.4043 12.2998 cv
25.6304 12.4639 25.8447 12.5732 26.0171 12.6299 cv
26.0698 13.0869 26.0669 13.5029 26.0259 13.8789 cv
25.8203 13.9805 25.4634 14.0742 24.8047 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
24.8047 14.0811 mo
25.0254 13.6885 25.4136 13.042 25.4043 12.2998 cv
25.6304 12.4639 25.8447 12.5732 26.0171 12.6299 cv
26.0698 13.0869 26.0669 13.5029 26.0259 13.8789 cv
25.8203 13.9805 25.4634 14.0742 24.8047 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
31.5142 13.3291 mo
31.854 13.8779 32.6577 14.3008 32.4888 16.1436 cv
31.6353 14.6748 29.2944 12.5557 28.6392 12.4346 cv
28.2749 13.4287 28.9878 15.7861 29.1826 16.1592 cv
28.4268 15.7861 27.9639 15.4453 27.666 13.9766 cv
27.3491 14.7002 27.2144 15.624 25.7378 16.1143 cv
26.1738 15.3154 26.8008 14.668 26.7397 12.2334 cv
25.9214 11.7549 24.2451 11.9404 24.0215 7.40723 cv
23.9741 6.2627 23.499 5.94434 22.644 5.36816 cv
22.644 5.36816 23.2925 4.90527 23.7852 4.51855 cv
24.4028 4.03418 26.3506 3.74316 26.4478 6.75488 cv
27.9282 7.60254 27.9351 7.87988 29.0566 8.96289 cv
30.1294 9.99707 32.5669 11.335 33.7349 11.3662 cv
32.7603 11.7158 31.5142 11.7354 30.8794 11.7354 cv
31.2212 11.4365 31.3843 11.2686 31.4888 10.9639 cv
30.856 11.3867 29.5664 11.9844 28.0552 11.2383 cv
28.6777 11.2686 29.3179 11.3174 29.9556 10.5918 cv
29.2241 10.8154 27.3599 11.3936 25.9858 9.76758 cv
24.7451 8.30371 26.3867 8.08496 27.2036 8.6748 cv
28.0474 9.28027 28.3965 9.7334 28.5586 10.3223 cv
28.8013 9.42676 27.5195 7.3291 25.8877 7.67676 cv
24.2568 8.02637 25.748 10.7383 26.8369 11.2627 cv
27.2529 11.4619 28.2749 12.3818 31.5864 12.3574 cv
32.1187 12.6221 32.6899 12.9189 33.9731 13.0322 cv
33.3403 13.7021 31.7817 13.6035 31.5142 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
31.5142 13.3291 mo
31.854 13.8779 32.6577 14.3008 32.4888 16.1436 cv
31.6353 14.6748 29.2944 12.5557 28.6392 12.4346 cv
28.2749 13.4287 28.9878 15.7861 29.1826 16.1592 cv
28.4268 15.7861 27.9639 15.4453 27.666 13.9766 cv
27.3491 14.7002 27.2144 15.624 25.7378 16.1143 cv
26.1738 15.3154 26.8008 14.668 26.7397 12.2334 cv
25.9214 11.7549 24.2451 11.9404 24.0215 7.40723 cv
23.9741 6.2627 23.499 5.94434 22.644 5.36816 cv
22.644 5.36816 23.2925 4.90527 23.7852 4.51855 cv
24.4028 4.03418 26.3506 3.74316 26.4478 6.75488 cv
27.9282 7.60254 27.9351 7.87988 29.0566 8.96289 cv
30.1294 9.99707 32.5669 11.335 33.7349 11.3662 cv
32.7603 11.7158 31.5142 11.7354 30.8794 11.7354 cv
31.2212 11.4365 31.3843 11.2686 31.4888 10.9639 cv
30.856 11.3867 29.5664 11.9844 28.0552 11.2383 cv
28.6777 11.2686 29.3179 11.3174 29.9556 10.5918 cv
29.2241 10.8154 27.3599 11.3936 25.9858 9.76758 cv
24.7451 8.30371 26.3867 8.08496 27.2036 8.6748 cv
28.0474 9.28027 28.3965 9.7334 28.5586 10.3223 cv
28.8013 9.42676 27.5195 7.3291 25.8877 7.67676 cv
24.2568 8.02637 25.748 10.7383 26.8369 11.2627 cv
27.2529 11.4619 28.2749 12.3818 31.5864 12.3574 cv
32.1187 12.6221 32.6899 12.9189 33.9731 13.0322 cv
33.3403 13.7021 31.7817 13.6035 31.5142 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
23.9688 4.99902 mo
24.0918 5.08203 24.3984 5.25098 24.7095 5.20215 cv
24.4673 5.38281 23.9814 5.24512 23.7759 5.12988 cv
23.752 5.14746 23.7295 5.16504 23.7046 5.18457 cv
23.6172 5.24512 23.5322 5.25488 23.5098 5.27246 cv
23.4756 5.30273 23.4907 5.34863 23.4907 5.34863 cv
23.6211 5.30273 23.939 5.50488 23.939 5.50488 cv
24.4106 5.77734 24.7856 5.53125 24.9326 5.46191 cv
25.082 5.39355 25.1626 5.34668 25.3335 5.2373 cv
24.8975 4.66504 24.376 4.75879 23.9688 4.99902 cv
cp
0 0 0 1 nzopmsc
f
31.5181 13.3232 mo
31.8599 13.8711 32.6626 14.2949 32.4927 16.1377 cv
31.6401 14.668 29.2983 12.5488 28.644 12.4277 cv
28.2793 13.4229 28.9922 15.7783 29.186 16.1523 cv
28.4326 15.7783 27.9692 15.4385 27.6709 13.9697 cv
27.354 14.6934 27.2202 15.6182 25.7422 16.1084 cv
26.1802 15.3096 26.8057 14.6631 26.7441 12.2275 cv
25.9268 11.749 24.249 11.9346 24.0269 7.40137 cv
23.9795 6.25586 23.5034 5.93848 22.6484 5.3623 cv
22.6484 5.3623 23.2979 4.89941 23.7896 4.5127 cv
24.4067 4.02832 26.3545 3.73535 26.4526 6.74902 cv
27.9331 7.59668 27.9409 7.87402 29.061 8.95703 cv
30.1353 9.99121 32.5718 11.3291 33.7407 11.3613 cv
32.7661 11.708 31.5181 11.7295 30.8853 11.7295 cv
31.2271 11.4307 31.3892 11.2607 31.4946 10.958 cv
30.8608 11.3809 29.5713 11.9785 28.0601 11.2334 cv
28.6821 11.2627 29.3237 11.3105 29.9595 10.585 cv
29.2305 10.8096 27.3667 11.3877 25.9893 9.76172 cv
24.7515 8.29688 26.3896 8.0791 27.2075 8.66699 cv
28.0527 9.27441 28.4014 9.72754 28.5635 10.3174 cv
28.8062 9.4209 27.5244 7.32129 25.8931 7.66992 cv
24.2617 8.02051 25.752 10.7334 26.8423 11.2568 cv
27.2559 11.4561 28.2793 12.376 31.5933 12.3525 cv
32.1255 12.6162 32.6958 12.9131 33.979 13.0244 cv
33.3452 13.6963 31.7876 13.5967 31.5181 13.3232 cv
cp
24.811 14.0752 mo
25.0308 13.6826 25.418 13.0361 25.4097 12.2939 cv
25.6357 12.457 25.8491 12.5664 26.0215 12.623 cv
26.0742 13.0811 26.0713 13.4971 26.0308 13.874 cv
25.8237 13.9736 25.4673 14.0693 24.811 14.0752 cv
cp
32.9067 8.8584 mo
32.1528 9.63184 31.5493 9.80664 31.3716 9.84473 cv
30.7827 9.50293 30.3521 9.19434 30.2036 9.06543 cv
30.1284 9.00098 30.0591 8.93848 29.9917 8.87793 cv
30.4204 8.94238 31.8843 9.12598 32.9067 8.8584 cv
cp
35.3589 12.3994 mo
34.0278 12.7754 32.7622 12.1777 32.7427 12.1611 cv
34.0435 11.874 34.6899 11.6777 35.3325 11.0693 cv
34.2339 11.1201 33.0454 10.6982 32.0825 10.2256 cv
32.3853 10.0498 33.5142 9.33105 33.8813 8.17969 cv
33.3735 8.37402 30.0376 8.59277 29.3354 8.21777 cv
28.7534 7.57617 28.438 7.10547 27.0654 6.33301 cv
26.458 2.52441 24.001 3.55762 23.2905 4.36621 cv
22.8623 4.85254 21.8896 5.29004 21.8896 5.29004 cv
23.4253 6.09863 23.4404 6.77051 23.5298 7.49512 cv
23.4268 9.48535 24.0493 10.8438 24.7446 11.667 cv
24.9404 12.1846 25.0742 13.208 24.0269 14.4639 cv
24.8662 14.5811 25.5811 14.4834 25.9419 14.4102 cv
25.7358 15.3252 25.3018 15.9775 24.9409 16.4482 cv
25.5024 16.585 27.0693 16.2197 27.5996 15.6611 cv
28.1821 16.0625 29.1572 16.9326 30.4966 16.8389 cv
29.0591 15.6963 29.1572 13.9453 29.2656 13.4873 cv
30.3481 14.2949 32.0532 15.9883 32.8091 17.5547 cv
33.1763 15.7627 33.0767 15.3652 32.9595 14.248 cv
34.0024 13.7705 34.7095 13.3486 35.3589 12.3994 cv
cp
f
45.2134 8.86426 mo
44.4575 9.63965 43.853 9.8125 43.6763 9.85156 cv
43.0884 9.50977 42.6577 9.2002 42.5083 9.07129 cv
42.4331 9.00684 42.3638 8.94629 42.2954 8.88379 cv
42.7271 8.94824 44.1899 9.13184 45.2134 8.86426 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
45.2134 8.86426 mo
44.4575 9.63965 43.853 9.8125 43.6763 9.85156 cv
43.0884 9.50977 42.6577 9.2002 42.5083 9.07129 cv
42.4331 9.00684 42.3638 8.94629 42.2954 8.88379 cv
42.7271 8.94824 44.1899 9.13184 45.2134 8.86426 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
37.1147 14.0811 mo
37.3354 13.6885 37.7231 13.042 37.7134 12.2998 cv
37.9399 12.4639 38.1548 12.5732 38.3267 12.6299 cv
38.3794 13.0869 38.3765 13.5029 38.3364 13.8789 cv
38.1294 13.9805 37.7729 14.0742 37.1147 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
37.1147 14.0811 mo
37.3354 13.6885 37.7231 13.042 37.7134 12.2998 cv
37.9399 12.4639 38.1548 12.5732 38.3267 12.6299 cv
38.3794 13.0869 38.3765 13.5029 38.3364 13.8789 cv
38.1294 13.9805 37.7729 14.0742 37.1147 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
43.8247 13.3291 mo
44.1636 13.8779 44.9683 14.3008 44.7983 16.1436 cv
43.9458 14.6748 41.604 12.5557 40.9497 12.4346 cv
40.5845 13.4287 41.2974 15.7861 41.4937 16.1592 cv
40.7368 15.7861 40.2739 15.4453 39.9751 13.9766 cv
39.6587 14.7002 39.5239 15.624 38.0474 16.1143 cv
38.4839 15.3154 39.1099 14.668 39.0493 12.2334 cv
38.231 11.7549 36.5552 11.9404 36.3315 7.40723 cv
36.2837 6.2627 35.8091 5.94434 34.9536 5.36816 cv
34.9536 5.36816 35.604 4.90527 36.0933 4.51855 cv
36.7134 4.03418 38.6606 3.74316 38.7583 6.75488 cv
40.2368 7.60254 40.2446 7.87988 41.3677 8.96289 cv
42.4399 9.99707 44.8774 11.335 46.0435 11.3662 cv
45.0718 11.7158 43.8247 11.7354 43.189 11.7354 cv
43.5317 11.4365 43.6938 11.2686 43.7974 10.9639 cv
43.1655 11.3867 41.8755 11.9844 40.3647 11.2383 cv
40.9868 11.2686 41.6274 11.3174 42.2642 10.5918 cv
41.5337 10.8154 39.6704 11.3936 38.2954 9.76758 cv
37.0552 8.30371 38.6958 8.08496 39.5122 8.6748 cv
40.3579 9.28027 40.7065 9.7334 40.8677 10.3223 cv
41.1108 9.42676 39.8286 7.3291 38.1978 7.67676 cv
36.5669 8.02637 38.0581 10.7383 39.147 11.2627 cv
39.563 11.4619 40.5845 12.3818 43.897 12.3574 cv
44.4292 12.6221 44.9995 12.9189 46.2837 13.0322 cv
45.6509 13.7021 44.0923 13.6035 43.8247 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
43.8247 13.3291 mo
44.1636 13.8779 44.9683 14.3008 44.7983 16.1436 cv
43.9458 14.6748 41.604 12.5557 40.9497 12.4346 cv
40.5845 13.4287 41.2974 15.7861 41.4937 16.1592 cv
40.7368 15.7861 40.2739 15.4453 39.9751 13.9766 cv
39.6587 14.7002 39.5239 15.624 38.0474 16.1143 cv
38.4839 15.3154 39.1099 14.668 39.0493 12.2334 cv
38.231 11.7549 36.5552 11.9404 36.3315 7.40723 cv
36.2837 6.2627 35.8091 5.94434 34.9536 5.36816 cv
34.9536 5.36816 35.604 4.90527 36.0933 4.51855 cv
36.7134 4.03418 38.6606 3.74316 38.7583 6.75488 cv
40.2368 7.60254 40.2446 7.87988 41.3677 8.96289 cv
42.4399 9.99707 44.8774 11.335 46.0435 11.3662 cv
45.0718 11.7158 43.8247 11.7354 43.189 11.7354 cv
43.5317 11.4365 43.6938 11.2686 43.7974 10.9639 cv
43.1655 11.3867 41.8755 11.9844 40.3647 11.2383 cv
40.9868 11.2686 41.6274 11.3174 42.2642 10.5918 cv
41.5337 10.8154 39.6704 11.3936 38.2954 9.76758 cv
37.0552 8.30371 38.6958 8.08496 39.5122 8.6748 cv
40.3579 9.28027 40.7065 9.7334 40.8677 10.3223 cv
41.1108 9.42676 39.8286 7.3291 38.1978 7.67676 cv
36.5669 8.02637 38.0581 10.7383 39.147 11.2627 cv
39.563 11.4619 40.5845 12.3818 43.897 12.3574 cv
44.4292 12.6221 44.9995 12.9189 46.2837 13.0322 cv
45.6509 13.7021 44.0923 13.6035 43.8247 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
36.2798 4.99902 mo
36.4028 5.08203 36.7075 5.25098 37.019 5.20215 cv
36.7769 5.38281 36.2915 5.24512 36.0854 5.12988 cv
36.061 5.14746 36.0396 5.16504 36.0161 5.18457 cv
35.9263 5.24512 35.8423 5.25488 35.8198 5.27246 cv
35.7856 5.30273 35.8003 5.34863 35.8003 5.34863 cv
35.9312 5.30273 36.2485 5.50488 36.2485 5.50488 cv
36.7212 5.77734 37.0942 5.53125 37.2427 5.46191 cv
37.3911 5.39355 37.4731 5.34668 37.6431 5.2373 cv
37.2075 4.66504 36.686 4.75879 36.2798 4.99902 cv
cp
0 0 0 1 nzopmsc
f
43.8286 13.3232 mo
44.1704 13.8711 44.9731 14.2949 44.8032 16.1377 cv
43.9497 14.668 41.6079 12.5488 40.9536 12.4277 cv
40.5894 13.4229 41.3022 15.7783 41.4966 16.1523 cv
40.7427 15.7783 40.2798 15.4385 39.98 13.9697 cv
39.6636 14.6934 39.5288 15.6182 38.0513 16.1084 cv
38.4907 15.3096 39.1147 14.6631 39.0542 12.2275 cv
38.2368 11.749 36.5591 11.9346 36.3374 7.40137 cv
36.2896 6.25586 35.813 5.93848 34.9585 5.3623 cv
34.9585 5.3623 35.6079 4.89941 36.0981 4.5127 cv
36.7153 4.02832 38.6646 3.73535 38.7622 6.74902 cv
40.2427 7.59668 40.2505 7.87402 41.3716 8.95703 cv
42.4458 9.99121 44.8813 11.3291 46.0503 11.3613 cv
45.0767 11.708 43.8286 11.7295 43.1958 11.7295 cv
43.5356 11.4307 43.6987 11.2607 43.8032 10.958 cv
43.1704 11.3809 41.8804 11.9785 40.3696 11.2334 cv
40.9927 11.2627 41.6333 11.3105 42.269 10.585 cv
41.5405 10.8096 39.6763 11.3877 38.2993 9.76172 cv
37.061 8.29688 38.6997 8.0791 39.5181 8.66699 cv
40.3628 9.27441 40.7114 9.72754 40.8726 10.3174 cv
41.1157 9.4209 39.8345 7.32129 38.2026 7.66992 cv
36.5718 8.02051 38.062 10.7334 39.1528 11.2568 cv
39.5669 11.4561 40.5894 12.376 43.9019 12.3525 cv
44.436 12.6162 45.0063 12.9131 46.2886 13.0244 cv
45.6548 13.6963 44.0972 13.5967 43.8286 13.3232 cv
cp
37.1206 14.0752 mo
37.3403 13.6826 37.7271 13.0361 37.7183 12.2939 cv
37.9458 12.457 38.1587 12.5664 38.3325 12.623 cv
38.3843 13.0811 38.3813 13.4971 38.3403 13.874 cv
38.1333 13.9736 37.7769 14.0693 37.1206 14.0752 cv
cp
45.2183 8.8584 mo
44.4614 9.63184 43.8599 9.80664 43.6821 9.84473 cv
43.0913 9.50293 42.6626 9.19434 42.5142 9.06543 cv
42.438 9.00098 42.3677 8.93848 42.3013 8.87793 cv
42.729 8.94238 44.1948 9.12598 45.2183 8.8584 cv
cp
47.6685 12.3994 mo
46.3364 12.7754 45.0728 12.1777 45.0532 12.1611 cv
46.354 11.874 47.0005 11.6777 47.6421 11.0693 cv
46.5435 11.1201 45.356 10.6982 44.3911 10.2256 cv
44.6958 10.0498 45.8237 9.33105 46.1919 8.17969 cv
45.6831 8.37402 42.3462 8.59277 41.645 8.21777 cv
41.063 7.57617 40.7485 7.10547 39.3755 6.33301 cv
38.7681 2.52441 36.312 3.55762 35.6011 4.36621 cv
35.1724 4.85254 34.1997 5.29004 34.1997 5.29004 cv
35.7349 6.09863 35.7505 6.77051 35.8413 7.49512 cv
35.7368 9.48535 36.3589 10.8438 37.0542 11.667 cv
37.2505 12.1846 37.3843 13.208 36.3374 14.4639 cv
37.1763 14.5811 37.8892 14.4834 38.2524 14.4102 cv
38.0454 15.3252 37.6118 15.9775 37.2505 16.4482 cv
37.812 16.585 39.3794 16.2197 39.9097 15.6611 cv
40.4927 16.0625 41.4673 16.9326 42.8071 16.8389 cv
41.3687 15.6963 41.4673 13.9453 41.5747 13.4873 cv
42.6597 14.2949 44.3638 15.9883 45.1177 17.5547 cv
45.4858 15.7627 45.3872 15.3652 45.27 14.248 cv
46.312 13.7705 47.02 13.3486 47.6685 12.3994 cv
cp
f
20.3799 8.86426 mo
19.6235 9.63965 19.02 9.8125 18.8433 9.85156 cv
18.2544 9.50977 17.8242 9.2002 17.6758 9.07129 cv
17.5996 9.00684 17.5298 8.94629 17.4624 8.88379 cv
17.8906 8.94824 19.3555 9.13184 20.3799 8.86426 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
20.3799 8.86426 mo
19.6235 9.63965 19.02 9.8125 18.8433 9.85156 cv
18.2544 9.50977 17.8242 9.2002 17.6758 9.07129 cv
17.5996 9.00684 17.5298 8.94629 17.4624 8.88379 cv
17.8906 8.94824 19.3555 9.13184 20.3799 8.86426 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
12.2813 14.0811 mo
12.5015 13.6885 12.8892 13.042 12.8799 12.2998 cv
13.1055 12.4639 13.3203 12.5732 13.4937 12.6299 cv
13.5464 13.0869 13.5425 13.5029 13.5015 13.8789 cv
13.2959 13.9805 12.9385 14.0742 12.2813 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
12.2813 14.0811 mo
12.5015 13.6885 12.8892 13.042 12.8799 12.2998 cv
13.1055 12.4639 13.3203 12.5732 13.4937 12.6299 cv
13.5464 13.0869 13.5425 13.5029 13.5015 13.8789 cv
13.2959 13.9805 12.9385 14.0742 12.2813 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
18.9893 13.3291 mo
19.3301 13.8779 20.1338 14.3008 19.9639 16.1436 cv
19.1108 14.6748 16.7705 12.5557 16.1152 12.4346 cv
15.75 13.4287 16.4629 15.7861 16.6582 16.1592 cv
15.9028 15.7861 15.439 15.4453 15.1406 13.9766 cv
14.8247 14.7002 14.6924 15.624 13.2139 16.1143 cv
13.6504 15.3154 14.2764 14.668 14.2163 12.2334 cv
13.397 11.7549 11.7207 11.9404 11.4976 7.40723 cv
11.4507 6.2627 10.9707 5.94434 10.1143 5.36816 cv
10.1143 5.36816 10.7651 4.90527 11.2607 4.51855 cv
11.8774 4.03418 13.8257 3.74316 13.9238 6.75488 cv
15.4053 7.60254 15.4131 7.87988 16.5332 8.96289 cv
17.606 9.99707 20.043 11.335 21.2114 11.3662 cv
20.2368 11.7158 18.9893 11.7354 18.3555 11.7354 cv
18.6982 11.4365 18.8599 11.2686 18.9648 10.9639 cv
18.3325 11.3867 17.042 11.9844 15.5317 11.2383 cv
16.1528 11.2686 16.7944 11.3174 17.4312 10.5918 cv
16.7002 10.8154 14.8374 11.3936 13.4604 9.76758 cv
12.2231 8.30371 13.8608 8.08496 14.6797 8.6748 cv
15.5239 9.28027 15.8711 9.7334 16.0347 10.3223 cv
16.2773 9.42676 14.9946 7.3291 13.3638 7.67676 cv
11.7314 8.02637 13.2231 10.7383 14.3135 11.2627 cv
14.7271 11.4619 15.75 12.3818 19.063 12.3574 cv
19.5952 12.6221 20.167 12.9189 21.4487 13.0322 cv
20.8174 13.7021 19.2578 13.6035 18.9893 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
18.9893 13.3291 mo
19.3301 13.8779 20.1338 14.3008 19.9639 16.1436 cv
19.1108 14.6748 16.7705 12.5557 16.1152 12.4346 cv
15.75 13.4287 16.4629 15.7861 16.6582 16.1592 cv
15.9028 15.7861 15.439 15.4453 15.1406 13.9766 cv
14.8247 14.7002 14.6924 15.624 13.2139 16.1143 cv
13.6504 15.3154 14.2764 14.668 14.2163 12.2334 cv
13.397 11.7549 11.7207 11.9404 11.4976 7.40723 cv
11.4507 6.2627 10.9707 5.94434 10.1143 5.36816 cv
10.1143 5.36816 10.7651 4.90527 11.2607 4.51855 cv
11.8774 4.03418 13.8257 3.74316 13.9238 6.75488 cv
15.4053 7.60254 15.4131 7.87988 16.5332 8.96289 cv
17.606 9.99707 20.043 11.335 21.2114 11.3662 cv
20.2368 11.7158 18.9893 11.7354 18.3555 11.7354 cv
18.6982 11.4365 18.8599 11.2686 18.9648 10.9639 cv
18.3325 11.3867 17.042 11.9844 15.5317 11.2383 cv
16.1528 11.2686 16.7944 11.3174 17.4312 10.5918 cv
16.7002 10.8154 14.8374 11.3936 13.4604 9.76758 cv
12.2231 8.30371 13.8608 8.08496 14.6797 8.6748 cv
15.5239 9.28027 15.8711 9.7334 16.0347 10.3223 cv
16.2773 9.42676 14.9946 7.3291 13.3638 7.67676 cv
11.7314 8.02637 13.2231 10.7383 14.3135 11.2627 cv
14.7271 11.4619 15.75 12.3818 19.063 12.3574 cv
19.5952 12.6221 20.167 12.9189 21.4487 13.0322 cv
20.8174 13.7021 19.2578 13.6035 18.9893 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
11.4443 4.99902 mo
11.5684 5.08203 11.874 5.25098 12.1851 5.20215 cv
11.9429 5.38281 11.459 5.24512 11.2524 5.12988 cv
11.2261 5.14746 11.2017 5.16504 11.1787 5.18457 cv
11.0879 5.24512 11.0039 5.25488 10.9814 5.27246 cv
10.9458 5.30273 10.9629 5.34863 10.9629 5.34863 cv
11.0918 5.30273 11.4155 5.50488 11.4155 5.50488 cv
11.8862 5.77734 12.2607 5.53125 12.4092 5.46191 cv
12.5586 5.39355 12.6387 5.34668 12.8096 5.2373 cv
12.374 4.66504 11.8511 4.75879 11.4443 4.99902 cv
cp
0 0 0 1 nzopmsc
f
18.9946 13.3232 mo
19.335 13.8711 20.1387 14.2949 19.9678 16.1377 cv
19.1157 14.668 16.7754 12.5488 16.1206 12.4277 cv
15.7563 13.4229 16.4688 15.7783 16.6641 16.1523 cv
15.9082 15.7783 15.4453 15.4385 15.1465 13.9697 cv
14.8296 14.6934 14.6948 15.6182 13.2183 16.1084 cv
13.6558 15.3096 14.2803 14.6631 14.2202 12.2275 cv
13.4028 11.749 11.7256 11.9346 11.5034 7.40137 cv
11.4565 6.25586 10.9756 5.93848 10.1206 5.3623 cv
10.1206 5.3623 10.7695 4.89941 11.2661 4.5127 cv
11.8823 4.02832 13.8311 3.73535 13.9297 6.74902 cv
15.4102 7.59668 15.4165 7.87402 16.5371 8.95703 cv
17.6104 9.99121 20.0498 11.3291 21.2153 11.3613 cv
20.2432 11.708 18.9946 11.7295 18.3608 11.7295 cv
18.7007 11.4307 18.8647 11.2607 18.9702 10.958 cv
18.3364 11.3809 17.0459 11.9785 15.5356 11.2334 cv
16.1587 11.2627 16.7988 11.3105 17.436 10.585 cv
16.7046 10.8096 14.8408 11.3877 13.4658 9.76172 cv
12.2271 8.29688 13.8662 8.0791 14.6831 8.66699 cv
15.5283 9.27441 15.8779 9.72754 16.0386 10.3174 cv
16.2813 9.4209 14.9995 7.32129 13.3687 7.66992 cv
11.7368 8.02051 13.2285 10.7334 14.3174 11.2568 cv
14.7319 11.4561 15.7563 12.376 19.0674 12.3525 cv
19.6006 12.6162 20.1719 12.9131 21.4546 13.0244 cv
20.8208 13.6963 19.2627 13.5967 18.9946 13.3232 cv
cp
12.2861 14.0752 mo
12.5063 13.6826 12.8945 13.0361 12.8838 12.2939 cv
13.1113 12.457 13.3242 12.5664 13.4966 12.623 cv
13.5498 13.0811 13.5479 13.4971 13.5073 13.874 cv
13.3003 13.9736 12.9434 14.0693 12.2861 14.0752 cv
cp
20.3853 8.8584 mo
19.6279 9.63184 19.0249 9.80664 18.8462 9.84473 cv
18.2583 9.50293 17.8281 9.19434 17.6802 9.06543 cv
17.6035 9.00098 17.5356 8.93848 17.4673 8.87793 cv
17.8965 8.94238 19.3613 9.12598 20.3853 8.8584 cv
cp
22.8354 12.3994 mo
21.5024 12.7754 20.2373 12.1777 20.2192 12.1611 cv
21.52 11.874 22.166 11.6777 22.8066 11.0693 cv
21.7104 11.1201 20.5225 10.6982 19.5581 10.2256 cv
19.8608 10.0498 20.9893 9.33105 21.3594 8.17969 cv
20.8486 8.37402 17.5132 8.59277 16.8125 8.21777 cv
16.229 7.57617 15.915 7.10547 14.543 6.33301 cv
13.9336 2.52441 11.479 3.55762 10.7622 4.36621 cv
10.3345 4.85254 9.36182 5.29004 9.36182 5.29004 cv
10.8955 6.09863 10.9121 6.77051 11.001 7.49512 cv
10.8984 9.48535 11.5234 10.8438 12.2202 11.667 cv
12.417 12.1846 12.5508 13.208 11.5044 14.4639 cv
12.3423 14.5811 13.0576 14.4834 13.4175 14.4102 cv
13.2129 15.3252 12.7769 15.9775 12.417 16.4482 cv
12.979 16.585 14.5469 16.2197 15.0752 15.6611 cv
15.6572 16.0625 16.6323 16.9326 17.9727 16.8389 cv
16.5352 15.6963 16.6323 13.9453 16.7407 13.4873 cv
17.8262 14.2949 19.5298 15.9883 20.2847 17.5547 cv
20.6504 15.7627 20.5527 15.3652 20.4351 14.248 cv
21.4785 13.7705 22.1846 13.3486 22.8354 12.3994 cv
cp
f
49.5708 20.0283 mo
7.09766 20.0283 li
false sop
0 0 0 0 cmyk
f
0.4668 lw
49.5708 20.0283 mo
7.09766 20.0283 li
@
26.8545 22.751 mo
7.09766 22.751 li
f
26.8545 22.751 mo
7.09766 22.751 li
@
49.356 22.751 mo
29.5986 22.751 li
f
49.356 22.751 mo
29.5986 22.751 li
@
49.5708 25.4707 mo
7.09766 25.4707 li
f
49.5708 25.4707 mo
7.09766 25.4707 li
@
49.5708 28.1904 mo
7.25146 28.2363 li
f
49.5708 28.1904 mo
7.25146 28.2363 li
@
48.9536 33.6357 mo
7.73389 33.6357 li
f
48.9536 33.6357 mo
7.73389 33.6357 li
@
48.3345 36.3555 mo
8.62305 36.3555 li
f
48.3345 36.3555 mo
8.62305 36.3555 li
@
47.0981 39.0771 mo
10.0024 39.0771 li
f
47.0981 39.0771 mo
10.0024 39.0771 li
@
45.7173 41.7988 mo
11.2642 42.2246 li
f
45.7173 41.7988 mo
11.2642 42.2246 li
@
43.5474 44.52 mo
13.1211 44.52 li
f
43.5474 44.52 mo
13.1211 44.52 li
@
41.23 47.2407 mo
15.8999 47.2407 li
f
41.23 47.2407 mo
15.8999 47.2407 li
@
37.5239 49.9614 mo
19.6074 49.9614 li
f
37.5239 49.9614 mo
19.6074 49.9614 li
@
49.5708 30.9141 mo
7.04346 30.9141 li
f
49.5708 30.9141 mo
7.04346 30.9141 li
@
48.854 1.21973 mo
48.854 2.38574 48.854 28.9482 48.854 28.9482 cv
48.854 43.5024 35.3833 52.7837 28.3389 52.7837 cv
21.2588 52.7837 7.71924 43.5024 7.71924 28.9482 cv
7.71924 28.9482 7.71924 2.38574 7.71924 1.21973 cv
8.88574 1.21973 47.688 1.21973 48.854 1.21973 cv
cp
49.4634 0 mo
6.50049 0 li
6.50049 28.9482 li
6.50049 44.2466 20.8403 54.0024 28.3389 54.0024 cv
35.8013 54.0024 50.0728 44.2466 50.0728 28.9482 cv
50.0728 0 li
49.4634 0 li
cp
true sop
0 0 0 1 nzopmsc
f
1.2183 lw
50.0103 19.7568 mo
7.65723 19.7568 li
@
20.9048 24.5176 mo
22.8599 23.2041 24.4224 22.6533 25.6099 22.7939 cv
26.1104 22.9248 26.3359 23.293 26.4575 23.7373 cv
25.9199 23.6006 25.3052 23.5635 24.6489 23.6475 cv
24.7075 24.2471 li
25.4014 24.1943 26.0313 24.2783 26.583 24.4795 cv
26.6816 25.333 li
26.1309 25.1582 25.4893 25.1045 24.7983 25.1855 cv
24.8555 25.7715 li
25.5654 25.7285 26.208 25.8369 26.7676 26.0811 cv
26.8657 26.9229 li
26.3101 26.708 25.6563 26.6367 24.9468 26.7119 cv
25.002 27.2852 li
25.731 27.2539 26.3838 27.3896 26.9541 27.6904 cv
27.0503 28.5225 li
26.4902 28.2588 25.8232 28.166 25.0972 28.2344 cv
25.1519 28.7979 li
25.8975 28.7803 26.5596 28.9512 27.1421 29.3203 cv
27.2378 30.1416 li
26.6709 29.8115 25.9902 29.6904 25.2456 29.751 cv
25.2988 30.3066 li
26.0591 30.3057 26.7324 30.5225 27.3345 30.9766 cv
27.4272 31.7803 li
26.8477 31.3633 26.1548 31.2021 25.3916 31.2529 cv
25.4443 31.8174 li
26.2207 31.8369 26.9019 32.1104 27.5293 32.6689 cv
27.6211 33.46 li
27.0225 32.9404 26.3164 32.7354 25.5366 32.7676 cv
25.5928 33.3271 li
26.3774 33.376 27.0654 33.7139 27.7295 34.3955 cv
27.8198 35.1768 li
27.1934 34.5361 26.4761 34.2764 25.6851 34.29 cv
25.7427 34.8584 li
26.5259 34.9385 27.2217 35.3408 27.9331 36.1572 cv
28.0327 37.0166 li
26.3481 35.001 24.2002 35.8838 21.7695 37.4775 cv
20.1978 38.5107 18.5137 39.1797 17.3237 38.9404 cv
15.9746 24.8867 li
16.8774 25.5967 18.6387 26.04 20.9048 24.5176 cv
cp
false sop
0 0 0 0 cmyk
f
0.0359 lw
20.9048 24.5176 mo
22.8599 23.2041 24.4224 22.6533 25.6099 22.7939 cv
26.1104 22.9248 26.3359 23.293 26.4575 23.7373 cv
25.9199 23.6006 25.3052 23.5635 24.6489 23.6475 cv
24.7075 24.2471 li
25.4014 24.1943 26.0313 24.2783 26.583 24.4795 cv
26.6816 25.333 li
26.1309 25.1582 25.4893 25.1045 24.7983 25.1855 cv
24.8555 25.7715 li
25.5654 25.7285 26.208 25.8369 26.7676 26.0811 cv
26.8657 26.9229 li
26.3101 26.708 25.6563 26.6367 24.9468 26.7119 cv
25.002 27.2852 li
25.731 27.2539 26.3838 27.3896 26.9541 27.6904 cv
27.0503 28.5225 li
26.4902 28.2588 25.8232 28.166 25.0972 28.2344 cv
25.1519 28.7979 li
25.8975 28.7803 26.5596 28.9512 27.1421 29.3203 cv
27.2378 30.1416 li
26.6709 29.8115 25.9902 29.6904 25.2456 29.751 cv
25.2988 30.3066 li
26.0591 30.3057 26.7324 30.5225 27.3345 30.9766 cv
27.4272 31.7803 li
26.8477 31.3633 26.1548 31.2021 25.3916 31.2529 cv
25.4443 31.8174 li
26.2207 31.8369 26.9019 32.1104 27.5293 32.6689 cv
27.6211 33.46 li
27.0225 32.9404 26.3164 32.7354 25.5366 32.7676 cv
25.5928 33.3271 li
26.3774 33.376 27.0654 33.7139 27.7295 34.3955 cv
27.8198 35.1768 li
27.1934 34.5361 26.4761 34.2764 25.6851 34.29 cv
25.7427 34.8584 li
26.5259 34.9385 27.2217 35.3408 27.9331 36.1572 cv
28.0327 37.0166 li
26.3481 35.001 24.2002 35.8838 21.7695 37.4775 cv
20.1978 38.5107 18.5137 39.1797 17.3237 38.9404 cv
15.9746 24.8867 li
16.8774 25.5967 18.6387 26.04 20.9048 24.5176 cv
cp
@
28.4575 36.2178 mo
29.2656 35.1787 30.0396 34.6797 30.9214 34.5889 cv
30.98 34.2842 li
30.0259 34.2666 29.1753 34.6455 28.4678 35.6152 cv
28.4834 34.6455 li
29.2886 33.6123 30.1099 33.1172 31.0708 33.0596 cv
31.1274 32.7607 li
30.0923 32.7158 29.1895 33.0947 28.4937 34.0654 cv
28.5103 33.0723 li
29.3086 32.0576 30.1802 31.5752 31.2192 31.5488 cv
31.2739 31.2461 li
30.1606 31.1709 29.1992 31.5479 28.5195 32.5088 cv
28.5361 31.499 li
29.3247 30.5049 30.2515 30.0381 31.3647 30.0381 cv
31.4204 29.7451 li
30.2319 29.6455 29.209 30.0127 28.5459 30.9531 cv
28.562 29.9238 li
29.3413 28.958 30.3228 28.499 31.5122 28.5293 cv
31.5688 28.2275 li
30.3071 28.1084 29.2217 28.4736 28.5713 29.3857 cv
28.5889 28.3486 li
29.3594 27.4131 30.397 26.9619 31.6587 27.0166 cv
31.7163 26.7061 li
30.3813 26.5625 29.2373 26.9375 28.5977 27.8252 cv
28.6143 26.7725 li
29.376 25.8701 30.4722 25.4209 31.8071 25.5039 cv
31.8657 25.1787 li
30.4595 25.0127 29.2573 25.3994 28.624 26.2588 cv
28.6406 25.1973 li
29.396 24.3252 30.5474 23.8682 31.9556 23.9775 cv
32.0151 23.6406 li
30.5708 23.457 29.3262 23.8418 28.6802 24.6445 cv
28.7427 24.3838 28.9126 23.8721 29.3452 23.457 cv
29.3413 23.458 29.3379 23.459 29.334 23.46 cv
30.7681 22.2539 33.2446 22.8037 35.7837 24.5107 cv
38.0532 26.0342 39.8149 25.5869 40.7153 24.876 cv
39.3667 38.9346 li
38.1763 39.1719 36.4937 38.5029 34.9204 37.4717 cv
32.3843 35.8066 30.1548 34.9189 28.4395 37.2939 cv
28.4575 36.2178 li
cp
f
28.4575 36.2178 mo
29.2656 35.1787 30.0396 34.6797 30.9214 34.5889 cv
30.98 34.2842 li
30.0259 34.2666 29.1753 34.6455 28.4678 35.6152 cv
28.4834 34.6455 li
29.2886 33.6123 30.1099 33.1172 31.0708 33.0596 cv
31.1274 32.7607 li
30.0923 32.7158 29.1895 33.0947 28.4937 34.0654 cv
28.5103 33.0723 li
29.3086 32.0576 30.1802 31.5752 31.2192 31.5488 cv
31.2739 31.2461 li
30.1606 31.1709 29.1992 31.5479 28.5195 32.5088 cv
28.5361 31.499 li
29.3247 30.5049 30.2515 30.0381 31.3647 30.0381 cv
31.4204 29.7451 li
30.2319 29.6455 29.209 30.0127 28.5459 30.9531 cv
28.562 29.9238 li
29.3413 28.958 30.3228 28.499 31.5122 28.5293 cv
31.5688 28.2275 li
30.3071 28.1084 29.2217 28.4736 28.5713 29.3857 cv
28.5889 28.3486 li
29.3594 27.4131 30.397 26.9619 31.6587 27.0166 cv
31.7163 26.7061 li
30.3813 26.5625 29.2373 26.9375 28.5977 27.8252 cv
28.6143 26.7725 li
29.376 25.8701 30.4722 25.4209 31.8071 25.5039 cv
31.8657 25.1787 li
30.4595 25.0127 29.2573 25.3994 28.624 26.2588 cv
28.6406 25.1973 li
29.396 24.3252 30.5474 23.8682 31.9556 23.9775 cv
32.0151 23.6406 li
30.5708 23.457 29.3262 23.8418 28.6802 24.6445 cv
28.7427 24.3838 28.9126 23.8721 29.3452 23.457 cv
29.3413 23.458 29.3379 23.459 29.334 23.46 cv
30.7681 22.2539 33.2446 22.8037 35.7837 24.5107 cv
38.0532 26.0342 39.8149 25.5869 40.7153 24.876 cv
39.3667 38.9346 li
38.1763 39.1719 36.4937 38.5029 34.9204 37.4717 cv
32.3843 35.8066 30.1548 34.9189 28.4395 37.2939 cv
28.4575 36.2178 li
cp
@
28.4678 43.1626 mo
27.3813 43.1626 26.4365 42.8931 26.0518 42.3867 cv
27.5679 41.8867 28.1045 41.1221 28.2378 40.208 cv
28.4233 41.1094 29.1201 41.8643 30.7319 42.3652 cv
30.4106 42.8853 29.5693 43.1626 28.4678 43.1626 cv
cp
0 0.3 0.94 0 cmyk
f
0.144 lw
28.4678 43.1626 mo
27.3813 43.1626 26.4365 42.8931 26.0518 42.3867 cv
27.5679 41.8867 28.1045 41.1221 28.2378 40.208 cv
28.4233 41.1094 29.1201 41.8643 30.7319 42.3652 cv
30.4106 42.8853 29.5693 43.1626 28.4678 43.1626 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
35.7378 38.7549 mo
34.4575 38.1396 33.1274 37.7705 32.397 38.0059 cv
32.3696 38.0049 32.3452 38.0244 32.3413 38.0527 cv
32.3394 38.0801 32.3638 38.1006 32.3911 38.1045 cv
33.2026 38.0381 34.6001 38.5156 35.6431 39.1143 cv
36.0122 39.3291 36.3911 39.5068 36.7622 39.6514 cv
36.356 39.5732 35.98 39.4736 35.6821 39.3496 cv
34.8628 39.0068 34.2358 38.751 33.6763 38.708 cv
33.647 38.7061 33.6226 38.7246 33.6206 38.7529 cv
33.6157 38.7783 33.6304 38.8018 33.6587 38.8057 cv
34.2339 38.9932 34.9409 39.4453 35.6821 39.7813 cv
36.0679 39.9551 36.4907 40.0898 36.9194 40.1924 cv
36.3423 40.1436 35.8608 40.0938 35.644 40.0615 cv
34.9585 39.9541 34.354 39.8877 33.8169 39.7783 cv
33.7876 39.7764 33.7583 39.7939 33.7563 39.8213 cv
33.7534 39.8496 33.772 39.876 33.8032 39.877 cv
34.3521 40.1113 34.9263 40.3145 35.6821 40.543 cv
36.1021 40.6709 36.9048 40.8057 37.7534 40.8936 cv
36.9751 40.8643 36.1851 40.8213 35.6021 40.7686 cv
34.6841 40.6904 33.7876 40.5576 33.0962 40.3877 cv
33.0688 40.3857 33.0396 40.4033 33.0356 40.4316 cv
33.0317 40.459 33.0532 40.4854 33.0786 40.4873 cv
33.7212 40.8213 34.5923 41.1182 35.5972 41.2646 cv
35.9204 41.3105 36.2886 41.3564 36.686 41.3975 cv
36.2241 41.3936 35.8286 41.3818 35.5708 41.3604 cv
34.2837 41.2529 32.9146 40.8076 32.0317 40.4561 cv
32.0103 40.4424 31.9712 40.4463 31.9556 40.4697 cv
31.9438 40.4932 31.9536 40.5254 31.9771 40.5381 cv
32.7974 41.0986 34.6704 41.9033 36.7798 42.0117 cv
32.0718 42 29.1665 40.8428 28.2827 39.1436 cv
27.6904 40.2822 26.415 41.1748 24.2261 41.6455 cv
25.1543 41.3486 25.9038 40.9922 26.374 40.6729 cv
26.4009 40.6572 26.4131 40.6182 26.3975 40.5908 cv
26.3804 40.5635 26.3369 40.5586 26.312 40.5732 cv
25.2681 40.9893 23.6548 41.5166 22.1382 41.6416 cv
21.834 41.665 21.3643 41.6797 20.8174 41.6846 cv
21.2861 41.6367 21.7212 41.583 22.1011 41.5283 cv
23.2881 41.3545 24.3193 41.0068 25.0723 40.6113 cv
25.105 40.6104 25.1294 40.5762 25.126 40.543 cv
25.1216 40.5127 25.0869 40.4902 25.0537 40.4932 cv
24.2402 40.6924 23.1792 40.8467 22.0972 40.9463 cv
21.415 41.0049 20.4878 41.0557 19.5728 41.0889 cv
20.5693 40.9854 21.5117 40.8271 22.0049 40.6777 cv
22.896 40.4111 23.5732 40.1689 24.2217 39.8916 cv
24.2549 39.8877 24.2813 39.8604 24.2788 39.8271 cv
24.2734 39.7939 24.2402 39.7705 24.207 39.7744 cv
23.5703 39.9033 22.8564 39.9834 22.0527 40.1084 cv
21.7964 40.1475 21.2256 40.207 20.5439 40.2627 cv
21.0508 40.1436 21.5503 39.9844 22.0049 39.7783 cv
22.8794 39.3838 23.7114 38.8496 24.3906 38.6279 cv
24.4238 38.626 24.4404 38.6006 24.438 38.5664 cv
24.438 38.5664 24.4375 38.5664 24.4375 38.5654 cv
24.4487 38.5752 24.4634 38.5801 24.481 38.5791 cv
24.5127 38.5752 24.5347 38.5449 24.5332 38.5127 cv
24.5283 38.4814 24.4995 38.458 24.4663 38.4619 cv
24.4365 38.4629 24.4136 38.4932 24.416 38.5244 cv
24.4175 38.54 24.4243 38.5498 24.4341 38.5596 cv
24.4243 38.5322 24.3989 38.5127 24.3701 38.5156 cv
23.7114 38.5635 22.9702 38.8652 22.0049 39.2705 cv
21.6558 39.417 21.2139 39.5322 20.7363 39.624 cv
21.1738 39.4541 21.6187 39.2451 22.0547 38.9932 cv
23.2788 38.2881 24.9282 37.7256 25.8857 37.8027 cv
25.9165 37.7988 25.9458 37.7715 25.9438 37.7393 cv
25.939 37.71 25.9111 37.6816 25.8784 37.6865 cv
25.0166 37.4092 23.4512 37.8428 21.9399 38.5674 cv
19.5054 39.7393 17.3774 39.5498 17.0376 39.0732 cv
17.0522 39.0693 li
17.4316 39.4541 19.5493 39.3281 21.9565 38.1689 cv
25.0298 36.6924 26.4155 36.2412 28.333 38.8213 cv
28.3428 38.8447 li
28.3428 38.833 li
30.2622 36.2393 31.6489 36.6895 34.7271 38.1689 cv
37.228 39.373 38.6938 39.4502 39.4478 39.0186 cv
39.5786 39.0537 li
38.9868 39.415 37.4819 39.5947 35.7378 38.7549 cv
cp
false sop
0 0.3 0.94 0 cmyk
f
35.7378 38.7549 mo
34.4575 38.1396 33.1274 37.7705 32.397 38.0059 cv
32.3696 38.0049 32.3452 38.0244 32.3413 38.0527 cv
32.3394 38.0801 32.3638 38.1006 32.3911 38.1045 cv
33.2026 38.0381 34.6001 38.5156 35.6431 39.1143 cv
36.0122 39.3291 36.3911 39.5068 36.7622 39.6514 cv
36.356 39.5732 35.98 39.4736 35.6821 39.3496 cv
34.8628 39.0068 34.2358 38.751 33.6763 38.708 cv
33.647 38.7061 33.6226 38.7246 33.6206 38.7529 cv
33.6157 38.7783 33.6304 38.8018 33.6587 38.8057 cv
34.2339 38.9932 34.9409 39.4453 35.6821 39.7813 cv
36.0679 39.9551 36.4907 40.0898 36.9194 40.1924 cv
36.3423 40.1436 35.8608 40.0938 35.644 40.0615 cv
34.9585 39.9541 34.354 39.8877 33.8169 39.7783 cv
33.7876 39.7764 33.7583 39.7939 33.7563 39.8213 cv
33.7534 39.8496 33.772 39.876 33.8032 39.877 cv
34.3521 40.1113 34.9263 40.3145 35.6821 40.543 cv
36.1021 40.6709 36.9048 40.8057 37.7534 40.8936 cv
36.9751 40.8643 36.1851 40.8213 35.6021 40.7686 cv
34.6841 40.6904 33.7876 40.5576 33.0962 40.3877 cv
33.0688 40.3857 33.0396 40.4033 33.0356 40.4316 cv
33.0317 40.459 33.0532 40.4854 33.0786 40.4873 cv
33.7212 40.8213 34.5923 41.1182 35.5972 41.2646 cv
35.9204 41.3105 36.2886 41.3564 36.686 41.3975 cv
36.2241 41.3936 35.8286 41.3818 35.5708 41.3604 cv
34.2837 41.2529 32.9146 40.8076 32.0317 40.4561 cv
32.0103 40.4424 31.9712 40.4463 31.9556 40.4697 cv
31.9438 40.4932 31.9536 40.5254 31.9771 40.5381 cv
32.7974 41.0986 34.6704 41.9033 36.7798 42.0117 cv
32.0718 42 29.1665 40.8428 28.2827 39.1436 cv
27.6904 40.2822 26.415 41.1748 24.2261 41.6455 cv
25.1543 41.3486 25.9038 40.9922 26.374 40.6729 cv
26.4009 40.6572 26.4131 40.6182 26.3975 40.5908 cv
26.3804 40.5635 26.3369 40.5586 26.312 40.5732 cv
25.2681 40.9893 23.6548 41.5166 22.1382 41.6416 cv
21.834 41.665 21.3643 41.6797 20.8174 41.6846 cv
21.2861 41.6367 21.7212 41.583 22.1011 41.5283 cv
23.2881 41.3545 24.3193 41.0068 25.0723 40.6113 cv
25.105 40.6104 25.1294 40.5762 25.126 40.543 cv
25.1216 40.5127 25.0869 40.4902 25.0537 40.4932 cv
24.2402 40.6924 23.1792 40.8467 22.0972 40.9463 cv
21.415 41.0049 20.4878 41.0557 19.5728 41.0889 cv
20.5693 40.9854 21.5117 40.8271 22.0049 40.6777 cv
22.896 40.4111 23.5732 40.1689 24.2217 39.8916 cv
24.2549 39.8877 24.2813 39.8604 24.2788 39.8271 cv
24.2734 39.7939 24.2402 39.7705 24.207 39.7744 cv
23.5703 39.9033 22.8564 39.9834 22.0527 40.1084 cv
21.7964 40.1475 21.2256 40.207 20.5439 40.2627 cv
21.0508 40.1436 21.5503 39.9844 22.0049 39.7783 cv
22.8794 39.3838 23.7114 38.8496 24.3906 38.6279 cv
24.4238 38.626 24.4404 38.6006 24.438 38.5664 cv
24.438 38.5664 24.4375 38.5664 24.4375 38.5654 cv
24.4487 38.5752 24.4634 38.5801 24.481 38.5791 cv
24.5127 38.5752 24.5347 38.5449 24.5332 38.5127 cv
24.5283 38.4814 24.4995 38.458 24.4663 38.4619 cv
24.4365 38.4629 24.4136 38.4932 24.416 38.5244 cv
24.4175 38.54 24.4243 38.5498 24.4341 38.5596 cv
24.4243 38.5322 24.3989 38.5127 24.3701 38.5156 cv
23.7114 38.5635 22.9702 38.8652 22.0049 39.2705 cv
21.6558 39.417 21.2139 39.5322 20.7363 39.624 cv
21.1738 39.4541 21.6187 39.2451 22.0547 38.9932 cv
23.2788 38.2881 24.9282 37.7256 25.8857 37.8027 cv
25.9165 37.7988 25.9458 37.7715 25.9438 37.7393 cv
25.939 37.71 25.9111 37.6816 25.8784 37.6865 cv
25.0166 37.4092 23.4512 37.8428 21.9399 38.5674 cv
19.5054 39.7393 17.3774 39.5498 17.0376 39.0732 cv
17.0522 39.0693 li
17.4316 39.4541 19.5493 39.3281 21.9565 38.1689 cv
25.0298 36.6924 26.4155 36.2412 28.333 38.8213 cv
28.3428 38.8447 li
28.3428 38.833 li
30.2622 36.2393 31.6489 36.6895 34.7271 38.1689 cv
37.228 39.373 38.6938 39.4502 39.4478 39.0186 cv
39.5786 39.0537 li
38.9868 39.415 37.4819 39.5947 35.7378 38.7549 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
16.1021 37.4639 mo
15.1245 30.6172 li
15.1201 30.5889 15.0957 30.5693 15.0674 30.5723 cv
15.0371 30.5752 15.0176 30.6006 15.0195 30.6299 cv
15.4487 36.4502 li
14.5688 30.0635 li
14.5669 30.043 14.5513 30.0293 14.5322 30.0234 cv
14.5537 30.0127 14.5688 29.9932 14.5684 29.9658 cv
14.5547 29.8525 li
14.5518 29.8203 14.5234 29.7949 14.4912 29.7998 cv
14.4565 29.8018 14.4346 29.833 14.4385 29.8652 cv
14.4507 29.9805 li
14.4531 30.0049 14.4717 30.0205 14.4946 30.0273 cv
14.4761 30.0361 14.4629 30.0518 14.4658 30.0732 cv
14.8325 36.0146 li
13.9697 29.0498 li
13.9668 29.0215 13.9409 29.001 13.9131 29.0049 cv
13.8838 29.0068 13.8633 29.0322 13.8662 29.0596 cv
14.2207 35.6689 li
13.4688 27.998 li
14.1743 27.417 15.002 26.415 15.4238 25.4717 cv
16.8335 38.3408 li
15.6763 30.8467 li
15.6738 30.8174 15.6504 30.7969 15.6206 30.7988 cv
15.5894 30.8037 15.5693 30.8281 15.5737 30.8564 cv
16.1021 37.4639 li
cp
false sop
0 0.3 0.94 0 cmyk
f
16.1021 37.4639 mo
15.1245 30.6172 li
15.1201 30.5889 15.0957 30.5693 15.0674 30.5723 cv
15.0371 30.5752 15.0176 30.6006 15.0195 30.6299 cv
15.4487 36.4502 li
14.5688 30.0635 li
14.5669 30.043 14.5513 30.0293 14.5322 30.0234 cv
14.5537 30.0127 14.5688 29.9932 14.5684 29.9658 cv
14.5547 29.8525 li
14.5518 29.8203 14.5234 29.7949 14.4912 29.7998 cv
14.4565 29.8018 14.4346 29.833 14.4385 29.8652 cv
14.4507 29.9805 li
14.4531 30.0049 14.4717 30.0205 14.4946 30.0273 cv
14.4761 30.0361 14.4629 30.0518 14.4658 30.0732 cv
14.8325 36.0146 li
13.9697 29.0498 li
13.9668 29.0215 13.9409 29.001 13.9131 29.0049 cv
13.8838 29.0068 13.8633 29.0322 13.8662 29.0596 cv
14.2207 35.6689 li
13.4688 27.998 li
14.1743 27.417 15.002 26.415 15.4238 25.4717 cv
16.8335 38.3408 li
15.6763 30.8467 li
15.6738 30.8174 15.6504 30.7969 15.6206 30.7988 cv
15.5894 30.8037 15.5693 30.8281 15.5737 30.8564 cv
16.1021 37.4639 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
42.2896 36.7021 mo
42.3052 33.5605 li
42.3071 33.5439 42.2817 33.5293 42.2524 33.5293 cv
42.2192 33.5293 42.1958 33.5479 42.1909 33.5654 cv
41.6509 37.96 li
41.7192 34.249 li
41.7192 34.2354 41.7046 34.2256 41.6841 34.2217 cv
41.7095 34.2178 41.729 34.2061 41.73 34.1885 cv
41.7368 34.1162 li
41.7407 34.0938 41.7114 34.0791 41.6763 34.0811 cv
41.6431 34.0811 41.6138 34.0986 41.6118 34.1201 cv
41.6021 34.1924 li
41.6021 34.208 41.6216 34.2197 41.647 34.2236 cv
41.6255 34.2275 41.6089 34.2383 41.6079 34.252 cv
41.0122 38.333 li
41.1558 34.6445 li
41.1597 34.6279 41.1372 34.6104 41.104 34.6123 cv
41.0728 34.6143 41.0464 34.6299 41.0464 34.6475 cv
40.3599 39.2754 li
40.5796 34.8369 li
40.5815 34.8193 40.5591 34.8057 40.5278 34.8057 cv
40.4966 34.8086 40.4692 34.8232 40.4673 34.8389 cv
39.8335 38.1572 li
41.2212 25.4873 li
41.6343 26.415 42.4399 27.3984 43.1382 27.9834 cv
42.2896 36.7021 li
cp
false sop
0 0.3 0.94 0 cmyk
f
42.2896 36.7021 mo
42.3052 33.5605 li
42.3071 33.5439 42.2817 33.5293 42.2524 33.5293 cv
42.2192 33.5293 42.1958 33.5479 42.1909 33.5654 cv
41.6509 37.96 li
41.7192 34.249 li
41.7192 34.2354 41.7046 34.2256 41.6841 34.2217 cv
41.7095 34.2178 41.729 34.2061 41.73 34.1885 cv
41.7368 34.1162 li
41.7407 34.0938 41.7114 34.0791 41.6763 34.0811 cv
41.6431 34.0811 41.6138 34.0986 41.6118 34.1201 cv
41.6021 34.1924 li
41.6021 34.208 41.6216 34.2197 41.647 34.2236 cv
41.6255 34.2275 41.6089 34.2383 41.6079 34.252 cv
41.0122 38.333 li
41.1558 34.6445 li
41.1597 34.6279 41.1372 34.6104 41.104 34.6123 cv
41.0728 34.6143 41.0464 34.6299 41.0464 34.6475 cv
40.3599 39.2754 li
40.5796 34.8369 li
40.5815 34.8193 40.5591 34.8057 40.5278 34.8057 cv
40.4966 34.8086 40.4692 34.8232 40.4673 34.8389 cv
39.8335 38.1572 li
41.2212 25.4873 li
41.6343 26.415 42.4399 27.3984 43.1382 27.9834 cv
42.2896 36.7021 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
32.9741 40.4424 mo
33.0005 40.4463 33.0298 40.4248 33.0327 40.3975 cv
33.0327 40.3701 33.0142 40.3447 32.9878 40.3408 cv
32.9575 40.3389 32.9331 40.3584 32.9292 40.3857 cv
32.9272 40.4131 32.9478 40.4365 32.9741 40.4424 cv
cp
0 0 0 1 nzopmsc
f
32.8911 40.3857 mo
32.9194 40.3896 32.9438 40.3682 32.9478 40.3408 cv
32.9497 40.3154 32.9292 40.2891 32.9028 40.2842 cv
32.8755 40.2832 32.8511 40.3018 32.8462 40.3311 cv
32.8442 40.3584 32.8638 40.3838 32.8911 40.3857 cv
cp
f
32.7524 40.2607 mo
32.7817 40.2646 32.8062 40.2451 32.8101 40.2158 cv
32.812 40.1885 32.7905 40.1631 32.7642 40.1611 cv
32.7349 40.1592 32.7134 40.1787 32.7095 40.2051 cv
32.7065 40.2334 32.7251 40.2568 32.7524 40.2607 cv
cp
f
31.8755 40.3291 mo
31.8481 40.3252 31.8228 40.3447 31.8208 40.3721 cv
31.8188 40.4014 31.8384 40.4248 31.8657 40.4287 cv
31.895 40.4287 31.9185 40.4111 31.9214 40.3818 cv
31.9224 40.3555 31.9028 40.3311 31.8755 40.3291 cv
cp
f
31.7114 40.2158 mo
31.6841 40.2129 31.6577 40.2334 31.6528 40.2607 cv
31.6528 40.2891 31.6724 40.3154 31.6997 40.3184 cv
31.7271 40.3213 31.7524 40.2979 31.7544 40.2725 cv
31.7583 40.2451 31.7368 40.2197 31.7114 40.2158 cv
cp
f
33.5718 38.751 mo
33.5981 38.7529 33.6226 38.7324 33.6255 38.7041 cv
33.6274 38.6787 33.6079 38.6533 33.5825 38.6504 cv
33.5542 38.6475 33.5308 38.667 33.5259 38.6943 cv
33.5259 38.7227 33.5425 38.7471 33.5718 38.751 cv
cp
f
33.3901 38.7227 mo
33.4194 38.7246 33.4438 38.7041 33.4458 38.6768 cv
33.4478 38.6514 33.4302 38.624 33.4009 38.6221 cv
33.3735 38.6191 33.3501 38.6406 33.3481 38.667 cv
33.3442 38.6943 33.3628 38.7188 33.3901 38.7227 cv
cp
f
33.1313 38.7227 mo
33.1587 38.7246 33.1841 38.7041 33.186 38.6768 cv
33.188 38.6504 33.1704 38.624 33.1411 38.6221 cv
33.1147 38.6191 33.0903 38.6377 33.0864 38.666 cv
33.0845 38.6943 33.105 38.7188 33.1313 38.7227 cv
cp
f
33.5825 39.7344 mo
33.5806 39.7627 33.5981 39.7881 33.6255 39.792 cv
33.6567 39.7939 33.6792 39.7744 33.6821 39.7451 cv
33.686 39.7197 33.6655 39.6924 33.6372 39.6904 cv
33.6079 39.6885 33.5864 39.707 33.5825 39.7344 cv
cp
f
33.3901 39.7061 mo
33.4194 39.708 33.4438 39.6904 33.4458 39.6611 cv
33.4478 39.6357 33.4302 39.6084 33.4009 39.6064 cv
33.3735 39.6045 33.3501 39.624 33.3481 39.6514 cv
33.3442 39.6807 33.3628 39.7031 33.3901 39.7061 cv
cp
f
32.2104 38.0127 mo
32.1831 38.0098 32.1587 38.0283 32.1567 38.0557 cv
32.1528 38.083 32.1704 38.1104 32.1997 38.1133 cv
32.2271 38.1162 32.2505 38.0947 32.2544 38.0674 cv
32.2563 38.042 32.2358 38.0146 32.2104 38.0127 cv
cp
f
31.9458 38.0986 mo
31.9185 38.0947 31.895 38.1162 31.8911 38.1416 cv
31.8892 38.1689 31.9067 38.1943 31.938 38.1973 cv
31.9614 38.2012 31.9858 38.1807 31.9888 38.1523 cv
31.9937 38.124 31.9731 38.1006 31.9458 38.0986 cv
cp
f
25.1577 40.4424 mo
25.1265 40.4463 25.104 40.4736 25.1055 40.5068 cv
25.1104 40.54 25.1362 40.5635 25.1724 40.5586 cv
25.2026 40.5576 25.2251 40.5254 25.2227 40.4932 cv
25.2192 40.4619 25.1919 40.4365 25.1577 40.4424 cv
cp
f
25.2563 40.376 mo
25.2251 40.3799 25.2026 40.4092 25.2026 40.4424 cv
25.2085 40.4727 25.2358 40.4971 25.271 40.4932 cv
25.3018 40.4912 25.3262 40.4619 25.3223 40.4287 cv
25.3154 40.3975 25.2896 40.3721 25.2563 40.376 cv
cp
f
25.4209 40.2295 mo
25.3867 40.2324 25.3652 40.2627 25.3677 40.292 cv
25.3711 40.3271 25.3989 40.3506 25.4326 40.3467 cv
25.4648 40.3447 25.4883 40.3154 25.4849 40.2803 cv
25.4824 40.251 25.4541 40.2256 25.4209 40.2295 cv
cp
f
26.4688 40.4248 mo
26.4341 40.4287 26.4116 40.458 26.4116 40.4893 cv
26.418 40.5225 26.4473 40.5479 26.4805 40.543 cv
26.5122 40.541 26.5347 40.5107 26.5308 40.4775 cv
26.5288 40.4463 26.4985 40.4209 26.4688 40.4248 cv
cp
f
26.6626 40.2939 mo
26.6294 40.2959 26.6084 40.3291 26.6104 40.3584 cv
26.6133 40.3916 26.6431 40.417 26.6753 40.4121 cv
26.708 40.4092 26.73 40.3799 26.7261 40.3467 cv
26.7222 40.3164 26.6953 40.29 26.6626 40.2939 cv
cp
f
24.667 38.415 mo
24.6362 38.417 24.6133 38.4482 24.6133 38.4785 cv
24.6196 38.5127 24.6484 38.5361 24.6816 38.5322 cv
24.7153 38.5293 24.7373 38.501 24.7329 38.4678 cv
24.729 38.4346 24.7021 38.4111 24.667 38.415 cv
cp
f
24.9746 38.415 mo
24.9434 38.417 24.9209 38.4482 24.9209 38.4785 cv
24.9238 38.5127 24.9531 38.5342 24.9893 38.5322 cv
25.019 38.5283 25.0415 38.501 25.04 38.4678 cv
25.0356 38.4346 25.0093 38.4111 24.9746 38.415 cv
cp
f
24.3906 39.6748 mo
24.3584 39.6787 24.3354 39.7061 24.3379 39.7393 cv
24.3413 39.7725 24.3691 39.7959 24.4033 39.7939 cv
24.4341 39.7881 24.4565 39.7588 24.4551 39.7275 cv
24.4507 39.6943 24.4243 39.6709 24.3906 39.6748 cv
cp
f
24.667 39.5771 mo
24.6362 39.5801 24.6133 39.6084 24.6133 39.6416 cv
24.6196 39.6748 24.6484 39.6963 24.6816 39.6943 cv
24.7153 39.6904 24.7373 39.6611 24.7329 39.6279 cv
24.729 39.5967 24.7021 39.5732 24.667 39.5771 cv
cp
f
26.0732 37.6963 mo
26.043 37.6982 26.019 37.7295 26.021 37.7588 cv
26.0244 37.7939 26.0527 37.8174 26.0874 37.8125 cv
26.1191 37.8096 26.1426 37.7813 26.1411 37.7471 cv
26.1357 37.7178 26.1064 37.6924 26.0732 37.6963 cv
cp
f
26.4507 37.8486 mo
26.4473 37.8174 26.418 37.7939 26.3857 37.7979 cv
26.3516 37.7998 26.3291 37.8301 26.3306 37.8604 cv
26.3359 37.8936 26.3652 37.917 26.3975 37.915 cv
26.4297 37.9121 26.4526 37.8818 26.4507 37.8486 cv
cp
f
41.7026 33.666 mo
41.6685 33.667 41.6372 33.6846 41.6372 33.7061 cv
41.6353 33.7246 41.6626 33.7402 41.6978 33.7402 cv
41.7329 33.7373 41.7622 33.7227 41.7651 33.7002 cv
41.7651 33.6826 41.7378 33.666 41.7026 33.666 cv
cp
f
41.7212 33.4697 mo
41.687 33.4697 41.6548 33.4873 41.6548 33.5088 cv
41.6528 33.5303 41.6802 33.5439 41.7134 33.5439 cv
41.7485 33.5439 41.7778 33.5283 41.7808 33.5049 cv
41.7808 33.4873 41.7544 33.4697 41.7212 33.4697 cv
cp
f
41.7017 33.8457 mo
41.6665 33.8477 41.6353 33.8643 41.6353 33.8857 cv
41.6274 33.958 li
41.6245 33.9785 41.6528 33.9932 41.687 33.9932 cv
41.7212 33.9932 41.7524 33.9736 41.7524 33.9561 cv
41.7622 33.8799 li
41.7632 33.8613 41.7368 33.8457 41.7017 33.8457 cv
cp
f
40.5894 34.418 mo
40.5562 34.4199 40.5269 34.4385 40.5229 34.458 cv
40.5229 34.4795 40.5503 34.4951 40.5854 34.4932 cv
40.6177 34.4912 40.6489 34.4756 40.6509 34.4541 cv
40.6528 34.4336 40.6255 34.418 40.5894 34.418 cv
cp
f
40.5728 34.6084 mo
40.5376 34.6104 40.5054 34.6279 40.5054 34.6494 cv
40.4976 34.7217 li
40.4976 34.7412 40.5229 34.7588 40.5591 34.7568 cv
40.5933 34.7568 40.6245 34.7402 40.6255 34.7197 cv
40.6323 34.6455 li
40.6333 34.626 40.605 34.6084 40.5728 34.6084 cv
cp
f
41.1411 34.2803 mo
41.1079 34.2803 41.0767 34.2959 41.0747 34.3164 cv
41.0728 34.3359 41.1001 34.3535 41.1353 34.3535 cv
41.1694 34.3516 41.1997 34.335 41.1997 34.3145 cv
41.2026 34.2939 41.1753 34.2773 41.1411 34.2803 cv
cp
f
41.1743 34.0498 mo
41.1392 34.0518 41.1099 34.0693 41.1079 34.0889 cv
41.106 34.1104 41.1304 34.127 41.1675 34.125 cv
41.2026 34.124 41.231 34.1064 41.2329 34.0869 cv
41.2358 34.0674 41.2085 34.0498 41.1743 34.0498 cv
cp
f
41.1353 34.4072 mo
41.1001 34.4072 41.0708 34.4248 41.0679 34.4463 cv
41.063 34.5205 li
41.0601 34.541 41.0854 34.5557 41.1196 34.5547 cv
41.1558 34.5527 41.187 34.5381 41.189 34.5176 cv
41.1948 34.4443 li
41.1968 34.4229 41.1675 34.4072 41.1353 34.4072 cv
cp
f
42.313 33.0986 mo
42.2778 33.1006 42.2466 33.1162 42.2446 33.1377 cv
42.2446 33.1582 42.272 33.1729 42.3032 33.1729 cv
42.3394 33.1729 42.3716 33.1543 42.3726 33.1338 cv
42.3755 33.1133 42.3462 33.0967 42.313 33.0986 cv
cp
f
42.2876 33.3467 mo
42.2544 33.3486 42.2212 33.3662 42.2212 33.3857 cv
42.2153 33.46 li
42.2153 33.4805 42.2388 33.4971 42.2759 33.4961 cv
42.3081 33.4951 42.3364 33.4775 42.3394 33.458 cv
42.3481 33.3838 li
42.3501 33.3623 42.3208 33.3467 42.2876 33.3467 cv
cp
f
42.3286 32.8916 mo
42.2935 32.8926 42.2661 32.9121 42.2622 32.9307 cv
42.2622 32.9521 42.2876 32.9678 42.3208 32.9678 cv
42.3579 32.9658 42.3872 32.9473 42.3892 32.9268 cv
42.3892 32.9092 42.3618 32.8916 42.3286 32.8916 cv
cp
f
42.311 33.1924 mo
42.2759 33.1934 42.2446 33.21 42.2446 33.2275 cv
42.2368 33.3047 li
42.2358 33.3252 42.2622 33.3398 42.2954 33.3398 cv
42.3306 33.3369 42.3618 33.3232 42.3618 33.3018 cv
42.3716 33.2266 li
42.3726 33.208 42.3452 33.1924 42.311 33.1924 cv
cp
f
14.4629 29.2813 mo
14.4946 29.2783 14.5171 29.249 14.5156 29.2148 cv
14.5117 29.1846 14.4824 29.1592 14.4487 29.1641 cv
14.418 29.167 14.3945 29.1963 14.397 29.2275 cv
14.4019 29.2598 14.4287 29.2852 14.4629 29.2813 cv
cp
f
14.4824 28.9053 mo
14.478 28.8721 14.4487 28.8506 14.416 28.8525 cv
14.3848 28.8564 14.3613 28.8848 14.3647 28.918 cv
14.3701 28.9502 14.397 28.9756 14.4302 28.9717 cv
14.4619 28.9678 14.4844 28.9365 14.4824 28.9053 cv
cp
f
14.4658 29.4492 mo
14.4336 29.4521 14.4097 29.4814 14.4146 29.5156 cv
14.4268 29.6299 li
14.4302 29.6631 14.459 29.6865 14.4912 29.6826 cv
14.5244 29.6787 14.5454 29.6494 14.5439 29.6162 cv
14.5313 29.5029 li
14.5278 29.4697 14.5005 29.4453 14.4658 29.4492 cv
cp
f
15.6099 30.2607 mo
15.606 30.2295 15.5776 30.2051 15.5454 30.208 cv
15.5142 30.2119 15.4893 30.2432 15.4927 30.2725 cv
15.4966 30.3066 15.5249 30.3311 15.5586 30.3271 cv
15.5913 30.3252 15.6138 30.292 15.6099 30.2607 cv
cp
f
15.6572 30.6787 mo
15.6416 30.5654 li
15.6396 30.5322 15.6099 30.5098 15.5776 30.5127 cv
15.5464 30.5166 15.5234 30.5459 15.5249 30.5771 cv
15.5381 30.6924 li
15.5415 30.7275 15.5698 30.749 15.6025 30.7451 cv
15.6357 30.7432 15.6597 30.7119 15.6572 30.6787 cv
cp
f
15.0332 30.1807 mo
15.0684 30.1768 15.0908 30.1475 15.0889 30.1143 cv
15.084 30.083 15.0547 30.0586 15.0229 30.0625 cv
14.9902 30.0654 14.9673 30.0947 14.9688 30.126 cv
14.9727 30.1592 15.001 30.1846 15.0332 30.1807 cv
cp
f
15.0386 29.7549 mo
15.0332 29.7236 15.0049 29.6992 14.9727 29.7041 cv
14.9404 29.7041 14.9175 29.7354 14.9199 29.7666 cv
14.9229 29.7998 14.9526 29.8232 14.9863 29.8193 cv
15.0186 29.8164 15.041 29.7871 15.0386 29.7549 cv
cp
f
15.0386 30.2666 mo
15.0063 30.2705 14.9819 30.2998 14.9863 30.332 cv
14.998 30.4482 li
15.001 30.4814 15.0303 30.5049 15.064 30.501 cv
15.0957 30.499 15.1182 30.4678 15.1152 30.4346 cv
15.1035 30.3213 li
15.1006 30.2861 15.0723 30.2627 15.0386 30.2666 cv
cp
f
13.8501 28.4609 mo
13.8813 28.458 13.9053 28.4268 13.9028 28.3955 cv
13.8994 28.3643 13.8706 28.3408 13.8379 28.3428 cv
13.8042 28.3467 13.7822 28.377 13.7842 28.4072 cv
13.7881 28.4404 13.8169 28.4658 13.8501 28.4609 cv
cp
f
13.8799 28.7373 mo
13.8486 28.7393 13.8242 28.7705 13.8281 28.8027 cv
13.8389 28.9189 li
13.8428 28.9502 13.8716 28.9756 13.9028 28.9717 cv
13.9375 28.9678 13.9595 28.9365 13.9575 28.9053 cv
13.9448 28.79 li
13.9409 28.7568 13.9121 28.7334 13.8799 28.7373 cv
cp
f
13.8706 28.0684 mo
13.8667 28.0371 13.8379 28.0137 13.8042 28.0166 cv
13.7734 28.0195 13.749 28.0488 13.7529 28.0801 cv
13.7559 28.1123 13.7842 28.1377 13.8169 28.1318 cv
13.8501 28.1309 13.873 28.1016 13.8706 28.0684 cv
cp
f
13.8716 28.7236 mo
13.9028 28.7217 13.9282 28.6924 13.9243 28.6611 cv
13.9121 28.5459 li
13.9092 28.5127 13.8799 28.4863 13.8472 28.4902 cv
13.8145 28.4932 13.791 28.5244 13.7949 28.5576 cv
13.8057 28.6729 li
13.8105 28.7061 13.8389 28.7275 13.8716 28.7236 cv
cp
f
24.2676 24.2764 mo
24.2075 23.7012 li
23.7148 23.7998 23.2075 23.9639 22.6919 24.1982 cv
22.7437 24.6924 li
23.2725 24.4844 23.7817 24.3496 24.2676 24.2764 cv
cp
f
17.064 25.9316 mo
16.8862 25.8809 16.7124 25.8145 16.54 25.7412 cv
16.5654 25.9893 li
16.7246 26.0576 16.9009 26.1201 17.0859 26.1729 cv
17.064 25.9316 li
cp
f
17.9502 26.3311 mo
17.9268 26.0791 li
17.7813 26.0693 17.6382 26.0576 17.4941 26.0342 cv
17.5161 26.2725 li
17.6587 26.2998 17.8027 26.3193 17.9502 26.3311 cv
cp
f
20.7148 25.7451 mo
20.6841 25.4189 li
20.2954 25.6465 19.8784 25.8164 19.4419 25.9326 cv
19.4702 26.2295 li
19.8784 26.1318 20.2954 25.9736 20.7148 25.7451 cv
cp
f
22.3354 24.8643 mo
22.2896 24.3887 li
21.9097 24.5908 21.5293 24.8311 21.1558 25.1152 cv
21.1313 25.1338 21.105 25.1455 21.0806 25.165 cv
21.1147 25.5205 li
21.5308 25.2607 21.9404 25.042 22.3354 24.8643 cv
cp
f
19.0562 26.3076 mo
19.0308 26.0322 li
18.8057 26.0693 18.5776 26.0986 18.3491 26.1025 cv
18.373 26.3506 li
18.5962 26.3506 18.8218 26.3418 19.0562 26.3076 cv
cp
f
21.2236 26.6553 mo
21.2583 27.0088 li
21.6792 26.7549 22.0859 26.5439 22.4839 26.3662 cv
22.439 25.9014 li
22.0352 26.1104 21.6294 26.3525 21.23 26.6504 cv
21.2275 26.6533 21.2261 26.6543 21.2236 26.6553 cv
cp
f
19.6152 27.7197 mo
20.0225 27.6182 20.4404 27.4541 20.8584 27.2275 cv
20.8286 26.9053 li
20.4453 27.1348 20.0269 27.3115 19.5874 27.4326 cv
19.6152 27.7197 li
cp
f
17.6665 27.8154 mo
17.8066 27.8369 17.9502 27.8506 18.1001 27.8594 cv
18.0757 27.6123 li
17.9331 27.6064 17.7881 27.5986 17.644 27.5811 cv
17.6665 27.8154 li
cp
f
22.8877 26.21 mo
23.4199 26.0049 23.9351 25.8525 24.4136 25.7842 cv
24.3584 25.2314 li
23.8677 25.3252 23.3574 25.4971 22.8418 25.7256 cv
22.8877 26.21 li
cp
f
18.5215 27.8672 mo
18.7422 27.8594 18.9692 27.8438 19.2021 27.8057 cv
19.1777 27.54 li
18.9551 27.582 18.7275 27.6143 18.4971 27.624 cv
18.5215 27.8672 li
cp
f
17.2163 27.4912 mo
17.0386 27.4482 16.8657 27.3887 16.6938 27.3213 cv
16.7178 27.5674 li
16.8765 27.6309 17.0508 27.6826 17.2383 27.7285 cv
17.2163 27.4912 li
cp
f
17.8164 29.3525 mo
17.9575 29.373 18.1001 29.3809 18.248 29.3857 cv
18.2251 29.1455 li
18.0796 29.1426 17.9375 29.1426 17.7949 29.126 cv
17.8164 29.3525 li
cp
f
18.6685 29.3799 mo
18.8892 29.3701 19.1167 29.3457 19.3481 29.3018 cv
19.3242 29.0498 li
19.1001 29.0986 18.874 29.126 18.6455 29.1426 cv
18.6685 29.3799 li
cp
f
23.0337 27.7061 mo
23.5674 27.501 24.084 27.3467 24.5596 27.2822 cv
24.5078 26.7373 li
24.0166 26.8311 23.5054 27.0068 22.9883 27.2334 cv
23.0337 27.7061 li
cp
f
21.4053 28.4912 mo
21.8267 28.2451 22.2349 28.0371 22.6279 27.8633 cv
22.5859 27.4131 li
22.1787 27.6172 21.7734 27.8545 21.3701 28.1455 cv
21.4053 28.4912 li
cp
f
19.7617 29.2109 mo
20.1675 29.1035 20.5854 28.9365 21.0034 28.71 cv
20.9727 28.3906 li
20.5938 28.623 20.1748 28.8066 19.7329 28.9365 cv
19.7617 29.2109 li
cp
f
17.3677 29.0518 mo
17.1899 29.0146 17.0181 28.9619 16.8486 28.9014 cv
16.8726 29.1455 li
17.0293 29.2002 17.2041 29.248 17.3916 29.2871 cv
17.3677 29.0518 li
cp
f
23.1807 29.2002 mo
23.7192 28.9951 24.2334 28.8545 24.7061 28.7988 cv
24.6548 28.2588 li
24.1665 28.3447 23.6563 28.5156 23.1343 28.7393 cv
23.1807 29.2002 li
cp
f
18.7935 30.6631 mo
18.8164 30.8936 li
19.0361 30.875 19.2617 30.8457 19.4946 30.7979 cv
19.4702 30.5557 li
19.2485 30.6045 19.02 30.6396 18.7935 30.6631 cv
cp
f
19.8799 30.4385 mo
19.9053 30.7021 li
20.311 30.5889 20.7275 30.4189 21.1475 30.1924 cv
21.1167 29.8799 li
20.7412 30.1123 20.3247 30.3018 19.8799 30.4385 cv
cp
f
22.7334 28.9229 mo
22.3276 29.124 21.9214 29.3525 21.5146 29.6377 cv
21.5469 29.9795 li
21.9751 29.7334 22.3813 29.5303 22.7759 29.3604 cv
22.7334 28.9229 li
cp
f
17.9453 30.6709 mo
17.9678 30.8945 li
18.1055 30.9063 18.25 30.9131 18.3965 30.9131 cv
18.3745 30.6738 li
18.2314 30.6787 18.0874 30.6807 17.9453 30.6709 cv
cp
f
17.5195 30.6104 mo
17.3418 30.5791 17.1709 30.5361 17.001 30.4814 cv
17.0249 30.7197 li
17.1816 30.7705 17.3555 30.8096 17.5405 30.8408 cv
17.5195 30.6104 li
cp
f
18.5464 32.4365 mo
18.5239 32.208 li
18.3794 32.2109 18.2368 32.2197 18.0952 32.2148 cv
18.1182 32.4346 li
18.2554 32.4385 18.3979 32.4414 18.5464 32.4365 cv
cp
f
17.6699 32.1709 mo
17.4941 32.1475 17.3218 32.1084 17.1563 32.0615 cv
17.1787 32.2959 li
17.3325 32.3389 17.5068 32.3701 17.6924 32.3955 cv
17.6699 32.1709 li
cp
f
19.6387 32.293 mo
19.6167 32.0576 li
19.3945 32.1123 19.168 32.1533 18.9409 32.1787 cv
18.9644 32.4033 li
19.1831 32.3818 19.4082 32.3447 19.6387 32.293 cv
cp
f
22.8799 30.4287 mo
22.4756 30.626 22.0684 30.8564 21.6602 31.1279 cv
21.6934 31.4639 li
22.1211 31.2236 22.5298 31.0244 22.9204 30.8564 cv
22.8799 30.4287 li
cp
f
23.3262 30.6943 mo
23.8701 30.4893 24.3804 30.3604 24.8545 30.3115 cv
24.8018 29.7822 li
24.3154 29.8662 23.8062 30.0186 23.2803 30.2432 cv
23.3262 30.6943 li
cp
f
21.291 31.6738 mo
21.2627 31.3721 li
20.8916 31.6045 20.4741 31.7959 20.0269 31.9365 cv
20.0483 32.1885 li
20.4526 32.0693 20.8711 31.8975 21.291 31.6738 cv
cp
f
19.7661 33.5596 mo
19.541 33.6182 19.3154 33.665 19.0898 33.6943 cv
19.1118 33.917 li
19.3296 33.8857 19.5537 33.8457 19.7866 33.7881 cv
19.7661 33.5596 li
cp
f
21.4092 32.8623 mo
21.0415 33.0947 20.6221 33.2881 20.1738 33.4404 cv
20.1963 33.6768 li
20.5981 33.5518 21.0132 33.3809 21.436 33.1563 cv
21.4092 32.8623 li
cp
f
17.8237 33.7295 mo
17.646 33.7109 17.4775 33.6826 17.311 33.6436 cv
17.332 33.8721 li
17.4849 33.9072 17.6611 33.9307 17.8442 33.9482 cv
17.8237 33.7295 li
cp
f
18.6719 33.7354 mo
18.5293 33.7451 18.3877 33.7607 18.2466 33.7588 cv
18.2686 33.9697 li
18.4038 33.9707 18.5464 33.9658 18.6948 33.958 cv
18.6719 33.7354 li
cp
f
23.4707 32.1885 mo
24.0229 31.9834 24.5283 31.8643 24.9985 31.8232 cv
24.9487 31.2822 li
24.4634 31.3594 23.9526 31.5166 23.4277 31.7402 cv
23.4707 32.1885 li
cp
f
23.0239 31.9209 mo
22.6226 32.1143 22.2168 32.3496 21.8047 32.6133 cv
21.8369 32.9512 li
22.2705 32.7158 22.6777 32.5186 23.0669 32.3525 cv
23.0239 31.9209 li
cp
f
18.8218 35.2656 mo
18.6807 35.2793 18.5386 35.2959 18.396 35.2998 cv
18.417 35.5049 li
18.5513 35.501 18.6948 35.4922 18.8433 35.4795 cv
18.8218 35.2656 li
cp
f
23.6172 33.6768 mo
24.168 33.4697 24.6763 33.3408 25.1479 33.3125 cv
25.0981 32.7939 li
24.6094 32.8643 24.1021 33.0186 23.5732 33.2412 cv
23.6172 33.6768 li
cp
f
17.9756 35.2891 mo
17.7988 35.2783 17.6304 35.2578 17.4644 35.2266 cv
17.4849 35.4463 li
17.6382 35.4736 17.811 35.4893 17.9941 35.498 cv
17.9756 35.2891 li
cp
f
21.5537 34.3564 mo
21.1948 34.5869 20.7729 34.7822 20.3174 34.9385 cv
20.3394 35.165 li
20.7412 35.0332 21.1563 34.8623 21.582 34.6416 cv
21.5537 34.3564 li
cp
f
23.1714 33.4248 mo
22.7734 33.6182 22.3647 33.8486 21.9507 34.1064 cv
21.9819 34.4336 li
22.416 34.2002 22.8257 34.001 23.2129 33.8369 cv
23.1714 33.4248 li
cp
f
19.9116 35.0645 mo
19.6895 35.124 19.4648 35.1748 19.2354 35.2119 cv
19.2568 35.4268 li
19.4731 35.3916 19.7017 35.3428 19.9326 35.2803 cv
19.9116 35.0645 li
cp
f
17.6196 36.8096 mo
17.6382 37.0166 li
17.791 37.0381 17.9619 37.0469 18.1465 37.0508 cv
18.126 36.8467 li
17.9492 36.8447 17.7813 36.8291 17.6196 36.8096 cv
cp
f
23.7642 35.1719 mo
24.3208 34.9619 24.8232 34.8447 25.293 34.8271 cv
25.2412 34.3057 li
24.7559 34.3682 24.249 34.5215 23.7192 34.7471 cv
23.7642 35.1719 li
cp
f
22.0972 35.6025 mo
22.1289 35.9209 li
22.5645 35.6904 22.9736 35.4922 23.3574 35.333 cv
23.3184 34.9326 li
22.9189 35.123 22.5132 35.3486 22.0972 35.6025 cv
cp
f
21.6831 35.8594 mo
21.3364 36.0811 20.9155 36.2764 20.4663 36.4346 cv
20.4863 36.6514 li
20.8877 36.5166 21.3018 36.3428 21.7251 36.126 cv
21.6997 35.8496 li
21.6934 35.8535 21.689 35.8555 21.6831 35.8594 cv
cp
f
19.3848 36.7275 mo
19.4058 36.9326 li
19.6206 36.8936 19.8462 36.8369 20.0791 36.7744 cv
20.0581 36.5654 li
19.8364 36.6289 19.6113 36.6836 19.3848 36.7275 cv
cp
f
18.5464 36.8428 mo
18.5669 37.0381 li
18.7021 37.0283 18.8447 37.0156 18.9907 36.9971 cv
18.9702 36.7939 li
18.8276 36.8105 18.6865 36.833 18.5464 36.8428 cv
cp
f
33.9399 24.1982 mo
33.4282 23.9639 32.9194 23.7998 32.4263 23.7012 cv
32.3677 24.0146 li
32.8511 24.0869 33.3599 24.2236 33.8931 24.4316 cv
33.9399 24.1982 li
cp
f
35.5552 25.165 mo
35.5317 25.1455 35.5044 25.1338 35.479 25.1152 cv
35.106 24.8311 34.7231 24.5908 34.3423 24.3887 cv
34.2983 24.6045 li
34.6938 24.7813 35.1021 24.999 35.52 25.2588 cv
35.5552 25.165 li
cp
f
35.4097 26.6553 mo
35.4097 26.6543 35.4038 26.6533 35.4038 26.6504 cv
35.0054 26.3525 34.6021 26.1104 34.1948 25.9014 cv
34.1509 26.1045 li
34.5474 26.2803 34.9546 26.4941 35.3755 26.7471 cv
35.4097 26.6553 li
cp
f
33.7915 25.7256 mo
33.2769 25.4971 32.7661 25.3252 32.2749 25.2314 cv
32.2212 25.5244 li
32.7017 25.5898 33.2144 25.7432 33.7456 25.9482 cv
33.7915 25.7256 li
cp
f
33.646 27.2334 mo
33.1294 27.0068 32.6157 26.8311 32.1274 26.7373 cv
32.0757 27.0225 li
32.5493 27.085 33.0649 27.2412 33.5981 27.4463 cv
33.646 27.2334 li
cp
f
35.2642 28.1455 mo
34.8618 27.8545 34.4556 27.6172 34.0493 27.4131 cv
34.0044 27.6025 li
34.4009 27.7744 34.8071 27.9834 35.2329 28.2324 cv
35.2642 28.1455 li
cp
f
33.4995 28.7393 mo
32.979 28.5156 32.4692 28.3447 31.98 28.2588 cv
31.9282 28.5361 li
32.4028 28.5908 32.9155 28.7354 33.4546 28.9385 cv
33.4995 28.7393 li
cp
f
33.8608 29.0996 mo
34.2524 29.2705 34.6587 29.4727 35.0884 29.7197 cv
35.1187 29.6377 li
34.7134 29.3525 34.3091 29.124 33.9009 28.9229 cv
33.8608 29.0996 li
cp
f
33.7144 30.5967 mo
34.106 30.7646 34.5122 30.9609 34.9409 31.2021 cv
34.9751 31.1279 li
34.5649 30.8564 34.1587 30.626 33.7544 30.4287 cv
33.7144 30.5967 li
cp
f
33.354 30.2432 mo
32.8286 30.0186 32.3208 29.8662 31.8325 29.7822 cv
31.7817 30.0508 li
32.2544 30.0986 32.7642 30.2285 33.3091 30.4326 cv
33.354 30.2432 li
cp
f
33.2085 31.7402 mo
32.6802 31.5166 32.1724 31.3594 31.688 31.2822 cv
31.6323 31.5625 li
32.105 31.6016 32.6138 31.7217 33.1636 31.9268 cv
33.2085 31.7402 li
cp
f
33.5679 32.0908 mo
33.9575 32.2568 34.3618 32.4541 34.7974 32.6885 cv
34.8306 32.6133 li
34.4185 32.3496 34.0122 32.1143 33.6108 31.9209 cv
33.5679 32.0908 li
cp
f
33.0591 33.2412 mo
32.5337 33.0186 32.0239 32.8643 31.5405 32.7939 cv
31.4888 33.0498 li
31.9575 33.0811 32.4634 33.21 33.0181 33.415 cv
33.0591 33.2412 li
cp
f
33.4233 33.5762 mo
33.8091 33.7373 34.2183 33.9404 34.6519 34.1738 cv
34.6841 34.1064 li
34.272 33.8486 33.8618 33.6182 33.4624 33.4248 cv
33.4233 33.5762 li
cp
f
32.9155 34.7471 mo
32.3853 34.5215 31.8794 34.3682 31.394 34.3057 cv
31.3403 34.5635 li
31.8091 34.583 32.3149 34.7021 32.8735 34.9092 cv
32.9155 34.7471 li
cp
f
33.2769 35.0703 mo
33.6606 35.2295 34.0669 35.4307 34.5093 35.6582 cv
34.5396 35.6025 li
34.1216 35.3486 33.7144 35.123 33.3159 34.9326 cv
33.2769 35.0703 li
cp
f
42.2974 36.6943 mo
42.313 33.5537 li
42.3149 33.5361 42.2896 33.5225 42.2603 33.5225 cv
42.228 33.5225 42.2036 33.54 42.1997 33.5576 cv
41.6587 37.9521 li
41.7271 34.2422 li
41.7271 34.2275 41.7124 34.2197 41.6919 34.2139 cv
41.7173 34.21 41.7368 34.1982 41.7378 34.1826 cv
41.7446 34.1084 li
41.7485 34.0879 41.7192 34.0713 41.6841 34.0732 cv
41.6509 34.0752 41.6206 34.0908 41.6196 34.1123 cv
41.6099 34.1846 li
41.6099 34.2021 41.6294 34.2109 41.6548 34.2148 cv
41.6333 34.2217 41.6167 34.2314 41.6157 34.2451 cv
41.02 38.3252 li
41.1636 34.6377 li
41.1675 34.6201 41.145 34.6045 41.1118 34.6064 cv
41.0806 34.6064 41.0542 34.623 41.0542 34.6396 cv
40.3677 39.2686 li
40.5864 34.8311 li
40.5894 34.8135 40.5669 34.7979 40.5356 34.7979 cv
40.5034 34.8018 40.4771 34.8164 40.4751 34.833 cv
39.8423 38.1494 li
41.229 25.4814 li
41.6421 26.4063 42.4487 27.3896 43.146 27.9756 cv
42.2974 36.6943 li
cp
35.7251 38.7432 mo
34.4458 38.126 33.1157 37.7568 32.3853 37.9932 cv
32.3579 37.9912 32.3325 38.0127 32.3286 38.04 cv
32.3276 38.0674 32.3521 38.0879 32.3804 38.0908 cv
33.1919 38.0264 34.5884 38.5029 35.6294 39.1025 cv
36.0015 39.3164 36.3794 39.4932 36.7505 39.6377 cv
36.3442 39.5596 35.9673 39.46 35.6704 39.3359 cv
34.8521 38.9951 34.2241 38.7373 33.6655 38.6963 cv
33.6353 38.6934 33.6108 38.7119 33.6079 38.7393 cv
33.604 38.7666 33.6187 38.79 33.647 38.793 cv
34.2222 38.9795 34.9302 39.4316 35.6704 39.7686 cv
36.0562 39.9424 36.479 40.0771 36.9077 40.1787 cv
36.3315 40.1309 35.8481 40.0811 35.6323 40.0479 cv
34.9468 39.9404 34.3423 39.874 33.8052 39.7646 cv
33.7759 39.7627 33.7476 39.7803 33.7456 39.8076 cv
33.7407 39.8369 33.7603 39.8623 33.7915 39.8633 cv
34.3403 40.0977 34.9146 40.2998 35.6704 40.5293 cv
36.0894 40.6572 36.8931 40.792 37.7417 40.8809 cv
36.9634 40.8506 36.1733 40.8076 35.5903 40.7559 cv
34.6724 40.6768 33.7759 40.543 33.0845 40.374 cv
33.0571 40.3721 33.0298 40.3896 33.0239 40.417 cv
33.02 40.4463 33.0415 40.4717 33.0669 40.4736 cv
33.7104 40.8076 34.5806 41.1035 35.5854 41.251 cv
35.9087 41.2979 36.2769 41.3447 36.6724 41.3848 cv
36.2124 41.3799 35.8169 41.3691 35.5591 41.3486 cv
34.272 41.2393 32.9028 40.7939 32.02 40.4424 cv
31.9976 40.4287 31.9595 40.4326 31.9438 40.4561 cv
31.9321 40.4795 31.9419 40.5117 31.9653 40.5244 cv
32.7866 41.085 34.6577 41.8916 36.7681 41.999 cv
32.0601 41.9863 29.1543 40.8291 28.2705 39.1299 cv
27.6787 40.2686 26.4028 41.1631 24.2139 41.6328 cv
25.1426 41.3369 25.8921 40.9795 26.3618 40.6592 cv
26.3896 40.6436 26.4009 40.6045 26.3857 40.5771 cv
26.3691 40.5498 26.3252 40.5459 26.2993 40.5596 cv
25.2563 40.9756 23.6436 41.5029 22.1255 41.6279 cv
21.8228 41.6533 21.3525 41.667 20.8062 41.6719 cv
21.2744 41.6221 21.709 41.5693 22.0898 41.5146 cv
23.2769 41.3408 24.3071 40.9932 25.0605 40.5977 cv
25.0933 40.5957 25.1182 40.5635 25.1138 40.5293 cv
25.1104 40.499 25.0747 40.4775 25.0415 40.4795 cv
24.2285 40.6787 23.168 40.833 22.0859 40.9326 cv
21.4033 40.9932 20.4761 41.0439 19.5615 41.0771 cv
20.5571 40.9736 21.501 40.8145 21.9932 40.665 cv
22.8848 40.3975 23.561 40.1553 24.21 39.8779 cv
24.2427 39.874 24.2695 39.8467 24.2676 39.8135 cv
24.2617 39.7803 24.2285 39.7568 24.1953 39.7607 cv
23.5586 39.8896 22.8447 39.9697 22.0415 40.0947 cv
21.7842 40.1348 21.2134 40.1934 20.5322 40.251 cv
21.0386 40.1299 21.5376 39.9717 21.9932 39.7646 cv
22.8667 39.3701 23.6997 38.8369 24.3784 38.6152 cv
24.4116 38.6123 24.4282 38.5879 24.4263 38.5537 cv
24.4263 38.5537 li
24.437 38.5625 24.4521 38.5674 24.4692 38.5654 cv
24.502 38.5615 24.5229 38.5322 24.5205 38.501 cv
24.5171 38.4697 24.4878 38.4443 24.4551 38.4482 cv
24.4243 38.4502 24.4019 38.4805 24.4033 38.5127 cv
24.4058 38.5264 24.4131 38.5371 24.4224 38.5479 cv
24.4131 38.5195 24.3872 38.501 24.3584 38.5029 cv
23.6997 38.5508 22.959 38.8525 21.9932 39.2568 cv
21.644 39.4023 21.2026 39.5205 20.7246 39.6123 cv
21.1626 39.4414 21.6074 39.2314 22.043 38.9795 cv
23.2666 38.2764 24.916 37.7139 25.8745 37.79 cv
25.9048 37.7861 25.9341 37.7588 25.9316 37.7275 cv
25.9272 37.6963 25.8999 37.6689 25.8672 37.6729 cv
25.0044 37.3965 23.4395 37.8301 21.9282 38.5547 cv
19.4937 39.7275 17.3662 39.5381 17.0254 39.0605 cv
17.04 39.0557 li
17.4204 39.4414 19.5376 39.3154 21.9443 38.1572 cv
25.0186 36.6797 26.4038 36.2285 28.3218 38.8086 cv
28.3306 38.832 li
28.3306 38.8193 li
30.2515 36.2275 31.6372 36.6768 34.7153 38.1572 cv
37.2153 39.3594 38.6821 39.4385 39.436 39.0068 cv
39.5669 39.042 li
38.9761 39.4023 37.4712 39.5811 35.7251 38.7432 cv
cp
28.4624 43.1567 mo
27.3774 43.1567 26.4321 42.8892 26.0474 42.3818 cv
27.5635 41.8838 28.1001 41.1182 28.2334 40.2051 cv
28.4189 41.1035 29.1152 41.8594 30.728 42.3604 cv
30.4048 42.8813 29.5649 43.1567 28.4624 43.1567 cv
cp
16.1099 37.4746 mo
15.1328 30.626 li
15.1289 30.5986 15.1045 30.5791 15.0762 30.583 cv
15.0464 30.585 15.0264 30.6104 15.0283 30.6396 cv
15.4575 36.46 li
14.5786 30.0732 li
14.5762 30.0518 14.5596 30.0391 14.5415 30.0332 cv
14.5625 30.0225 14.5786 30.0029 14.5767 29.9766 cv
14.5635 29.8623 li
14.5605 29.8311 14.5322 29.8057 14.5005 29.8096 cv
14.4658 29.8115 14.4434 29.8428 14.4473 29.876 cv
14.459 29.9902 li
14.4619 30.0146 14.481 30.0303 14.5029 30.0361 cv
14.4849 30.0469 14.4717 30.0625 14.4741 30.083 cv
14.8413 36.0244 li
13.978 29.0596 li
13.9751 29.0322 13.9497 29.0107 13.9214 29.0146 cv
13.8926 29.0166 13.8716 29.042 13.8745 29.0693 cv
14.23 35.6768 li
13.478 28.0078 li
14.1836 27.4277 15.0117 26.4238 15.4326 25.4814 cv
16.8433 38.3506 li
15.6846 30.8564 li
15.6826 30.8271 15.6597 30.8066 15.6289 30.8096 cv
15.5981 30.8135 15.5776 30.8379 15.582 30.8662 cv
16.1099 37.4746 li
cp
15.6909 24.6367 mo
15.6963 24.6416 15.7021 24.6475 15.7075 24.6533 cv
15.6885 24.665 li
15.6895 24.6553 15.689 24.6455 15.6909 24.6367 cv
cp
20.8784 24.499 mo
22.834 23.1846 24.3965 22.6357 25.584 22.7764 cv
26.0854 22.9063 26.3096 23.2754 26.4312 23.7188 cv
25.895 23.5811 25.2798 23.5459 24.6235 23.6299 cv
24.6816 24.2295 li
25.376 24.1768 26.0059 24.2607 26.5571 24.4619 cv
26.6558 25.3154 li
26.106 25.1406 25.4639 25.0869 24.7725 25.168 cv
24.8301 25.7539 li
25.54 25.7119 26.1816 25.8193 26.7427 26.0635 cv
26.8398 26.9053 li
26.2852 26.6904 25.6304 26.6191 24.9209 26.6943 cv
24.9761 27.2676 li
25.7061 27.2354 26.3584 27.3721 26.9287 27.6729 cv
27.0249 28.5049 li
26.4653 28.2412 25.7979 28.1475 25.0713 28.2178 cv
25.1265 28.7803 li
25.8716 28.7617 26.5342 28.9346 27.1172 29.3027 cv
27.2119 30.124 li
26.6445 29.7939 25.9653 29.6729 25.2192 29.7334 cv
25.2725 30.2891 li
26.0337 30.2881 26.707 30.5049 27.3081 30.958 cv
27.4009 31.7627 li
26.8218 31.3467 26.1299 31.1846 25.3652 31.2354 cv
25.4189 31.7998 li
26.1948 31.8193 26.876 32.0908 27.5039 32.6504 cv
27.5957 33.4424 li
26.9971 32.9229 26.291 32.7178 25.5107 32.751 cv
25.5674 33.3096 li
26.3525 33.3584 27.04 33.6963 27.7031 34.3779 cv
27.7944 35.1592 li
27.168 34.5186 26.4502 34.2588 25.6592 34.2725 cv
25.7168 34.8408 li
26.5 34.9199 27.1958 35.3232 27.9077 36.1396 cv
28.0068 36.998 li
26.3228 34.9834 24.1748 35.8662 21.7437 37.46 cv
20.1719 38.4932 18.4888 39.1611 17.2979 38.9229 cv
15.9487 24.8691 li
16.8511 25.5781 18.6123 26.0225 20.8784 24.499 cv
cp
28.4546 36.207 mo
29.2612 35.1689 30.0356 34.6699 30.9185 34.5791 cv
30.9751 34.2725 li
30.022 34.2549 29.1729 34.6367 28.4644 35.6064 cv
28.4805 34.6357 li
29.2856 33.6025 30.106 33.1064 31.0688 33.0488 cv
31.1235 32.751 li
30.0894 32.7061 29.186 33.085 28.4902 34.0537 cv
28.5068 33.0615 li
29.3052 32.0469 30.1763 31.5654 31.2173 31.5381 cv
31.27 31.2354 li
30.1567 31.1611 29.1958 31.5371 28.5161 32.499 cv
28.5327 31.4893 li
29.3218 30.4951 30.2485 30.0273 31.3618 30.0273 cv
31.4165 29.7334 li
30.229 29.6367 29.2065 30.002 28.542 30.9434 cv
28.5586 29.9131 li
29.3379 28.9482 30.3188 28.4893 31.5093 28.5186 cv
31.5649 28.2178 li
30.3032 28.0967 29.2183 28.4619 28.5684 29.375 cv
28.585 28.3389 li
29.3555 27.4033 30.395 26.9521 31.6548 27.0068 cv
31.7134 26.6943 li
30.3774 26.5518 29.2339 26.9268 28.5938 27.8154 cv
28.6113 26.7627 li
29.3726 25.8604 30.4692 25.4111 31.8042 25.4932 cv
31.8618 25.168 li
30.4575 25.0029 29.2549 25.3887 28.6196 26.249 cv
28.6372 25.1865 li
29.3931 24.3154 30.5435 23.8584 31.9517 23.9678 cv
32.0122 23.6299 li
30.5679 23.4463 29.3232 23.832 28.6777 24.6338 cv
28.7388 24.373 28.9092 23.8623 29.3423 23.4463 cv
29.3389 23.4473 29.3345 23.4482 29.3311 23.4502 cv
30.7661 22.2432 33.2427 22.7939 35.7798 24.499 cv
38.0513 26.0244 39.812 25.5752 40.7134 24.8662 cv
39.3638 38.9229 li
38.1733 39.1611 36.4907 38.4932 34.9165 37.46 cv
32.3813 35.7959 30.1509 34.9092 28.4365 37.2832 cv
28.4546 36.207 li
cp
43.2544 27.1182 mo
42.3618 26.2559 41.4116 24.8818 41.3765 23.875 cv
39.8345 25.7754 37.2974 24.5029 35.6821 23.251 cv
32.7388 20.9736 29.2573 20.9033 28.1689 23.2754 cv
27.0713 20.9678 23.8945 20.9961 20.981 23.251 cv
19.3613 24.5029 17.0293 25.4521 15.2827 23.875 cv
15.252 24.8818 14.3008 26.2559 13.4077 27.1182 cv
12.4224 27.1182 li
13.9355 43.0103 li
14.1709 43.0103 li
14.1709 43.0142 li
20.2168 43.0142 li
22.2964 43.0142 23.8521 42.8833 25.0137 42.6494 cv
25.5005 43.5474 26.8467 43.9438 28.4756 43.9438 cv
30.104 43.9438 31.4478 43.5474 31.938 42.6533 cv
33.1724 42.8853 34.7739 43.0142 36.8374 43.0142 cv
42.2095 43.0142 li
42.2173 42.9985 li
42.6978 42.9985 li
44.2114 27.1182 li
43.2544 27.1182 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Rose) ()%%Title: (UVic_vert_4c.eps)%%CreationDate: 4/18/08 9:53 AM%AI9_DataStream%Gb"-6BocQAE?P)cmXM`R"K2d9SGT$8*`/n-cQu6JQGthAJO$Kn/Qu.bK2&eGk1@B#1XC*BMI_!%n@5X>XrEWR:G.d78*&!FG4G"\%gMbu^rVkg4s7_F]W:_!K36%>H.CR.?IeM[VI/Wo^Fdo_q*&Tk%_.RGPc9_j=*iWd(3.1/Zh5cV2YMXg(c22^g?N9f\jh&-Kmsk8S%na\=dh]@:?npC/TbN$@O^:SadkMsP;b?'0Sr9X?Jq=cgdmU"e`H[l(d_m,goK_b-7MiVfE^AXsjpO@GdrYP']K])WPlLB'_6<DMa%rm'G/^3t.un_;[1JNdFjqoa?]o8i[%qKr);S(A`G^cZ!I*l`I#X+1)gH$fUWcd2XYldt%/q=2B"QQP(sHi$%BikBp>qYl8^QQKP_%1.53h@-To8^Z0NP$1jfj^)`D!k+7U@b.u'?]`.0?lTbCNQK-Mb[iaK*pd^q)Dr/.d`AiAIiL;e+$`4_D_uDObl]67nhuE-3Rh%1Z%>+s6&rT`4JYOA-d4aV8E&guu.j2\pii3tAsJ,f?Im-VEsO#Y0e*1N-V_,B1)r6+F#]LqsN?iTWlm;Ln\%iVP\l'PsA`ac4?fL!M:%@b99RCR3RsHBm[mn7d8N40>aZ^OaZ)p%p]*^No\aT@0../fnAQma$4MM)XcChS8l0lrOY:`rFC2cJ%pjY5d\4_SeZdGl:Z4%g[:Q%X3luLB>=9I#&sP7gWOg8\.=*35J)I%ILE)np[3D-S,H*3J]C"S^ltJ\^]13Ucl+eOqE4ZhrMBJl2g6A&:]Kq`h8^Udq=_FELS(2g%qsFuuO2#u9iK&NKYMXg+j&\a%n^f!M!RTR[5J:[]ful<=I.^ls^O;1,o)8+1J,&ciY<Kb>!Z8\#oC:(\f8k.Jbq!%rpW&3d++O4K%n[IuDh:_RhJ$NJiR%W+2YN$Y<Ta0HRqCSoCp.`tCr?aKJIs#[\eu.C*J,F*MrUT(+h4*lj^\m&ODdMhE@-@"P-N;aI]F<*\qq'kR%qPsRD!a>TbrX\JchY_U_Y]59mk2lINDdM85roPjuIX$;@G]-Ze^B9cZ/K7!Zhu<9EmbJE&+:[o4mC1,cIeituLUtKBqX2V_DrHAr%Gok0(mf!H%a2`,tq!s3l1u&Uk]V1YK49:H1?G:j`r^_"o'$1[B0@7$O8Re'0RXYj$E@-)e?6&n5ipB,Ns5Eq"Dr1OhrPe<i^O,kO%jo+L`O5C?/keB1F!J-\pj2JK_IlmT,iTB:bqW@)*o&eror2/AYRsJ"NnkH]P2rVd6\EfXMlg(V;bNk)PoBUk]Y3U5@cI_;A?AE<G%mB1?0Y-5"20!?n1cEI(E4'^=:Eg<iV<P/Z?rlSO'>[CcD?!^iD>b5<rbB@#Ab@SC]Qglh9qFc$PF)cVJF`D\HEH-HT0A8k.-l;\'%?,VY?i@j!Fr9!qRr9F4Nr8RYP]Uu\)H="ngGrh#LiS:';IabLt<PRl:rOhm]HL7O2qsUclGO)Ef[-Mnc0&&fVD]O(KX0&ba;N!+`%hd!jofCc.Mer+i\HYp1A;KGPiekgd;jec:LX)_>qb'E6JQ!-f%-'_S!n\lO>9tnnSq(c=<oA"E124'hSarmiuT3]$"fBMSis1i[(%!-*fW8/rre'Sjh``SpB<EQC7U(cM<M\8gRlFrYoihum^#4:.M^:B[T4PJQMQKQp*K.@q;MN2MDoUZie4L-.tr--m6;8olQo-HjlW%$1jC$dQDB:3):PB:X_Pd$HO.$._t4&_<rZ&5aXXW"G`6L5*>=^-BN"/,4WcD5f*e_(9\oi9*C30kHQ+<a2uAZ_nqbY'_*Qda%$qO%!6bo(YhT^(gtb*^\UNU\[J_(GJBLGI(Cu!*mekI.J+V40k:hCj:OVk6:43WC97HX<$gs'?qu+K\TI]F]JoF7YW]P:9Z)m5]_Zh4k%rr."lM]\W3G?4JlL&YQ,mJR?_\@=;/WV#Z\fs.'CTVND&mI?hK#iu$\21T&j!=@S7_TVt;LAl+hTgUu0DD9=CHGQt?klfB>d%cF]%0PqrDJ2AESL!+EIc@Ob/TS"P$TJ\HWi.LV[rn:`T97PpHJJ:&9Oi:t+6dZ/-]fQe=\=s(R:+*3mR7Kkg*+1B3*5d9T!GCJ!5lknp%.;u9IZ%bK#itE&4hnOX?o'Y8moj;#-o$6-c^Sj\MS`Gu9T<e:BSPNI>%e*9OrLBMX>WhX=^k$dtF7nT)r#Dk(n)ri_kA^8nTDh-*%FEiUEIEq$UZ49IE,/U*cB+UW%jEM;ISk*c0'>^).c:i>Em.<k%8Oe'>as9Z3%RPi1$m?d';M;soaUo.2,Y:OkJ1M:@6ILP*$-<hn%W!aeI8>_JF[0':,8e_YI<[PDCLiu4]?\)l-r]'nuJuo1sO]`0XJ?gPVS.[B=K#9,Yd!sKh-_C*dLHc%,5PqeaF4^_Irm.oo8;M\X%m8J0lFna?[I":6!n=Q8tq1G;te";9kHML.)X&GY.ks%n7:S>"K0.#'4T>MH:AO$3]Fi[0p,AArsUks+=8stYA9GB-_\4"^W"\TU]%BBlW$V2:CO@Id>bafn:e%n,"78[<dkK&q^6oP-42Q_GRF8GYa$Kq9*Uk7:I3Uu[;fS?GrAVc!""*C&nQnInn"8JM*,+lZj"^&R@H%[V3R.5D_?-C8*pBU8h&5nup3W/46b*>tK)g#>uX"WK=&H7T(L/Q,J_.L%9t_8lR<<Ysd.5K%*Fm0L<[2:F.S+ouqeKZOA7OW,A?H%km;cU8F8ga'3.h-5#M8h"Vas5<'jFkAOR;5;,g"V*BfKRauUtdV6$#XB$.\6C8\/*ZA.WN5At5TW2?kpb,Qp?Ws@$R=^rbK<O>fX%>?Q#Ih/sRdU2$p,_l=K!EF;4YZDslu9atiP:/bY+Rga"."jE[n*[]ulaI9!a:(l_@Et6VT'.4u"#GY'NKj(OhVXR?$kKnGi3q'oK%dTZ%o=+!a8F^*+WFPju6q.33TrX;1:S6?do$OJ@[YfspM$&^>ccCgPg%QB6g.$71PBM@sF6.3Y,Nf>*Il*)_a8N=dGEFO&n*Y:LV%bJQ&0`]+dp<*UE]-DQ?jLh.pdJT,(j)5lFuX>Jrg,dGn8=ZFbo@!g/Kp)p$9FZou9I.J6>B"nocc=&Kfge=$q)?1<Gdg#[]pFitb%J!_e._g4Gh3X`jN7ap)V>/7>N4F,i"ZS:pN/NgqjF*PXEo736A#M4/RI55oQT$SmR8uUqa0+Qgu\JOhXQa>UC3/2TWZEM1@q'ciJ%R0\656)"\`Z1tXF><\?p"q*P9qd:p12eh?gC/B8,q\6Bcf.Z$orPQ63Is&!QTXSAgdV#eBc=YJAF4`ooZfp@.m%Ugho^EiDdJ<8O%T#30A+.C)gfL=s*F'.0cnZ\P"\chZD4Q8U#e.6bJdVJC;T>R">EN6ps]e<1X*1j4+r=8T"7\BJ/31jf'q=fZ0d<OPTr0Z%0I'sWj%c,QAk/XE"l)t>.BgCk[TT7d-Kpk/l9n`0pd+VBR>TDZK;cWk!MUVdD]d:q?tfT4%-[!3]")+[*u'%)80>QDmU!n)&jWh'Gn&qQih%+>"=!9F"I:!@6h88C%`!D@[.<!_pg&Rjud`%^bN\!(?,[Lt<*7Ql_&d"JV35\5aYl*JiMT&A9S:IQ'Lr4:oC96nnd`X?\$mL`.'p%26VOVhS9-pITk_3aD(qM>(On@+L`.PG-?Goh>ltj+NG)8EX))>JP:81f,$]\YCM#X!#g1qN?ZaB%.q47SaSi46&2rQidVDqiIDdK%?j[4-6NJO]J6ABEe$oPCESYOu=n0:(+u#;k%&O*$koeJ]!9^loI(fXK`rehh#@L7D=B#H)eU_:;!:.2tXM+]YdK<.#^tLQJ\-f=?%"3\:Veoq:bI04Mh#736hDp6!A/+C[k4S.P4bju1gqZ[10%nnjD^Sd1nVUIiB,i$-XKFNTERF%[j+V<L(Hi!pVoTO[O&,W;tPOA@@%+LV5^\BC5Ccm<[\gu!;?F2EM&TRZFZ5O/e$@M)E4*'X1\LH$&s%Z`LBeB_R/rd;_@$$1LNcX1gMA19Zt_=ZDEIr-4S^4(q8[&6&-%^-mD'e".%VU-@sY:PUT#TD#Xi_j@;tHeQs-9@P?@QNS29=9n$nr:LD#h090#"@D\*P-b^s7'4e#Zjs!%Xj<9>%];^sc]tjIVaRZ5%Q*_%!7'4KU/XE3@D"o_[s/;IY\:!q9Lc,DUm`-P9'#aQA!9?Fpfa4N\Hl`[81sP;r9]r1rUD#isq^jr$fs34S`(st-cRP6.J`-/L%9(VK6+^+@"0j2ugn??*qks(f=aNpIn&O$r'EpBtIjYD5oO#;1SZYKem<l<X@QlYO]lsYr*B:l=jC5C-@=Jo033]raO>/dP[F'5D@%]K/0AF]ubb_fJtY<P1@TQZZJkdg&p$cao0[l-"(L;K?8_!@,fScr,Y?,'<eBB'c_#,u76_0A<3r*Bi&4qf*W`"YWRAWZ8E8RJV9.%(&&A^VA>"p#j\QDdbN/9Xf*>5X:1@p:g8TuJKARFrHR4SkA+riGOn(p:[q,,oATB.]AplRpW$Y?nuK\!.s)O+.usWoBcR-YaoD7U%F-rb94mDGU-L"Z/3]r0hHIe8icXE!.oq]KHR&"@Xl0rsFBo;`!=l`eWU!J'[V^E<o(#cXSc[ZUn.A:F0&oeQ:[\lnH4!3AZq"b(*%*<$-=Yj@8[\T/kS7&*eK0e40oj]2t!b@n&)fSNZ1P!_R\F(W625<\@G_-k2#]^<mVaHO9nF*uenfh)0Afh(].caK"=g9>5BfX"R_%/klk3Kp?)mCp:;LX=VQeane"gLi/@IMb:LVT5L9Bqcq5*dQUb+Jb;!A#j:7senE_kV"#,cPN7qp;ttDVr74ZM:RBD<I4jl-BqHpQ%>g)<m?uG8'nr?-W6dhT;+,Y'ng.S#Tg,Ne_fGY:oI\,uChf[X;h-%MQSNiW`d%>F&5N[kgm()'saPYXrfU.gU%Zb.14H^/ikLIs/%6@;d#8@ET?VtJh?VAfDNm-*\bj!.S7Ej50iS_MPSj!*YR:IPt\cIf<+h[R7Jo89eU&Qk/R)N#:Spe:7@katf1q5'2PCYE/d$ijDF%JP\E?+39Zg<[i3s'0eIS7/'@5$J,ugiJ9EHGDMJ2T8?(BOOt$W+aHhqK"8i87=*i&cX<mf-m:eempPQ\.H\,R%q.)BHiuIOomm[s%&T%ln;BchWa:us'M7#/i'lZpqSsRB)XshC*cu*I%Q=V-`r;f,$m!iL_DV($__+>7:;:9K&BlBR&OdkFH<QgaX7`(CgkrXOZ:e2X]%A]IAsgqe"\Y)L#"9^-Sd@F:'&f-tWUSNE0m@o?[FQU5mGM/Jl,6!T9LjOi&US?[gI\fI@uee!P<_fNg9,,uWS1Y*+=o"`[$S*nj<%pn8P*@+"$_56hWT5Q,lWPl.IKqJj^RUIP%!N;oL]d3+C9K*K?A?4tQ/@Q[m[j01K_O&a8G64o0oM:eQ#"m50?]q:VD[*;''Of!6Q%aTQ("P$+"rS'nMj%D.d,QA06j=I2GC/!GZYD+qjiF>9WXb]sNOXA-Uh6l)[&npj/$Ji?W8>+R?1,p2*M9$3Rfh/"k[Pd&];c:qDO%-()OF@TDB!=l74*\XW1(c<$iZ,Wk1ncoS@3F`#isVDAj-_F$b/%T?As@T@7r\StEtAl75N'$)r^:lF)("'<!@fm,cf)Wt$Nfqhec%=I/LfECpdH,`-LNb[JX/@g(86R#s8GQ3Kf>boY=Z),6?X9JXj=;_*N)+uHJsEbI#=9QSE7UIK=L(jQF=&!V1U3B!==UBtV&KVjT>%=`?J0VFO9Qe)W@\*/s<a+KWN0k,U/Md%>CVFSRch!$_!-iERGKD9J+$QK01Q7n"R79I?KHde[Arcr]qO[*KT7r6qQ>Rm%S;HV.`d%;L0J]4HjU\L";I*kLiYQI^3`T3UE,0*k%c6[\Aj(jfgJ8ls!As[ZmmOL$U5n1T7BL.SH8rCfOcp<JG(=Cb#`FY*aKG19_0#b:p6#%R:Y#Re^>YMQ@kQ/eDNY?(GiY,fd04pQR]98k@/nN'GXg%A(#f:XR%D@/UnfK\p1`H"0p?S55%cmK<JS??P$/BocLBTMa&AVAj;gJ%YTrd&3ML+=TOqJrltJ13$Tm#3Z\c!`KI#r?U26-,_A^#l*EB:+M`[2c*b`E^9cu4l&*T4r#+>L_lPZ?lRXCS8[sQ'*RIaSOm3s)O%BhA8s=1@6YKlV7u<4/f,nYl/f"N&FIngTQD`]u3AV6rk6?HU;*c9PWldsN6PodObe.XUlu>Vc/V_t*,C<Kd8Ulofco.VMVYDYDS;%Bd_;O>:B0\imEng+shmCc-QFAa7lcu?Xq2m_".<U0u0dIIr^a&?u-p!HsT;;07T\!s"F<Hmf<:W0cbadr3u^jNo(KI?bV9pN.13f%)g-B5hlQ#2N>gS)T#5JbWPbq8OQSt&,4n9updasiT%/5d1]3E+G'U:K&psd!#O+KGXrds@4k">Qn8\5h]4XBtSk7WT[_a\o5pno%%onckZ1\qQMl$E\$4mGCEE7jSK*MBMEIA<CsiS%tsK,'b;?k%7[eAF,oSV]#NK`9AS7cVHikoUj[FN^qL9sZ5?jYd9j-I(SDF`tse%%XbK,e+XE(=49m][I/KK+P4;Udp8f*(:,%ii\kQu%kU:<hfN5uTs<X4%/MFTd*qj<(uJf@L(*]KpXVfM"(%$i+4Va)]0O-peh6*p%SGlu/BE\1Y(u/T1L(E(l/VcELc(<FOO7DI%9?cJYG0:Inqqb?u*m:MnNQ+$=YmL1$9m;qIAMN_+Rr,K:8f\Zl=W[5oT`d5-PgEJD%JH!rO7cVID%415-DQo,Q#.u"\%bD!)@O%2:I@fJ>qMUW4&a2SlE/WZn8oS:L*:>dU@jGn<&Mm]q,3SO4[g=@HB1ZGfQ<bRNj3nV?%mVpF@&MIX%^:;?8043SNqtT"'bO;^Kkk'QgHB%F/cf0u[oKE-hqERM??0Q:!Iduu9k(18o*_9iugmP(o(MB9ABGZ1(r^f2`T:WEm%7dp&fn#3uhZ':@SnJX(o12pU)L'bZLUO;1k;E:d0L=J52_g$47a)fb.kL`K<^%Al+b<.J&+*:6<><8f+<.fW8;#^f6XnepQ?p?s:%UYQW?LQP*RD:0<G@eh=A[2P=f+J>="o`JElm:PrQpbUM&`JBL&/=k1I;5n<rD_PZtB!a^Qi2B%F!DCaZE-_&_S@Jd>%+-d1os<ob%Cn-9+_T^Tg;`ouKn1,2PcWi*a#bs%t:7#;gog,23,uRQ#9+DZ1Hr`P]hgB;1HjVVW!Yl9M$F/qqU>L@CY\[(dPsPAmK7&0u/VNT?%[q+@s-SCP$=$Qd'S"PRde^ctr*!l,dRsgo8BJ:;;(6Fs)W8Hc@),)@unsRfaDSJt?V_DC^kbEE"/iV\.r[:=H&;KI9^"@e+YeXXu%.&!0MT(;%@N+rQ,A;'u5?IUl?-Y-8F,(+p9O-m<M5+NOCacQp4@416_pZY'q8<0chYFK8(l3S3Fd3$:na?r5`@(JM?Bd9lRJGqD6%XcP3g2'-sD/^Q<L`Qc+l6W9'Y#UHB`kPIq/'IKj`mfYL,Cqe4GD(sfT^lFR]g3faQA.29Oms%-7!@><q^J@sA0Z#AU;phPLr]VL'%JHUI$L'?gQo6ie)#*X+kOH@?qD8&eY9jpLIgfXrcDnjUd6t(-(ATO+faB,&Y\H>H7j#[#O)Q2MERRQYR_Dlj8p:Z]siaL&!jV/KW%W)_35eaPi+^I-n/Mt2hDJ8VuLdr>kSkNXSAZ8Gs.Kn81A'@%*7#q=Kg4329qnQQEVe[$_8T]=R:X08e"Kr,Pg@1gF&?pGTc6RcI8%4`hfAb'Fa+-rgY9^*>jHIg6[H6?EnG>eW$S[lM6,8"R<kSj=tXr/AJi=U`Y1/65KaDn]<*rfVDl#o#ZTBh."7`(*511'KCYTEO>t%U>=Y;5JK@QJ,$gf^;X/]MDS^/\q&<0Z_T_NjBd<@.WW^"?@VK-r]L-CbC*%sl/a0EeMCD"^]HHEKkGsld)nj$(a/e;Z39t,=1&&`%%7pP2HDXeg[)XSj_l/*A*p&LqV)/+)`"73Tr2EF%9uD<h<*^/oaP8<;!6g$Q0qJ,JFs7&S5<Zk_!3%ac/pIH/`&<0$f7P'p;kcL0%d6))DCk+cSfeXh@1^E$\iZGVf0@Wm+_[m];4LuBg1mu$nSNi7*Mo-u!*V]gD%_)YhH8lE=fcMa]*&3mWe^]=Qln*AY1VM<[eO:q'%KHC?4_GcNdBZ-qQV.9@-KFrNIjEh$sTeXi,;L<Td5OmY5aVhBU;:[1M<cQT075jT?%lt3;)3Rs5`.,ud3J,@31N-i-)!]?e,V7q]%%AE-R"HhZaK@<rCbgrXYg8Q8(Hd?%];O'Wa1Bl847#T%9WsTBL6Z!)on'Ita(h.T?oJL\cqG_.V?XUUJDaJ]Rei'ZcI+=g?06/A4%WD4Vi!:Rs0&2R30_VMI8,"OM;3&CRa8.STqA,r6%I8%B>Uua,2/)WuhH`iDnqlnoGq`6CVo[l"G0sAU=HaY/aaC6E@IW#3GQ5Ng3%U2GM3_$'n&T].+p)4c!]rkY4d#O%(fVeC^!2[!H)H74s`=ZYUsZ8_D2L<.HsdD\(("O=?2/d[4gY9oWRA:Xc3n>Nq92]!#UkWPMe%UG3I-?faN5ZfqKNk^%RN44)cuKSpqH?.0;Nkh+)RcTDbeF<9U=l\HU<l!YbDYg"G@#A-<nc%Frp8E!Jn&I)=&O\!1lAO&J@rLMh\%:WlfTDX8="5=E<_d7@[03ngh*eado)VEA^jIKDNB<XF\\$q^L'Uo6fs%1';Q1SbZ&WaFC85rpItRQ]3.6fQ3Ujs+slXWs8%\>s;'%$@,J_],m^u4gl3e7.QWV6]0)C=DQnLd&<0)JsBL389J)lq=][V@0pp7Eq14L('RJG,ot(AdPgZF8RHH[Pe9X31(8W]#5A=MjJ2(O%cjBMCai+iN"no803_t"GQApQ7(pJ7$lB<P`?\)Nl=7T</4XTJl?cN_mGg<KRja"fdfQrmtdCs)Vj'KJ$bJXPa&IfI%U8cOB/C?8Y%I,T9fmJXse4@s0r%hU=\oFZ1&W:.OMTXHE[<[N/*,+Ir_TG45=8X;0r<Z&cE512cjn"J[:N*jQ/j"!%:5C6]rHX+=T$u6F4>;ad.%\HcLr&RQOF=/"[PIf6U5:ENrfi!Ho[q@`P`]-%]cd0',@=s>&]s,;Aa-Y$NB?_7p%T1i1u!sSA"o%2uerM_34_?'u<Wur-,.0BtT%!Y&Qr!tSnLBCK!?,5`YKV<rp/1l-cn,JRI::ZHclrh'rGk5>=DKg\BG.aXf5)>X#PHPdCY#NO>"fH$X5);hM+qRKrtFY'`H^Fp[8%Fo?i(<7d;\;D<,`Utn?gEZu5m6;_%26nkct9I->lGNOmUl$F8a6dS?d!Bup'f+e<nddLS^f$7kK)g%Sl)8-pPVWAhogQ13G5-/Z8%<I+,)?hV%R<9qJ$lbl]mJtoIdWh9*ddq>3A5,TCJ06l`MQ0+KueqoOSTJj/=OaO/7"hZjj(gg[7)Oi,`Q9bdD]P8WF-'5SUm;XeX%)9I)b%U;D]8DA[i=khG]I[Bf->UqL%f0*:ZYhC6rmud'*A5r9_2Il[?a(de!qkk?bro*hAf5H_bIJJZ1f<=W!IJDi(LFn;t%uhas%n2]&BCj/\TKg*THOf%"UrSlnQZgFZQ/_lEtc<lcai0W3/__Q\'5CH&uRm)DC+GQX;-],HQqJCNc"]-hYdQ?1?0ui+(@dVP!@rIr"%%Wci-G*5/DCW<Ck.kqQD,(X:Hd^Otm1`$gh5O)I*]eumg3SqaBShTi3rAf;AN?oFVKZ2pU>Pt]HmCX3m&SsA=aD6^J2(W*8j=g)P%U@0Y6AQ^QPH/`u`=nf4Lk@.%p?M1%N?</^".o!-@Cp]E#\]*(\fspip:>b3"'=1cmq0I.0on_mQ/;k+)W>g0>rB-N'^1lHaJZ"[*%hu)U7bPO6U@Uu)/9&Tt*kkEC3a;Z9-e.3!a4.O$U$p?9h'\^o19368o:SUkRhl-iE+7Bsu\Jl"HCbLZ"VcMgL+"ZjPV_P()IK;Y/%T6cG9:`MI-3/HRGiPg;8QXSY)1rcN,e7kqFh2maEAiQ5%dJR]5]@1iY=b]_gLTb'7Hi3$Dq_p`I#g2cC"`-tS(A[PUJtH[q')KsG%OmsCgp"%j!_D+"3P(."is"ck>s1@Ghi&@1r2lC<damlHls)RZ/j,\]>IX_8lYQ'!701Z&m_&^k\s8VZQ_oKZ(<VG$t<oc[Q8J+@S%dZ9b%#JX..$\2+0G<Ja[gEd]TP6C_.K1@::^n[+&1q[0;0MVr%']$-H4bX3jmOMs9"mohCDRBnfV+`-L_8&$N9an2TjWak+MZR^6%&-V2if9XD+j!Al!m`e?EjEfs`le!!FR@99D+T0e`A0;:=H3.P<&rbpM`g]57a75le$]ZqD*JS^Y,YC/dcKt+Pa5ZR5hg`.^oBO5_%GAgj&s3'pK!;^uZLo9%g=3&'CjF@(*n`L])kHA3?]`7iaLR6ZcX5i)(_uBr@a-oJc#SiKsGp*8a@^2"S%?r@L>WiT,Q@t8[/.Sa%%-j0Kq=@9^PQ3#"Eb8>2\FuSUT!Gk'+VsR?c!^Qs$T^Vih4,$b^[:2PWMl[gMfQMmm_=it!(Mup@=J'RI-cnU\)'NC*^n,8^1X%Xf%0?`+M(N]e-`cIA0\`;lIYjkk^k')T0r:sF7J,*a$QpH/f9`E@r<:a6gNGnr//ip15"[+gW^))_3b&dn=C+-JF0`+8YY^lus?"@>e%%8?g2cKP)!DW/N3#7X%lH=L?A\I1)+H$r4P*Y5KnKRap=i,^k5q#P@R(moY'`s#2;J@(`o7KhbP/*NKT'R<>&r+nMHh<T`)loL&+%Z6Z8.m%Ao)==V"sUA^Mbg6he[Gak=>+[$3k:n7+cp38;/")/7p+g!6r/'jQ4M.1-8)M(73e5[=u"'m('K@rT3"=q"9Q!kBba3PQp%__b/V;@8#rco)&2&NQ+=.$+IC78O(\bpG^79UO%E<iWOoB,rWQ6aR*OdsG40=RX8q$n.jN(O4>A6U8Pe&`@/X:DN=q47475OodJM%OH:6`r$,=$@2+FB"I9Ka3>bHu#%S@4i>cB(J_jtX7k_('+t4Pn?%h')rU!u1$;Uh[Fs"@RV:Z8Ih8K3nk)WY414M9s1&s9F/]_<m%E1R@cJ1K)OgnY#B#;8A:r%bN0m&l8J+pFRW-ND.2DViBk\/F&'/3,'Sb/"E?\U^b%d2P/?&)mVkH1mB:+]f^<KhiBe7^NX[&/[`G%?n/#Cio!i\!n.,h)MqQ_!:%a$%+dFm-=_#"#T3YTe;q65]qiX;T!59\5J0#\N`#1'[2aGKmff6Vm,Z62qV>`_f>G]^g>0uDTcplF%g=.+f%DB46::M$n6XL*]3';o(&M*tR*I$Zhkg1R9.gBAJ5<S9!)t+k89[>n3?KT=.'QH@dM5t<hiraq'f=`:ArFXQUPULnDF4%FQ%6j;;amZ4ulcRT^TE[9lX3&\a9h$UZX7M@07#^bYq2Zmq>65:VGm0H6fRDtIG.#W$WTB_A3)(5lVHg'1mcFn*2M\4+^Qq6lpD1_d4%+p\>u&k9ZUn\D(/iW9Lp5rTJu*0lg0?5!riBI`L6&M=nicUp-h>G0ApLJ/WLX\(L64/f)EMQ#K[jYoJ@>);RE*hp?P'S+?Y)Efjc%rV%LL-]B]&+f5sO3rqZ]("k&l74j<h`4iHe.a5Yd,J\!(pTbYr8l)>gVr!fiTPPo!^fTb)X[XU`dHQh>i`iei4?S[qc?DcuC;^;O%4A?]>Wh!0-eeO"5SBd:'dLJSVUr46MTlWar8K,NX&"Oc7=q+b6/]$`O&",e=F!l%M5mbJAC:CDaJ+N3gO&rDWW$1R0S4(sJSIQ8a%16H19;XZ0N(776`5<<U3ZXlB]^uJ'nLunaH#p#eJDZpOV7Un-7X9X9V%X<QPK>k\t"_;L:g4G]W=jFjJf6s&X#PQ+l;/8m:,+QE0%]in"EL!`eCp;<s_7AXtF#TTj56Jt,kqe:iOV7]/(GCbfO80f(sNfdlE5+p4s8H.aq#=j%%Eb(Aar$1BD6TFL0i@n3n)!E6]b<Y<c%[>-Qc=QdY6.L_bU>]&>/5"F,k/&CQ>8MPjqCu?/A9S+KAQV7:e],44X2`1;1^t"PcM'k,6WP^>\P-YQAmddXr8Y<f8!3hX'G@6Yt%-Ob6*NCUOtZk?.:bPKs.'3^0rc]fP1raTSg2&/:744E%lT`)jb?24@Mg7ch'&?lVS;n@^kSp7oa<I#P&^U$2fR2h`+mCQiC>#s8q%R*/8e0].GA9fB]N\)/ehH;?<gID2P='LFNh\=f!l.m25\EMuGe6!JYM$_aKBQ7#i5N(T4DZLO.t'U'nD_UnnHeh9ac+1kf9DNh.U%]%0.L;UD%;%9m$13&R44^E"inN`n]^@%Tdab^HKV)Ik%aO<jdh(9l&F>D"ar&^sZ_aEVH<a0;7>0S*nig<MI%"bp#<T?'Pr"u*EG%G[a@N\t\QBg=Vn>1aoS"VP46jnL4]l)ElM1?p^5c-9tX(T;u7<<k6]%jK<[5r<8=i<7uH9Ko(T$R".U<)u&i$ateF-U;SD>!Jqe?%MsRDVm:du]PJ%)n[*2ZuA[<5*Z>)-K_LRm4"f].D?6Uk:^_k1V"MiT81@ZTR>aQ/Tb!X*,iBlSM*(7ufL.M`EB[2P*!(TAA(nPZ"%/4+;DcEKKg#`Y7.)#UV^6$0I<$8Bpl,(bU2Q'[ksAW6UDC>O0W^S)D9B]FE8keIsrPZ9XhA7AQ(Ng5[G-&05;3E^S.ZeUH85qIk#%Qr1g)-qU%<+l98JI(Y)1\bH8If'##J$HtcbkQt2ZGi?G;j9fS%>+o]Nn/?<k9W3hc;5IQk.e4$,82"os^aa73>_US*`]\8UGth9P%ikSRT9UJ\_^fBG>BHgJfKgn>sg)=I`Bf/qH#K@sO8puQ#-m0cm]hSjfc`e&N&n+Ee)u[QSoF0fJ2].Hp4"h0]'KjSM?JoV=GSle!%pkm%UWp`T6`P[6dYWu;m!93i*KLIS!9I>G3`N$9p'>e?T&BoEZYUC\`Rd>^4Lho6sG7j>p5$i+<(B#F/Uc$"ug)H6a$"8b*Dr>Df%kR#q(eq,Vo2(nD6JA/D)`)l:>A]>J!(>?C1`7JHja$<^V(#Ss.?.$L.jCCSY'Z4C\L9@J[p0-)3$KDgu1ncE"Z1-oh?NJe6(k77C%V#l3a.sse_;2o.@YFq5n&D-\\"="]g$_!Z#QkRKV94?CkNNkGYQ89nI`P%9gJdGpq%769ORkPVn&^?4AN("s%>G<L(KjMA)GK#6?%\1d3TQnT:G:dRD7U>W)#bhSk-PsPIdPjM*%-BtXmK`btgBE#BW=gSoEU2Udk@U!3o&ne6em!QZQ1a!UScO"6rOiW*\B^mZkNO..i%='=H4lm1[3.*b.(1-MaY[X+c>'@+IReCH?n(4]@!@YM.rQq:`'g!9CA$_4?_$<0H/i%.q&n4_jHc;rSDa$at+/=F_9b"k!T#3OA*%$>8=J+;QMI(9J7ToJOo<\-r[oE>I/aXkaZ9U4XQn^W+sle/1=,Cip_d\r23Ep/,mhZ_1kfEE#UkM`s8#EYHa,n\Tj`%;QO?3?L68%*!Mre:psfb!lYpK.#XWG=.`>*(>9F7RnsmW$6*,L-nA'g29n*2EEJMdMiNtAp2e7,%Ur\'CRg)5,r)M3S8F;8\ed>aI]jgI)J<:6%OOFBY2HVb4kQfDA\jfa@7L:T5TRdZEKn^GU_TVgWL'9!e_Cr,.[lK2I_UcGa+U)(I-?3IJXgg0`XK]*23:Rnid6QOJ$<aWo6!253%ML92M(%C%GW0Y2FqtB.MlYiCapEu"JbtZaP!Pq>+ZrEeZ&CLH][,:\+$0K?7J!2AR^f^]?>"qY/Le+=N&mLQed@9<F'?h=K;+6#,%,:+>99*VCTX"j.X4R@Z<"g#j3V0MSJ&mXAIJo_-RTEZScFMY9(NB=5tY/&b.kY\uEXAi'Gi+9:?FU]<m9p]^8Q*MVl1;1YE[^YWC%Fb-JT"dq9;';!\+75!?33lMHi`$!V"V-/0QU%)"!e%gDjXBcE,d6PGn]BMQm2"0E>Hn--ccDZWG-ru)EA+#%f8Z31AkXb/W`>3Y_%Znnf.I+0hV%-6nO8k-<[9QM:37/P>;UG="X.!_L:`((!P;*.;u]m<Yd@-s<)#"3-)P6W4(;;D+-Mc.!il+:?B-.8_/DkaCAk[*d0%ja7D(&XS=RgL136:52F5inOo0>Z8)(2/A-76shR-\+IX'(OX6eWqPf/23QY7s2h<&D+kY+.q#BgG[cO9GH8EtR01XL?rTY:`sUoN%[J?"oC]Gc'Sj$-kT(!+Tg1$Se5E;K[QWeAjl]-TO?MP.?c1Fdr7s#GZBCI>#DI#Z!F2hB,+[0k\pPD0<l+e,'^dgSFK>-M,%;ZF7%J\c:nASbe:NPaNl$oh.j,>Y(&DsOk9hs/e&,SDfM`c9bWYqLq5'"tj.7,<%,nTnI4R.&RJ.>l5m3tLFoTdH37ef>;&*@=k#6n5!5%UAt=]<FYWAHoFmX[c3kQnPo6O+NMEN][N8s9X(cY"*2"Y/3udr<pK;NGqISYm/rYX%TMYol%>#+,;-GBPWis)E6hCDjuq$R*ET`o%JSBJPouSfrO`+9?bY:NbV[GNd,\E?<'@30(*H;FM,Ok(5*740kPE@9Xj90^Lnoi%S!m68X@jr7<04;i'4tKGTEFNHRVJSX=]rQ^T%\d8LS7p[jk%$R>p^oWt.800O'le-7nP6DOE.OIKt%+5l0%Vgns7eUb/"U2qkRZW[EGtVhTL',>14]cEnTb10X0EsGqcJqp:/"+7?%X'dk.(-tin3JmXg2J\g!)V@3R'kmD1m@-ha=>GE]U+7pTdmsUbEXD<A`nC`t5]L"e_e"%G1\9&q7L;?.[^d%^_W##bCYQuq`J=Pc%6/)GUkbMTSDkYr7E\\SjT$-58gWih\!'@@G_SGA,]tt3!fO`qod(5F)(2K^+Mlr@B@E#mO6l!o3-GtFY;'J%%N?%=SB^Apb[ME]l%*EOGq'6%@@#tD!K%'i&/Ku6N\(dXj$-oc9V#mQ!o=;XS;d+fDUE"Z(o>*#(W'T;+5'^TC*BknNs3P*0:EpNI0of?%X(e>_#Z+o'P%C'6t9k7K@Kn.b1(1&`@&Q=BIm8$'MKe?3d7d?.%W0]_9L'[CZkQVf1NY@4h%P"ll%<p:M7(c>sZ1N=+*j;SKK=QKaZU:)I$YSs3@%]V$AY37jQ1"E!heD.eVam>^tW(-p<iFU5hc0Klj+%B59225V0R=hk=.02@P3AP<dQ;6VMRVOMU1(hDuR/8H\G\I9p+I%--T\0h+5%,a<kSYt:"sb'b\)n1o62p;;,Tg8ucJ\ZeQ-Z"-,W8l*[8iQ[dBW+&0[-&;qLH7hciOsoN%$F#MTSB6("IM1lfZ[RTSM@rG5"1*q;%ZXUHJ>]aike<5N?M-a.TpuSrikW4H]g&:&-CT&(PctA="[d`G)/jq7mfJU;VYZp*L8B'+:$U(NuOR;qT%Z,H4`gETif'>$;j,,_1%(dohr\$QH;4,h!L5s;,j3dq]]8<Q(JC&nt*MoCO:psghGjX60g,XrE19^:!m;5,@ITNJ.bL6]SpoeDao\hE&m9PF"JrCXq:RMn7"%-ik9c,bnpDk:`P;18,n:&5C-$jH<EJNNGd4$cmJd\-A6u2b0cRG.Q+jQ:XS6iP#^uVuDWi]`NiNP1q]Kc.R,M&r4rk/_Me6iJa@\%Ii$>nPh?OtK3V]P"0e%WINi99M^YCKntK7<1bC+br'V@K/pO;i2koCVm<2?]S=D)+\X[A9$rs`L!Z]sL[7"dB59)@?:60-pjHWu9%U`r`APZ>qeRTuPC`+7gc(bb-,/4=S3(GWYr,lQ_4XBEm0V%R_e;N5j#`sG9"l=21O<HmAe%^S'8M`_ZBM"Id,B2(BS+F0[hhCpPb%<"Jdf\3e>^Yiof!+BPZ)Lj%o,O>b%GHAO4KXD&o`>4;Md>#lc%Tn!1JPk/A'V&CWUJ4@e#$]B@"4NtiMVC3B=,]d1P(l9&j/Id8.%Q$KA2eo_BFrNK*;Z^?QJX;fP4OoW%l0J"+D"hPD=LT!3FLtiUY)5:;*:uLsq^.r(392V.DY&=)j>)G6*V);T9^n.A,r)pqjOBMe?%F=Ip)G!+SQlP<9"=6;M4JE^3Gd19pSi,3+UF`!R9'o9m6J`P7B#QtlKYooggnSWe([/RBX,%1d=,oF@1<YT9O,4K*-LorJ]:!jho%75Q[0VD<g#m#-s-&6W3Z(I:#`>'A"L6bJAsH6rS1V\2N=b6$<MhLaJ`P*R51#a1'uPn#%Zb%#-mS!EhL4j%)$L;=H6)_l&mg9c%r%$S-?A$\6)A)AR@qR;FmnblL0WVhl"mBYPAd<[=oqnM/"gaA-6L#C;B[6B^)j)1.>+BYnm1-ED)iXOlOpR,uUcZ_u%!5+MmmlPerF%&=DN)"N$;G9qj>*lT-mgesbT]<d:N#+^&_(Jn"mBo!?1cVgu=6R`L<k_+c^9(`^@DY"k%<P9s_o-*,b_;&Q'hjC8+Mk07]JD1U.0%odWWlfE;,K,aL02)6\WdGhQQWUm<!S171JsJB#MM-aJRF(4[#8NYY[&;fGsn<`])SIe3fs!4leOD&e#AD*993d%Mdmc5h^`)H@1S%;p\eXbbBWaW\G'8<FRKZ2,V*;FU7?B5jpV87bJ0^jQX`4FVi'fNT(]>a49pjS5_fr7gG%&Se3M5XI2l"`"k!P?rTa*%89lP[Bb4&%DMENm&otA#f(6L"dm`_``5`@jNF'#mK-,+<$E6@h[_g'\?XPC)TC37O@uE<H0jk6(&_CPRj2A2/(6B`KXtDDSFq5qG@Z[E5\SJI*%9$-LlMi]7W-3*4[FTp98oT'4f,PK0-5ObrAM6id/#PO:97YU)rU`[GhH/YD#c4[C,\*O7XJM9IeDSPYP_]K@h4Mm:<!SQPDB4LI2%N,5FuN<i2Kj)Woqf^CC='<8t,PCQ.s(qsoE:@4JTPh=J-\WC[i+rk^>heGR#YDU8t9I#FS-%NVV"5SD"DVmQ%Xg:<Yb)cjj0;?$%%L-H.8n!YHLNMcjLkUinAZP_`Z>?AN/0HS*1(S[ulM3>S3%1A^\:::3u+_!;p$(aL8?]^#*I*s]"9N&UZo_9,B_&S!F[MkhuRQBOt%(,`\`rn]fB9Zr:]p<$l*;0-Su5537r?nMP=f!kPThlb">]>%4PqoElkMtO-jH43k_4g\])'R6HWX^eHWEE^]UAuBP@Qf.Qd\@c+A%JOsMc7P46"JN_iDX5.Z5$g4IE08klNqRk_mT>hTkH@CP%UL[of;0g`jTM5M"/-]I/"3VU/Me=N.e($s>Z7)b)=K\=&r0_-FC&;\Q%qBfMM(`O>J?ce]?Y,^HD/3775<(dj?R3gH#"2H2I/$l`WcXRegAneE<8Ve93Vp"[k$kD&f"e3e@V*6NO&Y)kiqC;8?_Vn&6INb-9%ABi+b5,:d:L'hZ(Rf`41L9Sg"96+bNV-k\Q:4]*@#V\dYM9MZ!#gA<N(pq+:2=EN&WH_[_;2-AKW?[Bg"n>.#M_p:k'+DK@"3,"l%?3:jm%$KnUDgTh7$J^f>F'H)$M.;PJ]^ASgnR#u%T*UEu\(?;Q^gA-YG4amakU#eN:+P*h'`rplk2.fUl41N*\0]$jN`M`c;qHF&%.NXBNB^sp[6UXXRStWB&?&KUX;+&5lX8i^,H&GX7[jX^_Lb:8/)M_])2$d%KQCoBX@YRAMlU>==7M->I.84DE026O:m@^0tgdG<3%P+#5o"%XW82$+(O)Hl)HpOU>)BN.mMGXs]f9<8S327*s+7^GsW,Edg(9]KP2lhZS!A/;!6^>r:bG+o\i>V.6[+j<,p6.Lk3GYP#9%-n(]s+m=//9,1fO-5S17F5b)gmggf/[C648<blnjpU9"uDXHiX/e4DgQX/D#`PR%^h8Sg<F0N-t-b!W)o<oTd\P"gJN!tAY'&![]%h:uj*G"j6sP[*ns\boEi.>]U6pcO+(eN1h>X;K[<e<R6CStbjHO+Y_pmiGXr*S;ch^Nru@]5q"9T)`XSl]E'0.OhXPd2Eg5<^e'O%.)LV\Ok07GE"opdk6ps=iVFaQB6\FHE^D3))tm05P7oYj3riNpEXSHP[9erg%_-GFJ/lFdGE'#9C0Nsjjq.1#3M/rPA:HU`0YiuS%8=%BY,RhukXQE+d]-LK/#>(>O_3njQ)/ZA$CDLQGlWP6$J[u$u2DV\Zp$,kH7^V%%!_AfR*AeSL"D2'.6)P9Ah>jNQJ9F1)<<?sA%QU`?-6NK%SA/^"!?QI^*8Ie.]92R0dct.Fl.^$Wh.so$J"MTO`gVb72[9+?#\*AAKjB^tAdAF@TF4(c/MIsISJ:slTJV'B19B2&/%TXbK&M)(*Ac]A3N$:6r>[c8p[F9U=,gt#pH".*.-i7e]CCYU'ekh8)*klV<%pE9NHdSseb<^cL^i><h.Cc](.lRJ\>YYWRqZrsL^%1lub]/6T'SN[d\HH"SX^:94US][(HB]<>omf'<=]".5c?eu0@DGui=mP:]fXBRn<I[4'^I]rhGsD,&Lse`G@MX+*(q/uhCCYOEZK%*lSb)1Aae4D6r@j9UId?B<5Bh'uTS84>)=JT,TW@.7kKA`_2SdFk\1<];F%*2$2AW2Z^OhA^qQK#[1N]K,HYND:/uQREd)$iL))l%1)Xjn]k4KG\n%Xn-CQn`Yb7UEfP#+WH8&3-A9)esEX.Cc,c8h'X%?'=0200LL\RmC4;5KG$`fat;c:mt!G=#CJHs4_B.M0?'5rQ/%_@c'K5)M>[lAFaKEc>"!`1:nUfIjo!jPqdb>^r:!+Wek3BbSM.'CbArN0XaIA:dJZ1k_SNAF-$qU`nCD24mkn.d0V5PqOtkErh5g%:H='`^n]:-Ehah^Vr<b7T?Ku[6Y/O`]g4(tnJ%)dF/,f2V2]^8+]?;p(q8Y9Sn%,Q]m;#NlOc+9Z'Ya][!L[nWrZJ,^^R[%)P'Xh%3i%:?#<\>l=RO_tC"'3pTO>Rs^>sR[eYrK0UY35$`Dfkk7D5&!@T[3-"!=BTUGO<af.2RfjAAuK<Xb1FUl*i-YmECnfE/-)2K_&]%XC9mg.*E@CTlS)uZsl!Di@8?V-K)OG%>0$f&)('#%@4nfmh-(PS6?n4dW1r>KO`.6f;k@=!G:U"bp-<$J_\$7[\bdHUR>n%[Ddqm%72i"-'6'gh'6m>A9Vl`W76>;JX+=>oFoi2CN/8:4$pLUKet;8J6g7H@:T^bQNa3Y&@f[Q[%b7`IkIoi@8Y#Xq_%si&m1?g+=E-gQ%cWc2Wb7VtrFobY#9Ha_4-oJMZPJk9Pa2^'qYjo9+f5TbAN^3J3g<(C0C1]-R3f[6H82:S2OEr6mRr]O$LtY4^C)4\!OLlo2,cp(0%kq!6WY"=o5ocfE[2[b9HYf`2tgXfH*<p:8"2E9i7+fQ[<Q+3&nVh7(lhZ^5[cRX*.eW^mf=7WhHRtmBFTVOB'-*)S.p-'J'#Yo4/%*W71DJu[rFbePsc,uj#\5ZNh\"UJdVPcY^QMt:MbZ3\ZCO1sts&kMnB.38&jcuCK;,0c"0?igB[>O;X?<".E;H&Z/:QAE8cX^hU\%=??U4$t"VJ1f1B-*-Q45"?Fu^)67jrj[pUaTZ"^.P?Y#t>$@QhW`]GI[R7keg9Ce7&OCAWI;(p=QZ32Z6+n`OV0]nNFA&i77I4$t%@iG<97ki?E-!9@dXatFmUYqm#9n^5-@$/!s<O8bRf"jO^i5B@[(.)h7[1[(E24;p.0X)ES0tS<>N3Q9C[^7l8d9(a#S&TEE9o@t,%D'PtKcV0iE9"<TnnE4:h_SLV5<JjnqVY)$dDA)2HY_b.-Y#P9bka=BV`$7<u3V8"J7<g-Vb=&KZd)<7.lt-s[?<-,TQkjY0`'YHC%Q(8^gOs\.SM'6t9FE85^GKB%)W3?&LS;8)2kW!CD*?XJRi5*?Dj_g7bU(g:)A_G+?Wd("!P=g=h\C6XJ^7Z4lZ&"[&W[(ZYi%u9o%6Xsu%m'VJEq?7L?Ojq`TD-Rn6V)KWpXCXQ9OK(K[eJpXuI(eJ933t5?U#j(tR@%=qXiuhBR$d9%#V6'(A$]X7&)Z\LS<e39dq@YZ%`gO90-8m75eNN)U0c+Pm)HVpt_SERX1WC;2Z5*e,25lRIP]-q0`7J#JN$Wg&3nT"L7fhd&C#`6#^(/Bj:56nnEacn_3))f!_)*$l%o4kS8<-Q>^W[M#pWc.Ql[9-+"q_(G08mB4aG0",.N/4YT(Usa6>JV(+e#ET7\ulde<pQS)<GF6tAQMXp6iVV^%D]:8_LW\n4aKE9%-_;to_8)g`2pHTPl=;NH9H@N@?nf%-Jm7FW!'fjCaB!a2YS@b6Su9e+PuFOK#UVJ5Q-#j.+Tc.N1C*$:nadT!TU23G35Z+rdAXe$%i@iGkbV#0$iuhO-n:WO.3<b8pecN`D>1?G]>:B[)ZNEN^.UrW=Ek?*i3<[?r[lnEc7*KsM%?cA_Mfk,l1-+cRgq/4[j=Zom3MnGX%OB@J7'TWju/gV&<`)8=g:;f68\p,.d@L0Q]SNX3?K#ES'GZJ>a[%9C^C_`RQ&QLXjMkporEARa0F]Som74Xf>JA=#WeL>7$d6NWk%<8_D*JsNA.CgKugdKjR3UrOC_Jjtn]:E?+l>EqD9EhUF8e3R%A#LK+hkLFY_80XOr$.KA!_MaPmEY!r36;h$*n4Mt[<?jsHS#F:W%<eF7K%%??PG/fiuD!&F!;:KF'3#G*'K?O(RK2Eafb-fQSU/L)h?PeZq@SIrD_e+k%@QA-_q%KO%kZns:TeVF^,[%Jk@h]Xc,Ds>q%0oCj1gAG3m-n:K0</MlY!`r%!DIsRgp9gjQa,GU3#[q<Z#U:3taXD,4\nOWsE"bVi:e$!D+IQ@gUVOhm_.7-l]WA7g(e)EL!1\Em%1C=7`M!iJ8&1@iB`[DB',S"U%'NL>JAk'V(Q'R@1((&H0_MV4?l8V.?@MBR#&([W:D9ODC%=0bTbU=%XNHPW'W#/*fgQGE!LTKAa%)$NQ=PI)MP=O10kHJ4XEAT,.e1C?W$3bcDYS6+E-0ad*gpcgPA!;EKp?jWU,]dYr\Muk]d=N\Q1C/<!;#,AsfA\GXj(^1!*0!6Lq%^_It`G\.Wqe7s?M-jXKkfbamE,n"TE$3\L+*/jr_0VXd<Ri"T]-H8bZV^K2aD.XKl#+5egbU=#R8]DF=TU"&CHB_::^m-?MMupg.%AiLW]Mi+fm;'6cF3AH.`&B6C+)iTAG9;Om^'SqK1@:r&,anQP(Jl,L,]pK[+D9`X.`$d+#-!IO08o^M,X/KbBdg\6tgL!^0QuoG=%RmS8%*<f6t/16$VB!?At]AN@b>XNQV[Uah2EgHBE1oQr?c!0q9d`$M`#(FF`&=j,V4cC&j4A1JmHFr(pe!C+fH-NhC(a91hY?uVh%9V&7T@pmG:-PGjSJm-[2Ta@7/*KjD9d&UEU`'>mc.mVWCMO@YLD)(5GeE[+W#df4!phg2bXPrDTJ]e]Z#:;_(G>)I\40O8/\lkJ'%q^Zh;C&:ZEBXClLlJ_[K*)5lg[7(GG7]STh:u89n!j]c"bYU=-D.\0cH6#6gJTe7!heg/TOlc5@;+GgKQiO\S0o=;$YmT4NG%k:M%YF(Q4`M,Uq2L!$\-!7S^JN<D3f[*56p*$Ut+2Pjo4ge::_:7cZ[*@J/hlX\Kf^m;Q#g<C?NlsPAWU6)@eE^^\?L=q`/1%N*FeMQ4%\HL)6+ii'I$/88ZN^s6+I,M*gaI1`tbpf*.SUn6F45d^cfFWCYR2pj(@+0+`-S`"Le"(g@/Bt6o'jK:DIC<P6i4^mIPpgrjP!@C0%MIU(!ZV;^4jTJ\X^YSPWE3SW_F(1D)$Ta/uUYslQGk",%A\uEj:4WLSENpSX5'Xa28YN9Yi%W3kA;OV[#IEDDh2YTI*H_ZVGr=hD%75MH.VB)W%M8qb/b\9K)#U@.M(D<uQ\_s([Ze>kq"N:EZ0R!@l"sA'6'WeiqTb$UXAJmK93n'O=BJ'a/RN0F6Utf,RUp^G8O0.EO%1-*Ai&A;<Ap](MtXBN8k\WFQUk[i[MKN*M;`Q_Y:ES4AFbXR"VY'*3@:_+dF<Hgp-=%6CF+<[q6`@<euJ@'tj!nZ2>ZLY<Rc*rr@%<^aJLB3$@.!N#!?#-pl`F4I,KgBFOn+(-Q9`fI1B4L*L+G,dDa!FNsb.[(B:g.!sBO`P:I/(:%PBO7Z(a"IX$XG`=UFK.dY-=CAX%Jiah-?kEC+b@'QM<+f6db,GjX1f$@phj1]nSFtIc\!:b7UM>>$7PGj7A0D*)M9VRV[0BBq0[?2=Dcbk-pU4_F(RrDepB&UO#V7<*%?CS:"l+k-/Jm(pU;tT(/"Ya\Ib62sB85lG3_L/:YP8@FejmhZZ6r%YDpK"LjMEZqGX3$'X7Q67PVcWcVF:k^1C9Zl[0<W-k=$B7l%9%9W4Z7oTbbsb"henl9^3DP4j<-F`CjYO2*(%9u03r4tS-kam.]3JJ?BGAN.">9>QC`D^ZJZ2_X_f^7T\3pkr>O]crW=7)\G)p3G%GX^ga4"Hg:8$HHh8Id-pg9@a/eQo:bIT>G1m.`(#RF*%>6&0#H2`r0NCGoB[\A6]5Z7;g'K*Tc0eO13C_.\_aleSVlC<&AS@NInS%6gQU*]j@](bm2sgN.lFhK.Et)8V@t9Q,R.W93dKB)($6r(a^!H$3j^nILCR/_,u_T"/b:ZqCqBsEXV#h?%@Q,La!W_U[]b"L>up9%T)uD&cc)If[H&qH]TeX$c?LACqK$<-1]k&OPd23E<I#GIROAt)HKufib5<9<[]\k&1M?Tn3%jlpJRl%7k6G+AZV&aZ3NNU[lipO2%4=\\tO&@Z\C7DUP/bUYE0Z-N6CGI5U)SYAhfl7Ft--TWo6MFl<MdB5:WHQK-VrLqQ:5Y@>BGA`L13LYh5jPd&2n;Kl6s5,k<_!pU%;O^R8[OuC(S(hC$bTN[d,-XZ+Y!P'Sm8DC^P2H@t?-K4@$_1$3Re]Utlke+h4BM6CEq:4Uf`3D^W38Ac[eE""-C^VmhDm3h+Ka7g%=r4mWCPth?^ce:o:Nbco,V![SGV_FI#@('b"B\1eh3(PX%Bc/Ul;b,(kcI,cr?_[S#]f5+!H@,1helbF!mGRFAKjRr5X]fQB]:b\%?\.B[S5:jdY]OothtLV_J=NTCAH_'f.SE;l'Un8#S$dd)fI@Rs8:5N*'3*OOflhd)7J0=HJ%sD25>1mW?`<qTNV6^^qu>@<s6fg`%LT<A;5.l18p>u1d*.J!^T;+7JjM^W>naF3fnG^\emuK]J\2]!2lJqipmlnD&VI(AD()m02q#>i2!MSp#&9bj]D*W?#fn85[W;Rl1%O9C^CQ2O#)JuXcS&^L%bJHZU(Ff78%>fG,Tljjr.,Vf()J;Bp+J.u:EMSfXSU,PQIIZr9:gGjD*!3oLDp65:qQN:Ap+6]_H$)'-?%"5WVd<PP4eJH7Un6Zm\)enb[A=Se=A5e:rUAUhMKC)Loq5L:-f?AI(lY!2riljq:J@Xk%!YG>T?&fmX/*VP7pQYfSAA6VLe>g79i%PVl^8*uHK29'ZF4+k&RQ-j<[:bSMK8+A"k3Z9NU(.[FE$k5>E>$\X'/&6mp0S!nr3X'-VK\@+XrD25O8%scHN3/+G;.[_DYUEsgU%6Hfd_!FY2u0E[-iUi"m_WF.9t/5q??!gGZ89#bU+1'ARDLq[bb-A\D$]Z&0/Me\6K\>-G<,-^XL34'B4'?^`mfS0.RPu4#\JA'g%%aX.;,nPHBAT!qQBK#n.h$2e8.,eF+b59dQ^/V0=PDV-'GXJduKMTUIul,jJ*<@[AH)akLS?&>X$O:@qaLVB*`KEu%(5T9<1T;:=,%'.I!=7`jr5+c[4iBN'_f=+*<fm02M&7m/.7/^GX8$BZ@HLf;d,8$Y*6eS-E=8o,/YW3BG=P^oe%8h&PpXbPCXHDLuY<"9kI(0:Ae%Wb<e(iM%Z2ZNsa7?&'`&HAV&C_"?>B!K.O`_;)4I6\U^R3F7WuikUKnTm=K=9in2ZG4ek0o]f(Q!W>tQCI%,6#?c]Ie5umdW!4:e%8HYoG&A%1;ff#82mPl)<JRXG2oJe^U;e^TMJ:L):N,%t2d*E#S8P'gZ3J!B[4sk>OT6G:c"cKLR_'Bo?$m`b;>+'W*JZEVhR[%aJ%>`;ib-j6qQN3Zjo2@UdC1?^i&][f3%i1F<+>%F%2R`LR&[=c#lhSt8GA=3$6@Yca`!A)WZ_IWfh,l\>`hI6Zp<dkr%#*)V[i%*2-%,UmVK>;Ubg//cQJJ5i:E4&BnURcV`W:?Q"9,+:9'!Wtt@nQ&^lN%rc^73\!#R%$i$b$A%n$4=cRLm9W7+I"ECe5#DP8sJ-3g:D7;%d+l'MkSoRTib[!W<1@T[EE';L;:Od(g!=IA8Y9o..Jp!(*UmSHGn(;Ml.2*5CJC5a,QEnWPZB[mE<<5:HC"5$Tj\d)/FDRK(7DaP%OkBb*Fp7>;A9PeOb?$nE&j1'^a_p"9;tmCT4(.;`a/[&8s)<Wt=`6q0"N->X:qJIkeU>>3C!SZ/kHlXkSVWGA[jkB4$D.GcCfPes%,W,2lBdTP,RPTq5+2!IDGn?V'g=(=#i/L[BqM"[n"PVPXWbOXs8Y*N";+87QIp:q?kii-bI=CksGBI&+rPs`IPHWXB;SV]oZaPIl%'(mu!9_B$cGuU-YJL[OBY!bI+.>O7@>E:iUCr\VuVekqbMb"[tT>)j1Be$AIQ("'N[C%TM-(oC@SXG#l"tOsiBh;h,ljC88'DFaH%(`">.1ra&-@lQp*!jct+78O;>%akX!ej.J/;d7!BrNIg*jtIB)%q,1'T7@?="&Iuid'/I+)1LI'S0]\+9lVhkXBmPF7BUJic1"2$%<k5QJ_3RGU?8<J8M!,^nkLcE*1CuX=!`e'E@u@##"O,7`VF8[K8ubN[i+@jnNG<s5U7ZB-Co^f/9%C-Z<Abd"RB?Of==p#Z3-PG<%h1//)$OXB5@Z*:f0kp_c"OCLi\iG(Q/'DdF@(3feco.UEg`g2[l_rrbOHaQj/!;BRbGC.W$XtId77p_9$AoLA-,)R<:ch<e@n*B4%ESO!gRH"Be[k1Ch?\)jPCXPNB_$c64>,N%lKd-0bWmRDGn@2-Y91>QLV4u==Ls=ZBX\Z>%XF9S).,+CnLh&>b5>+JrMVTj0UB+\W%5gs-7_4MhfNJI.J>6uq(1)lI.6B.4!.a=?2'7!_GPnG7EpU$`!=>5LtDAMlH=\ef]$`Q0_>Z&`LO=9IlFJ./C"KXJfjQ<Y&G.5;d%#*l+/6WO9.3(!4;B5_OCG9bZRT:(3c:Ki:N:(hkU_TW!k"L6G_W$<E(fs:!Q<.if2On1[+jVH?(\85Ai??,iGE%j.SY?L+sQ'^0;%7GMR"cgjCX=b'M0Bd4pOa?.iNB$"]e<[k$X_0O++c0?T.AM`uBKXDfOX^96tnb'H$c&`F),sG+fA@9(>8`m*Qk0G<F%e(ae2Ci7B%.`Rc5"Ws3_.T9P$n`Ht3A%#\(fVaF^4ro>#cVFdi8H'"TZjYpTA\I\I#p/pJe\lO7$EC(!gGit+D%mKu)A&X0Um)BqB`U&uC4a#7%PI/f4X'trlp9cID\n6iBU]WM(CGRK!'?QdiBX^BPa@8%Uh.`17#'_9ol0Wk6a<^ZHdVYZs_.VGC#J:UqQH>!\i#rVJkOj?fZt600%/+>+b<,^W\IIKSmBdY$=)oiH[YKl^nB2N>m([7YEESs&f'M>!I%j-j<_bu(r0A8,%$3[Q4_+<7uZE56Is8M&-a!6hr%#>,EmG4o[%=a%N/V%]l)<D-h\fQ/uWH^!MOL146S@\A^XWTL15dSs3Oj4'R\<pEuXG]R=,Vgm(Z(n-`)!H+*lgaIa'K.k*EMbmZh02h@.d%RO0%g8@W#a@5NQ)`Md-+T?Menl&<K5?H57m25,k*FN(F+:F-J1nj_&(qH#1Cid=iT]GJqMp4T'HJmYUJNah?T_]SQW*2]\d6Z#,9r"Eu%_!:i]VQ6n),I)g7'1OKLcJ.<Kk[s?_[Jt1>@t3Z:m.)&4Ftr+^G3rbu0$^'(n%H'3HYR`tr?R9%&S[/BQco&/io+KRT(rkYd(WJ#%`7UBWQakm*+[t[ZY#sZiYYj,b7jW7a+4(kSRU*Z7T78s+]VcI]j5TUTqlcU8qY&KYYV3`<dmjss\1\^-h][O%Y^;A>Y&r-1S%uK`%YbV9TWmo75rs:C;-XE+>r4,E+SUL"eQ$AZA9^Dn,IO3#44"\a`#@>&`XPF1:^(R"9Z@JFhd"S?<T(<j<'TA);>mU4'r8,%1kL8t5%Kf+<<0enft]+CrBO9J[on._t\@.`Gi6O;3=rMDLlQsT?CCq&2hU(\@Tg67uV,95X*7n&W37^#>t-2OVYb)\G2#iT\>pfk:fhC3F,%9C)!#N<?Tk7an3!egK>_#@-VJ&_k?[KjtSc_/otZs'?sW>PC>ON[HG21uIiA&.3c+ZM=MW$ag]/*dF"9XiF!AQ+Ne_fYRH`q3mc7%\;KL`J?)tik+j[V!Y\)R350;rJ<"B:i-fF1ktTuSG*+Rd4CkR&JABCZ1:I@qA3":k%gjgQN`3a#UECf1SD'&Vs3U:iM[te@m[;#f%@GK<>.Dj/$3t0i-;Lb/:kf>NkjiKP!0QK_9N&%OA9TaP.!\Sj6031XXo+hE'b.$*edX\BI`s_R[K?aO^D3>Ton!n^-0*JOJ9"e(m%rp>.^ReL="ZI$T.eRY*t6rOe-WWCD\d'[`YP)G7OT1)uiBMlP"moJ>$U!PX1k1P-'04:bO:9Fl2e7>bji=RK($`Z;/A5^8[0;Sac%7_I:"Vd>:iN<WXI5ScD'6OkY-gQGj`9pmsDp-B0nU*SipNO`^5!^i237>\Y2p+!8`X,jeB/W:oe.B\?^at^u%9?O+T!+q)a$!]KJ%JZ3<RTO81\RquBW0Y8`Ebc"GL(>THc7YZ$sm32cj)rE/JWXre9S)+KS*)K2ZV<0B3ZPHcR_@W2c0+B@F<p)(VepE$aQ#mD]7Y+3*%ku+ot!B(+E6WS1n$t<Bn5_-]=9iHlDCD01Z?g\Cr0K@IFNjA"#kUkBl0'_:a:27lpOSm",Q01P4!]#$0>bgdd3fs5RC#@u6Vl&R>%Rj9FR%nV,@Rs&tqV5rA5X+/L6@QL9KpWReFDT7%j1u,qLo:+RbQM=o^dp80h(jsGga-Tf<'VbjAMdMHOhKYC[0\`_\hI==77;jg5%MBR,qd\f5$/nrCLe7kSbeaN.A:JTtW,,-&HO-Bfo]/4(\KhJ2B>2$ZoHE<>g7(lhSGto(t,3l#,VI'EZ3B*ia-tsDGN;e\_F$n]G%h8:CUgY3<&6@(n@ohNrfPO':k"^AYD#Qmn@JOUd5e\BTDCbLZD*`:q%:X;RPP4F:RY@BBV]mt`+*`Xg_##KDApcDVK"W170#j>m1%eAl-YE(RaO"ee6M7[C-=mH\=gaRAn)!kRm>%iL?^58]?u+]S*VEpYW4I9']Cc3CX[1KN=<R[Jq_r9+[I`#f*ebrO._3tNga8LpZ>%1\!rIE7LHF@Q\MH)t6Q?:[4cYo_.sEm!O5t5pTSd5RQX``V:Rt;F&'oBn281+AQOBP8"(Q,r;X\K_1!UEkSFqSg6(g8'V`V,El5Q%lr4?SO';&R4-?R4.*B;.qG1'u'.XcWC_S_X]6#j@N)aA=K;pc1\Y7*SRUm$U%Trq4g6/834P&&aapjnPGG.H"HDR+VAI)kYe:FR.%)EP8qcmVL]c=D!7M9ppQW2e6_j>bc9Qa6*?Y$qdl5aLlU"Gf&oE-OdOPaK87^L!JBFD8XhRS/6<Tcn!IlR5>.m(h.KFp@p$WE9BN%a>Y_]XR@)%*`AO0!Eqd+_J^AY=*mCb;M;b?C#r*D3`,K]%I>9ES:0^j$0EP<.u<StNZ,:Gr)hmoQ::7I+j-i+KW+-D<.7C`6'Ki3%ef4mg9AG)u+.0%VoK#O%3T*ZGdI,.3"l.V^h'Q.aMNqB4,$52Cdgl"B9W;C>^lgMU$m]>pXsr[RONEFUK-t"[Y$p^DofG2]+h/IS%RGY80.<o2sf%1B90rFb^i/^?q3(=!agR<(iY;[1"%V_f+<6S29'rrr"D@;s'I.^6ugg(,!2%'a0M=s'Y@F=GABF7Jd(0.qo;5]><%aT'tp`F5hR[Lmn<27j5j9^F6u9/EIi@RPKH4&po(i1dmHH0.^pPN7K4oj5.!NEuFH9.TM>br-\Z.;J2V,C[&XO_>Q*ds`U'"&nb_%;CA`<&/+t#p6A;::IukSH`^L-?/*@2'U[R;ljb\Z*XEF;gsi0]RR[PReaC*E?;0`#EP_uDar1`?L0@='<&4$BCKR'j"2tS2DG^Qi%92[%sRV<"5Z36;rfXP$lBnO4L/o+@=e&[K`YpVYaCl^ZGD&SdmMQ/"oA\ER$PJEY5W--Vr!%OlUQUU6DUpNU"fNOQ46r1dP$C#=J%OL8<((e*XdjgBt^64h;&Mre[(C8=SHTd&nKm5+@,FFi\gd7>TkJW!VIWni'Ce@CG'>D]e'2%iNTgdn\(RV7WQ'Y_>D<_9;Y2(e[&%ZHT.e+L)q4\G0J1b*=#-hPce;eY78KCY&<Qi1o3QEh6U$LHr%oCKW9%UpA^SPLFXjg-Khkl?o(]5b_TTXN:&bKnTbZ\i19/H;PD2%8pt*)Q;S;ueHi0,YA-8W';-A1TN3kl1+]N50ngN;Jtg[*6@0G>ZEder=QQuJ)$H\@PV&]8,"jE1HGC=ThhIj+"#ZOHZR!X:(grtX%5dj2M^raT@-AEF;=F67.EH2(($@KBb"hLWt3ONs]kE,In[AE1E-7rPae'43/aVVZ9(:NbC958c(U.&H`OC;@[1/*qqSlB:QFWIOl%pV9ZZ\nV)FO.28b5'al`9KS>O!>#Va0jtW"\VuN!E`46T!+S0Vn>o0BMP[-lh6\Gn&UN7m/fkP>aQ*n=&GV8/9uL^]73HAPe#`"P%=ld.>$t&"eGi\C#AMWo0nr6(:)DYUS&G1(OTQRP_?NOTX`Z;Dm3Aom(=RAMp/J5b%='sHRCf2G=;i(N_R&dKbM%h"PjuT@ZGs,Gt%h6.j?>oJMQWG4jZFeT'u'f&U-G?VpC3cJA-IEI",6:a3UOWA@O`l)=.9W5fci,!FM$*)Q)m2*0;[I.N070OVXL33WF240I,@ig#+%$@':Z%]nsO*B4K[X>an5@Es>Q=H[8:F<crNeZ<J5*%I'@JkM9K&Wo3R(DI_e'!Z>#dcWF0%QmuY9t(1I:=#,-26a#^luI(0A@u"Y%21mKE:6XP%N$MC.Q-=r:[KA,JTltB_YXKj-]"1=)$7].d8@(jRNn6dOXI^PTZ2O(oqi$H=^Q=&5?NUA+U9+\5-(8B&=RsoNKVteN%O-_/+p(5M8/ugK?A#m\I\e'UgR0AEENSL]rj+leJ-5bBnh,'efDp`1QA8+TVe./52L<+'^-oT%'p"N<=kR2FsM/`PT`gMOh:Fo1T%6X]R04#U$^'2</$lHPG$R`YV0H(KSX9b'm8BpN2t`D(#ka^tVAC8.RTRnekc95T!l:()7a&mE2RLWkLq(Y5QrYCSd0QD5Q:plO[=%pHt_6-57;$3gC;J=*5UCYM8FO1p^BeX(<^K9g-on;ef#CH-="u,"`J:<0Y0*nubGF@lgb6Q*nmahk[!fi8[p>^+4+Km7\khZtb;8%/A,Xg6kRJ=>M=XmmmL^)qtj]UB0prF)aH$!RXptc-%EJ0$+m1)SREui7T1D8?.jrlKBUA%j39%l)QG*iPH*OmfSsZ,)2X2Kr"ECX%("JRZ-$b^*l(rIAU/50P*2XIt4^%&"lbWkrihY/JC(K[b<]Z2>($'2_:ioV9BNWq5k:S7rMgCPBb38H^l0rj]n;aHMjA-.\i!j-]%%l9L)cn/)-B)%.$%t"jZVNUA@M[GtJi)snoFNnjV22#%%^6aS)j_/[uRkE^BFpB`VnmlUN3af$!G>p4%H#UpiTEVCD;(Yj5)TNP`%c+qc%f<a-&ASQ[SB@F(mLhb1'(U<Z`G=j&+$-UXsmmAVi.f%?*Uh?quCVS0m7E$3'R)Mj*0fTn:J\oA<QFkEXchaJ#5;XK/#&%9s%f9BM]^&X>_T[0O1KJH3ZnN9K2OpT8rps"1r[9En$":.]RX98-F7dD2jT\</d_a@OhdYK/M\7`Da$*d.GWLn>jM)Q$g>W3J,<^2]r%bR=WsVS33I'=4=PJZ<.'24@TmVY8K@97;'=X,n4Y-0h+'[o?m.Sq<H><b$C>k1:OEF>n++96hSE5:M?0ANo29[S:OHlbn"(,8skU%?!ngT&[BChXhIRjV+$NLR.%@#ISf-RD5pL.W^d&Ri!CTWC)c#U>.%`.f^n>D$C[uo;UOn^:[$0JHCgTQRc@u#?F0Hcp_a(1.L2ZZ%^sr05U4>D!<:XandZMTh?s5(UD(;E-#L8pikFHP"#.=mWeVC/H6HsR#>Ol:.lfD'm1i#-59Psk:3j`jMZG?(tJ2GkijH`pa>r:A;%F-`8?$135bZA>Yiap9C"5_uAfQapO(&]'c:RP&-N!J7)89#rO/5XJN>("H+b-6\:ub7/.jDKt?`&t"j=-qC@@Y0BWufuSm_mN>X;%i_s?[>[L3G6Vpn2b4^I]9[^$5KuFFTOA/oDWmfTYX$PAGg/E9B[5LI=Ae:Ih_M.p1152G`Z'K<#;$/2q=DHm].]7Qi=XJ7FGnSkj%*PGlAoh7b\culmdUFAHLV;_)R7Jg*Z"5Zrp<2%ffT`C$GKdZHAEsKu)n6cDJPLD(3iWF5B:l&dj"[."e"'C8<^kJOsB!J,`W0V_6%M;l4K5rW((*.XK8&@d>MV0!jS:,[$E9Oj\K]Lfa9!kTpL<-XKdBZ>3MDFM)j?84!W3NScaa`?,>cV-3"cQ(4W*5.l`U-V+:`adO/%7^%OhUbc`j.@?f+WAp>`S5=#rV+c'+FVCg9DRsFDaE8-D!V=stkD^14J._pKU#X?bY]FE\`s$Z:n7F=t'TWeBa+a#)D1,7D&0;iu%g1gePS6=nQW74`5BOkKVWY&-LJHe$.(j$>ibH5-J5_?o_oR[FAdH8D8!>A%"PdB.-*,TZ##[0A,7ltUR[cphP$cDnu^if\dp+ckU%&jokS;nPL='.]91:@!pLZrr?^H>.1!KqPEiK;<#F^e?Hs37$e#e&32ABp5B.q>'l!/<ZpTKs%]@[^onbl@Sap>BC'<"`O]\"Gb'@%hpA:N]q!lB&^(W`Q:[\D=8Mop<p1a\c7p0ZFB7us7ePPE9Cl`5TG@;X]3M?A7eF@g33Ca>\t)TueW(mK3BX.mC.Vm[)CTt6@D%BV%$WlYA*"bW11\hld2*%n>WF2%$l\/2D1+[McYD`AnET]a>Q^hA#01m-gO6:&_UFG<PBh0P#7>?fImQs:.`%b.a%WNs/:F/3n[C/[@%:6*e4+U\s?R5s=+ITc9mLD_$ad,m;`]"$FFDlKP7BS9[dF6Mb9oAe!c2FT/-EeO0!Ek)h<75#I(2g0K:cGVP#crX(nPBNV<Cq=0g%doGa'%]u+<!`gJ/[I/@P"'Tj?g1Iq:Ju=<(,=b$E[FO9mk"Xm$*Ab^aiD=M^@f*)+Lb7goKrcLn=](Xs'X+<b&N]"US$k[=!QA3$%K2=+Nf9(uL#>jn^>:'9GZJ`FhU1-,mJ/#V,[K6a\`PEnWmp_"\Ctgg\_et>_D#E7_Oj_H5Juni9Tk`;4`+U=>QD?/IKc%]sZIAan%iSMDFQuL*Oi\tSd[fRU\#Yn6"%"]<(;Ni<f3$36P[8Mf9<P?d!0JtSuWZ;IU&oCr8VHo6QOml#Sqh8a88/=0:\ah)qp"'fu68>0+%UOCHl@f]0qXap*(i6&bW"]n"EVW)BMC(*JMAVgbY(k$LG7bu'$2/&;=%TsH4@+Ui<c7$9&G8PSbeRFOI_<s*[QN=@Z&s^B\jX;$>%=XV*DJ3Bsj8.R#D.F'e5RclFbK@Gl%WG*>5(t]ud9lU;u2:KEO<XVMGVJT"0,H@fpF,1HLe@>?C<k1)H&8AcYgdKYpJY,B$="%F]%R#E%VcnKVc\%!54<G2WsbFe?/;.a;I'sUEm$3\LS/pomL8af[RTTu5l#Z&>J\l59#r`!!qC'WV4fW#+)U]/USW:W&pj'IGmT6;>X%8rCcsG\TkX^j_K9fMK!7,0u'OkSc93#P=2n?DI$gd-tN:f*b_WdGhYC5P9WX.kR5k\DLAf9fh$&boR_RcrCIp:1cr7nR;c]Wbp:*%>_?-V<^2)Y-MF*-T8RNtO*X>&X>RUH/iVam:1F.^3d,6U1l<=[E3Khj^nfB"[fTU9JmEKK-S*5>E$lkA?G)R@^Y#U,[b')Q`M1$U%/$8+%b15Y`Zt'0ArumKkp6r=(-74jPMNoSUEu)AD&3/[P2dt/:p)<0dVD/:T6o@`n!_<@8g;,bMjEkCp=;\AF3jhE8g=?l24h(K[%:2U6jD%STM/GlD-&IjJG-dj7EmK^(betC+c>)%CVXJtQnP"W/c-b[<%jUnjO4'aEiO.N*Q1hH6"@g=2XAlBMm)XhbeRq;dlp+9+a%@&cE%>"X`GY0=VNCi(t`g*g&+38-np$^$6Uc2U*HK7mDT<[Q&^i,er5#L1'&GIgLWa#R@!HtF:4m\?SBeR`f%\T(b`cK7u\8YV6O%70@,3UQ`MTqSN(/!B#<=4^CWhL5.&^_,=MeEEE2C`U-8BkW118oK%[[*`n\%jt11QP'aYo>GpONlu^4NU2$Z9j8F4cS$j%6+6(Xt%/b=toq&5Oj73iW5g=0nGZX*#`>c([9qus\Zf@_P\%]jhPjE9%C-KQFAS=#lm.5AWRA<2YO5fM(*8Cl>$G)S%MO&!%*Us'[XN?rn0%QH%Uc(aTG7@S@jFnP4u\C_J]*Xge[#/O79j#Qoc2kuFhEE^eFBX>khk#*:j*6t6CP,emt"m44sW(mYpYf=#iQ_.kGi$0lWOf82MM%J5HF?p!Q:9BE^sF8/QN_mD.ub/4%R:KGM;[E/UYRS>W+0"NF*e`TLug_Fn)mGc?]g:ho7U/.[2f_&5hJ;ch7HOua#.J(Y*laN?q&%)P#gJ0VDX:(Ef3jEs1Be4>Ffi&[%sDTmad&9dDC2E&gX88[*;%2cc.;OODC=:3*5<`$Jeg.1(l-;_m(:NIuu?a8KN]++eUS6Ai&!%B@I'@+pfo%=B*;0XM/TE>.9h"2Y^is^A$?^jYS3lkT);p5t+e.PFb\BY\nM[0OG!%g6R@?Qf)D7dBiI(RCHM(?mS_SX"n#d,8<MD%is9TnTOfoS>lJ9K,@a.eg2L^tS$L%CX9P^S>?M&DW;9doQ7X#186n&q4<hUAbq*9KSTH"f:ph^*=>Vpk$M_#;(DQb3MTO9I>>2$-%@5m+b?oVV.CG4?aC<+f20B6qOmmajViRT)7P&2S0M2B&<(7%RY<\9FuH7tSLKjaFqH1q+`GSRK*]ANAM5cJ5/%Oh"D%8!bXd57J)%/-peRop)9!B2\I=75hb$SXO;Y8%WJVd:jK6jT(N9aJBVBP-oq:GPI8ch"52Z8j):&d>ndMf5r,mBO`'Se3n$r5&as6A(rS5'?Q<a%r'CIc>\ogdh6'F$SG:&gEB4XCN$DZ0)NSeL1/0Y)[0h!idfT5H>Fq-Y434iql:8dZ=iKW?GL3>Y<T_pQ1kk3u<oJ>%\FsYD7`oL$%21hVB9mK_X%;%/*q$WGI`KFLeGk#slPEF.or"#ikQ>S_L+:O(r+\322<.;L1P>5DSp>0US,N8pD^)65KGB'7>>7KLXYJ9Ze&X,6l%Bs6&J(pq2tE&LXVQ,Caq,'d3A&p5k%JV9Cg-\CtV'+Chr5uaM8jt1:a#UcmWAL:gUKF'eniJeA3K(\2(^-otEZZcFELRE",34*?W%,8GP`e'RpnAYRN3V7K`fRN9hd,H7^??EUT-\e8hY6t!8d(?cnupUrQERUtKS13nmZBhP0c$;fb6;m@=W2JO6Ho<F6Z[d=d+\OeDp%@s.HNbQ977pCYVH\^"Yoo5Ia'<b:_>R;.iu@]6'/(MVRQTVN/jWEP=3SW*\aLJh'`eh3U\%e]GG@G)(SEdqC/S%t&QU,OZd::_-N%\K59d1QdK'RdaX,A/&']*7k.Am3\!@?RJ#9FMCH)WaTM>AcOL%<4!OHmTrkQMLRkmH7rY4o-_^K(pO0XVi^5R"W5_hgqDA>2Z6rS%#Ka3+Y(tGSS(TVLFt$2>PA7/Slh<JD$anqmQDaD38Ot.NJs"l(b>L-'*<ui:.9b?;1rHk(^LQ@jKpBV)AO0Bm9A@u/JWr""$L+hj%57f5X,oj62'lhX.&\Oi'PZ\MiW`edK".8k*Zii7/=540c%Hs?mdTEI?<Z/%2p#W[[S_T[TR[Z>Ga*guCRq]C=13kBXW=MtkC/N_\%V?;Rh%=A6u`>`L0('Ju\`K^-G^gO?_8T!H"j@3Q1-N/,\1uh7U!LeTePe*kH@DmR:!OGT2"@nG?<E!eBfK&;k=Q%8W&Z?o1LC_.8%'I9O*<?7CD]@4".0AiZX&]f+85Y^T_l:8]M$+4Q4mh)0&HJ$Htd4>FJ=nFUA@[Lf*[jfHG-"U;,],sKsQlI<$D\TM)'s23hOW6'(%oBBF8$TZsP"\+<k&drdc&mBu1c"'I,\Ojcq)U5rbY"MJGVG4E-ZlI)uM-A8?DZnt^0pPura*u$T!Ge^2@u$`X-#UYh(eJn"%4*<h%?t!CsAt</U[c/)MYGd7ZagarU1QZdQm(]%["CGbYb!+h<:5hFnan<Xul*[H/?&LCRf3k=<K8rg"'j[H5+s<_BLCl)hSb>H<O2a*g%Is/+?cTFW*OmtqB,AFq'q>'d)0GtCo(CI4*a<<bP=M,(s]+JbVWO:s?;Sp!3`5#.>C.M6'XqQ]4<Xn/8YEPZ!Ta>%LY'.K801S\.%nlA7(#G>QFT;9#r'Zt8)V56lug.d2GP2'V?_:T[5V#F@$7j!"ODFA0=97B9^j^9ghhX4gr,P=UqPQ(TmHP?'#Nb!#%^B*.X"(he#%=]JT42V9-Q,8LC$ArM^R;?J].glh$aF7inZnj[4C/I@n,F3ag0$j4m[OaCVN/8nVu8h<2-UC.ZZRMpH9/$\WU$/:B"I?3/XNB"nn%oj,6=)=p,R*HJegg"/JhaFg0\F\>^90u1BeD'^DXLqtC3L:T.?Ka\Al5eGEG0JC%j,H#I=Dt8&h-\+WudB1JSh'AS[c<Ngf9=X%6%i^N,E>7'ID[u=_!5m)X4;i$L13\1<tP16]SL#WeOA7b0/e2ETFXQXGAVpn7$>6+#D)XMFH-1)f>671,?AGW_R[OI=oo[&cVn$T$@%!LsX/W7B:5'r@1\@R$uT1J)I.n;@ij6;h$_L?MA<]YZ.XJH>m.S(&C9;NCP3!F&hL#c*ZT*<7-U/[Oqf:.tX9OpE@2V$JA1-BWX`%iO<VZ#'WHl.Cb0H4n,X_]OUIB0MbSmXm#LC#$WUV+J5cT$cMY-Tj"[4WZ7?<Q6GafblFoq=Fq\L0eZTCWWd1QJ/JE+F$bkr1j+A%%!q&m*EAXl].RCZY6R0XsQIa[sBF(d3@)-*71?<CHTQ(Q2$DT0jWf,lWYQJujoEaHTj)>Y'[4o(+TH"H>&=]$I*Ng8rCYVs2?GLt^%De=*290=PDUXdp!-h#:prBADUZ'?.7C>5ap&@.O6]jMr\d<:(Z@=dl^]V9U>L%>D?:NUq8&K&S!!r*hKQB22++*9*3*?K3]9S53E%jp3<>"r%Yt_&=9O.P(1FV^nm$R4:b&[D67XnX/7?J-02/61'8XG":jh/MBMW+cr^YVSkuOJMCgh33j)E^3El_P2PH;=!GnOb^o1n%*c7gaY,[?MJhTg;G"j!W&lHbiiuFOi'?n+B+G#(I>+<,BDZ[,c\LcZ0Lk+[BR@dG'CCZg:Les(!*<HYhB*d@<WY_ZE4GeKD2/Q$j%<QTf!3G`J[N`I=chNXe$SVS;j%1jZLbim^mof>CeYWs12P*JCs"^kGJ05,;6c4unp);%[%];63f"id,U?G`%P*NoFH*Y<r*J5&l>%%"$R5j$9,T+EWch^rF,!Yc\(Ce4IA@+X0W[_[@.3F9GUUkWD4eZ:pUS`P2$2LGHP0G\9OK8E:0t4P"!L;;L5gLhO[uDBD2%pkV`a%;CT:=nN@@Z(VMp\`3@_c;T'orLCUVpAJH[ND)W6R6!QQ"L_]j=!,"Q&Lk`;QYZ;oX8,&[IdLmd71"@s[f+t\M*(/rE$_2#)K:N]f%On`=j(D'siEkt0%US*?JI)#m:gD\D"Nhq?T.4bRj?"=]JKiQCSDPm]#<ghp0aPO;c[0OQ<XjD-s!:a_s!i<m!;$+?1LIOQs;js`Q%<NC+>+\(C^c:<P9muT]7cr^r*L=07:\/u(s:hlTKg;$e4g9RVVk+:BPns.a/O9&4>FG%@<_&--,0WX6_OPX`)5Zu_$Y@Vtp!o.As%GED<pF.hFlbJn#hfVQt*%uWthj-\s5%=mH;8rK_g[K)5L<45mV%.:!Sq:[=KjYM8ioV@I1@*@!l;(^u=0RdaJ)!ASJU5O`FNNg#Y%o'qsPU%?fTP:]Fc,U#m00WqW_g&NXY*6IDhf5^*c?E]Nf>tQ[,hcdSC=M9Qs4Y9%Ao[:cPp<7O^F[p1PDh@H]bb1:(,-B@UPc5?2%)W7[W%4E\EBG3M&1.ch*:RfeF5"\[<odaCS(GGY3f7k<)(GC`UKn*[9.QP]1Pa!$Q=^\:iR.$WIj1JG>M]&+BV<G)Dp(s?WV.o3M%F8Du^a-Ep"oDfq&mY\LgLcXXko6A`<R"(u;IDk,7bYSX=*c+\Ogo(I8"l^o^mKhN+#R9o))/f?<=,2=LV@7G1lW'!h"cE@+fU2qX%7"Sj4j^p7k@L,.HX2K"&%<Y,dEf#qpS7tk"_8$t08TqQuhQ0^E(63;CISg)JfN[,Xe4Z3Uh94Qr45^9XeoW8$\])FEQ3G:)(L>U*%$NPKH?H`GM<!iob<cThh/CnLU3hZP;$5usTQt1?6W2U19M9:-3*6:a:NA*e81eY:]lS`Lo,39^%(8Iaa@K[?NeZ^B*90)Y1Lo+/b%ZRN"Q$Va9Q)'X+^8f4o8%T,F;[B_r.>KNmaj<omiBcP>,r3g:XmV=BnK53'ueg3?]H0s]G_1&?Q0$>hj._WW>kn)5bZ]I7kfMikt%$6:\E/e4h7rJdu_8er@7AmsfHHtS8&,G6_OACL8gbm$$sDJ;k6fRRb@!@ua,G+%G/0o/2SMj/nZ1`P]iRhNG/K?,\Tb0Hcc\:Q9*%Bm".P#fU1iM,:W?!L6d61bBZO$l/&_>&/\SmJ&W(d4W3_j)>NA%#YI)H"WThQY]tpe2V\RfSJa#U4\Q44$1Eo"@W70KSpQ&P!LAU%8Pldf#l,=hh.mj2S/E<2:HW!A9[rOB!nGXm8d8t(E4g-]J7e<3YCM0_R!d)O1TV(c&%n:tCQ%3)<cThp#Ji2%-7]PpO,,[?MX`;:%L=rYe=,1t[a\c&,1Oa5o:q<OiiAUaNPt-Uk>bD.c"XMHV0.)2ikj>T(iL3+nDu`[p3Fg/>'S%<l)Ph[Ad$rH;<AKDT1V]O`YX'71%%!R_fAAK,FX5cnCcH6Um/5%Y=WG+nudE4#jUoIliP,gn_>%/_?CQlR_+@-FHA=J[4WdiY$BHdOV5I92\fn\46([BAk#*n/s!C'`L%ibTs_lj_)e.-6!Jb3)L=Qb,PhZ;4.nVLX+lGSTe1<Vo96o3V?&!Eg'uSUGkPf)4IOk5)pVm`oqRfAq6N\j0AUGuJ>l-eDZEbVsb&%:G1G:I;=90E;TJ!_3Bg`S6Tb9IbF_h7%)?qod;7An-aZV9.eZpYhsUK^\B?3*D^lKWQ:7pToCXIV38ru7aN6&am3_2a]i%+ODVF*%Pm6I:EAD/N$^m)d`tsg^PKu!*T5f,mrud;hK9mQ2<S/iIfb2MSBHr6GI(DAaEUcpS@%I#ISq"2F*\4GB>`"`ToE:I1YsUuZ\&Nd!%Gfi1KG!l.I4]*"penO&B/e/?F$^lLun;Q_;D"?tf3]gkI%bR?orU)<];p9Uc]Jjkr<se?7KCqh7q8^)kI#`U)AQ&jML9:?+64rA%%):88Y$Md>M9A[&cRBqp61A]BD;-mu5o4++3)9UJt0s%o0n<cY/TKn,rXq@d0EJEJb?0.B]K<S3'<Yn_WF-P<@$J6O^4F/8SK[_<O%U+u_c]dbS*#CEjZ'LO;"J$jH#'H\W8!Akfj6:$ggXLNdI;)#DTkcL9X%Ou$5Xt2^k"Ha4Q.I!ah7jDs,S??T,er=3\:55)?)-%Id%/JnX`Uu&kMO8,-ls*%dWX\dr9f\dBGCoGa/NPM5YEu",t_8i@?m4JM]O;1Ipfk?W[AY]ndV^.@a1^<8UKd>-';W*F'?D*S1luCl7%5>qOO8rDP2Kp,&7=gj3I6nZ?!;bfAhR2hkM%F7Yfef`ZbS24WE7ZLQunB;ip&R&Q^:\hN=a.l%WJ*qeM9%4=*',3oiIBEnpdM^H$%6GQ;^VYCT,0rmVN*te''pOs1'c'Y(CoZlRWVJp1!#,WH.>.0$,XSeQ>:)j,C[rKqg0;25;YL5O")C(5nl=@R2aj*CN:fhA^/W-&)%L$X^_*eCK@`_q,J8k30m4JW'H)VD?eN/lK#k^lC9[KC7W<TRr!J^5!TC/jleWYgn8!MunROf+2\dpVaRE0-u.(54lq9qM2\SsC^!%$^7KA"/,4le7jLs/Tk5hPG]l\,6^fEZc/.k7!VrtB0n=KKOQ4E_9J=).@j9+?t(U]o$kb1D2:r*noThHRcl4cp@%&e5$\!bNb:#C%^T4ueF4*m[Gt[`HBs'@>l;Dn2Rlnr^LP$R\2O'=>K#prd;8eaBdp2!K0R6ih4O$Qk<`,HO.SJhOi?CU[eg=2!-r4\3F$Po1;^5M!%BPTl)NmJ+p#dVZVNmPj9'-C:&:WJ9eFr5Tj9%4</(:bJDb0rHbS;B@fj>tH4_W5DKj_6Do)H(iaRQN0r4KV>LZHU0dkC<4aXst/"%9!G(H6I8]')D*cm:P6eg9?9Z@'Co+DehQBCaj\,fBkHqc7Y&qN6CnZV9BGEq]P<eH#A>\*hNQj-l,ln8L$#>fmS\X4TXB'S%k5"]%G51]nBZoq]pc,gAIBei"I0\ApO?=/TFBNA`XH*.[a!<,>On9n'.qM;AKRtI!4eD1B=klU:mt)P2A9NU`[6^/&/lT&<)F`aFcm4iU%@T!UQ>>6C[@QoI^n0^Q,pu0*<=:nAepBbS5YViL388>.ajE?BKK;6bcQ=/"2!<>_#CeF"OX#C%EVWHC>B`$pC4)3^TY=dlq3+k*Y%'SO?=9Sb+DLP3I86K1JK(96Mj_$l#d>gk*3<jIV?CB,!P79lC=]*cI-gOOK0!/l=/_-T$V]np$6TqhdP1Af`>=r(.?p>GU9j9R#P%CFtKr7plN?@kq"25(^^RU2nn;a7;[mg''!J!C&.+@L.]1clm`]ZQt*en[KZ,%`%cVnm8_$;Qs4p!bBjtN]?%W-Si>C2:.YG20*b\%LpS8^4KQ=t7+Tj&Q";9kCNJ1m&0k"beVMPT[%L97nqOV^Bc*8Uk3M@II$:Y(;Iap[HXr"R%00nZ&aMl2H/S+V,>bZs&LJ&?!g?rk%9h[R?.FZEp@c6Eg-nZ`^g9=^7$*O-RP4#i7(HNp]'1]Cma4VU;-B_V_'Eg[XE*YoXdg0=&/jEgKN(-Jbel^NuR7CUsT:)i$I^YMd%bR+s=SqAZ6KYeYM7-FZ+!^Pfh>?o;H`c$(8#dq["ap=tM\f;V]kKA/6.kMXs_p#h6V,H7Y+=[#!-*"iuVip-$$,gsC5cuM@#)_nB%FfAKGnSa?`#K:4ENi7l/@<84(!U#7C^07>N-Y)m/aPp>iA;pR5oLoR#.J)b'@#k"MXFZ4r27SL*IB%h43gKE?;INd1XrMK(p!M3.%h7"D67^cC&F^eB],UDn2-ZE2P0jdO1JTWR>0(K9'Is6L7Xa!mGA"*(r;`5d'M,nAJI$"L5oaE<kF7)c4`q5j*D(AWfkH,,t4\E]6%(S\e+E1/9H*lo88\J'T6cEB&]iq!\p>./G)Julc;k[@8k:$.n9b\`J%R!)*6U'-Ca%[oN>/;nA3+eA\h:1XTuMTC+nG)5OT$T$XD%FP+#C\6YU9$?nWk^P`@CY\))M.H!rhdhU";.Pa"&+M"6(X*8pT@LS7PA,u=G<Dn\]6k0f%`!LGO&8ON>nB$dDW7905iN(g;7+D"H%@E6`)LDYMWC05QlrZsB*<_sb!V[=NBM2Otr+JmT9!+kE6/$V>_AgXN0'/FRSQlGTt&/..ja$=7A2Y@brO*YasONDaoYB@H#lc#IQ%h\@'oJ9lam#]5XB)d0%<JVX?/!\NecO6b_=c9>*e[L<Tbj!)-.e!Tf<=;k]Zr$O7R"rLM&FGLnfKlk0L.;]<;A,)[N<0CI7J=@lS%mtpcBHg>Hfq@6@UboNOfN7F1>[L.0*&I/7J`E3R_^rir_FmJ>#$\"of0>o%HnVZ\4%G`Q*KT]EG[#KmLH#HnQ`[<Q,CC(%l$VT;S%)WGt%fJM7e!uT)-\gkBLk:nFBTEC#eZlV.5:qj&BN@$)'QF8R3@*qH;lrE_>p(.F>&^f_JEQB;K&i$.*K>bSeLb9@ZF_/>o'`G?&%1lTRH]+Fidn!Xq!L\)W3.>]&7WV"W'KEjoQYpR\ZG,8^ZTG"+s:.GXTa_D5c((udiMe_m+:%X9gB8FGlZkAH%r%;]f*MP@#c9^1`%?LQpIW;@o5&+bl@\2U66c)u8e3]@[Kc3Y[!"S6iY<>Jd]OW-^<S91<jC.m-@F@"$>7>/h'3e34o3-j!39I`V!WaY5T#1-QY\-@,5%H.-0]=9'&#e^H/(j8g^HBKp+%-(E[F@$AuAZn5iW<\7<W7Q"aXIBWU2QA!bPUND%H0mUnLoJl%)[!9\*#8m%BOkaHPC-GUCZ_tDN%>t?,se[_,eB):".&;e27bT*pucI$Jm?.Znomhl7r?kF;sfLgfkL-uAh3!pKVX@+>OM^t)'9`r,p>"up:Cnhu0)*9?9M4pY7DB)>^%(5>6"^oBR=R?^(MOM-3+-G^C%@W,pi>SOO[$>P=*.##\b6&(Xk"tBmVPCj$J2u"!j9F`7*OI6kq'Tri28dmmp!9"-I9n[.&@Kljm%e<7^%`4fgV=t3qHOt=$B(7QS-Xf1@V$)R'A*MUA0FSI'0O2huRSJ!;J!Al\YB(>aB1gs4I!eg-^/@SZ&Ha%BnF.lDh3lXjEDj]BA%)=fKe[Ocf/aJ5F0B.%r3PgIuJ2u2g+SY&KL[18QR2)8$sF[o<(a),X7aLl)c-*Et_,pJFu#@3/4Gd./.iZ4&n0hdH5&CP7TJ01F3%Wo=k\3NPRb[1tCbO?5A;EPulbTM@s":\&$C/^E`8fHE!q`b6/25Vmukef.J[C9&h:`Wp#t6BZGIq@^u`\^0g0apf#ob"T*BMYoph%O40tb!RquRS^Ph5(>D,,i=MD]Qn7rSjq:hIFG4GJM.jBE>b_f[&&<#8"YL,KNOQq0(Lo,0Vlku>NbN7j7h6^p$<nNNL(pF_<o.dq%L'Y)&"#=,ue%.;5[MBLp+@O3D7(6t:o]fL#b*HXDU<PAq6I_qXhLc@h_j,dOdDH'r//&JAAH6<^.$oL/mMf/?+s1(<?mVO6IGgE[%F^]ElgZMu/`N%-]jZu!J7iSnbIs'1`JK:f'D5[;mBG$^T;7-TCoimZF/e'XF^jB`1.O<6DB%8[\/t/]MJ7Ob13lH]8MAej.HTcU&%0r+f$E87UmS'2iWl]moaMGGcYP"@2Z]mF4O%Z:kZ=Omh,q#D-Rp^Wb)@S7hYQ2+mE-(p[XBaGK(/F8TROLAfC"7+.h[80Se#"fIO%Mp[m@gIQMFaG!?ElCq&-@+>OKN*q:jAIY=Zm5fiH)gUr[0a?s=!EBd)>rgBH<L-R>?jJ$u$o'/!l!?C!Ro(<-c]%r^W"sBHA3Ek$%_h^aA`Pa<l-o&t\`rl\LA!#:j$<:j]R*)^hQ&6Sr$j;37@s;^1/@2WY$k9+H\AOi4Nee.bm,\:R5\(,L8V1?sVf7Tom?F^ke?#'.%n\*2(7)-$Q6]D8pT$jGaFGK6el0lp'JP!Rd%m\(Rk'7/(NM<W*hQr@df^^nmEp<1s^u_R3S\C1);d$'aYVN:G.]BP7.Y1,>/L>>7%+jSL9IArQu`(OiD<Os-XYEB'o,H\%%rH;aEd0Oh_,q[GHfa+7]OFckmE\6p2l&Xb1Fg)$i0YhFCfC<#2(EB30./%=()PlWUl.H8$%6NRnY3Y8Pa7LiMc"BM6\@\U>b<E*7Xr#sYib0gS2dXE?S4E-Rcgt=>1-sAk-Bk:k#T:4qDLlGZXq^p0&4(;#h(CI]$;@J5m6AK'T%DKjak1A/[qCe*8he]:"Kf4s!6gQgL\.3GJ*`E#?X;%csW>gb`2rYr7NQ0*'YQ"bOnH54Qd*./B>aCuPb,tCH;Ib/2c#(r;?)n5%*%.#p,OCO84^[G:obKqph:8-!&$TIiQ4R#]T>0h%.*^dueTKGA%u*!'\+<CHI*bb"+"&6hEJ#K`9(o>4>h.]AdS_o2f@D3[-'_59W$%T4+n<(0J7F?<,paRI&Rr>(a#)P$hrma(r25$aOJ'K-;h.Q%@#Pcbg_PSg[47N\_PhAQI>]3^eAC1ZXt05gLG\:rZVRfY`8p=D3.)%c<gnQ*%)(+*[=(l)r!+lEtZWgSpua$Hm(fee\hQWHpMha"*D9'apLPTl;pe$;?q7+9nQo$a>>EQ-_]<D#"8YSMH00i#JV6nQe5L[%e#5Z;TJ5Y6/jr]l&D&s27%@F3dgVpLa5de^JT8fo,dQEaOHHS3EXg#2M3B_VO`>GW)T'ieUG/?i,5\m)PJZ?ZJ54/rMNgQ$G8BaF%Md@*6SG]A&U=Z3*/J4u2La[3X6nD#9l1'(p1ek,JG*q(^WH=,Ue6sl9XEe1e"LZ^I-]a7[),GpQajECBCU-##JFSMR4-q7Q<j<pR%>I7*t3])@SLY#6SMT@C060ZA8/nHp=/[[i+Ot[HuJll(B_F,*'@#l./i!Vd#"Wt?,BSAirV$Sh50PX1K+UO%oN^5;$p(6R?9ghS#%KRj/V64^&W@*Eep/#kSJ]pZeGF?&eN*L\9QY]N.k@UC@VkHHea\lAh_59j/ko*TgSQdK27+>+QN4CAQ3Y8YY.V'u!WJ7DHEDb9&*%djEJ!Cg^PYW>6+N%NtmDMI=4>,['d=*!!H5!`r[eKXS&Vj+\U#=cPC4+0.,U<2TiG)DURpnob/RReDSN*k=1DEYNG*#NS=Q=\HG=%[T&u1iH]DT>#tnfhpnc0Ld:V&Q@4prdKE!QH>_#\(I6QI6(Gkg7'sGI>q?X7=Al1$"!e0H5cP?,<+1KIfUI_r3(lH_pkN699/"$E%8sC1_0!R?i&LB'j-+kko;2MV?g+tO-rLecqjCZ`>Yo9?`7=nN<6(1UUN;AKe$6Gn;9CpNHEoJ@d3)3Jucj-j/?#q?$J5'=EWn2=8%VF(b,YkGYf`>Wr@LDh1bLuX,?1)!S@(*4Z,>I#TAmjt>*iJ[j$"pC($/$SN)s2LOjN/2c[8#8*Uos0sA,to-iG%Jh7h.IIM'b)[W%o3N6JkDAC72;+c\^j<jeaioa#3`/sGY.^NclNs/,=TXNu.\q,1ZH'mFB+^EMNEO+H7)"]l$L(AR>>K^2MQ0$Tj_[_3>Ic=5c1==k%#Q##h5jm5I2r/8J!5FQ:7XG^*VJ:Z?#pmbXTM<t2,7U`p6[D3Z`GtIi#'a(H_BNI$*Fm][/XrMgW&^0BX?mLf^aa:,"%BC:EaE8?%kn;rZ6=mGkeFiHn=f=nOLr,'k<>Lt\8iAcmR`*h]>VnecO`uG/_\(EsbYoPIbZG3A2TY/f9G&A\5a"me\Oaq2k'IK3'O(jC;ZeY7%9?F=M8g%56[5%>dGK/W9lCEOd6<k,#;Xm7;WMAPsbo3c4/EdVSiW_el&+#J$iu(#2/U.CYUh$^VjDmq/e2V&u[o6GR_HI"eM=Nd.%`JbReWZDIuc*e-hbrl8NE0;!Ti+8k23ZX%P=/`4#)9F*VPhi1VjuJK4;*c*\50"F\ZpSJZ-=eQ4of8I0<;Kud`7e?JBQB0>GeKAe%4];3cX6Mte64R:>YgedX.oEZKAV@K:U:dbHeJK-k)n%e0@7ACW=sB/F)$+7,[SB>D(,n]+CEd:0e>kWj@&qlp,5W!9:)8,ZFLJjl%JXo-)9rGdjCljBY]\WdS%,"T\JR(o;#7EOEV*q%WXR#_.)3>RC!6l3,<<3!=ORUJs$jQ3oO4fdl>aQaZ<SC`$d/JSsKVg6:i$[."%FE]"j'WolqL,=".1ahT^")>'eJO+-W-BhC4`>8*IN6Q<DM3bj-]Xinj@<]XZ4c\!f&PP:7&MiS\0o6O)5rr;+*Fb.A.TQ^I?`(eK%Ub+A<5]%P8G@`c#ku(:;:Xq];l]m<_[_)i]Hg7Rmi&O?ENV:$."70k>iNne?(YU%5@O,ST#$<#":/#/e,=RuaKj%XT$IR%Z94_]0%oA#LoVpK-G<i&[=E;`,(2/P),H5S;)b\"fKm;QV>r)G%!/g$:N[*!IBF/Z(4ZQcV7^"DJA-NmY5o)Mu<iW>Pf,^6.3[<5ci8+*P8%'Pr&'pZ:1LEa'a+8tMiV,N+=3[-A8VRSH/(W5r2]+@$O/S%BE#%5,pb'R/hiVI`3B`/$iC1'*G?_IL\=2,Z.+>:"o?A5PC(QosLg%2<6Q),$HFW[6d`/,V*<-R%r_Ca%\=6B2I"'SMnN*Sfd;c<$N2bnU\EF_8hrproWo@A;QadLD#;-bn+/Up3sE3:fX5V6V5@:FfcdQ%!DUL)7'V?@%!!3)fhEcRiD[hJS4T_Q"D,DoP*pe]7o`R'f<`<?`/m$fR"lB"S('Ud3F;f2[=I.+8qJcE[GM-\gqq\THBfmdY9tLu%Z%//f5BF0R*d^2K*(,tV=k>Q'XBM^i(=0B"D)>7U3g]J/WrB$XJ/82rVUe)g1[+l.Zn+ni>DYfU6_po&OB73JlMTp,PG&H%C`KhB%JmnP&anR2n%5/*d,,?67a.[5A.WICNdI6bV>\V-?&G:"Yeg-tY7T=,!'*_3reLJ%M6$\BWb69FkLq\HpD'F;>7fXfs4krhfrEUEP%]nZgpKFik`f#)#P"P.Xt*oor>'=bMhodQ),,nIkSXJPg.1:8R$1b``Maf9-U/;C71oI=tJW9Z!e#iO@[/;&15-6RCGTSA[:<$$]l%Q`>k"BI_+m;()k$ZB[9Ig5oQk&VR(e!:$>3MRh(jZ1<<s>f<2]ctq)HGT?:/UM96.7.cdeNm`Ad\HYdje6u`V2?tH7+O1ltEPfqt%#6T]#a'W]BBn`CO6-^Ap=pdZ?1[K9falkM2SKc&=n2b([:3*66Mk@="fM$t(C3o9InB.L7!EBk\;lLXQf$OIP6VtW7IAA018IBIh%T?B98^`3h$1sQtF*N\(rU@<^GSR=W"#ToTs-pMg;bI].c"(rYO7KOfkN8(VH=FsEPR[#9k?dQSu0[MV9oiWWU&2m?VqHn)j@L,rV%Q6[rIR6&:Q"OmOaiH;oe/5mr'#-f^GJLNaQX@QgIkYoU@9pdeY8_-"WgNFd@]u?R2:TfA)7R)sZ9hZU7'n??[SuUY[@L2tENZp$;%@p3+%TA1n$A9kDb))B-0j#T^5hJtTBd=Hn*--G5a4D](4`iF8,$<Jogo+%0u8QM+8SA&ac&L%q(FPIXnMTCbtORPNVXq:+FlrH[!%U-4<XAjlErcu%:Or5q;69iT^,TssKuXR:$6ZKj<^`i!40!XrJo#aV]jLi,7>%P9Ab7nsVO#;*!j4)M_>lN/,G6+2t3:as;nI$8Rh%,#G7=$mT*AW6L0e.4JH=]]4X$N6;t+Vn.&U>bc4aJ_QbT^O:%W>""U>M*ro]_=*M!'F_2m<Roo4fQt*(d^<@n(kP,2l<P0:=2-d2%5/^MSnA4JJ@M[8pmH"hI9XMt7bt5#m=AYM__9b;0*;2=_:7[rp(OtbS(fXnrmLLruK,gGS1_kFqW2UJW#$0,<*06=d^uO0LdQ8YQ%UN=7eB4\&<AISk[)F@C1`hGA+%+!GX4)rW_Q,;,5TWp6KY)4I4/4EY&9'1q(>8>S&j2'pdbBp:M0SUc'A6$+FV$M'8S3"+`\Wg/Y%Pnc`"'pZ^*'T3"F^ad!qM(HC-h,](mb`+UG<D58VkV2)'.1?nrk:BF&8r(Uu&S/DWk8*tk6k'idq)a>]`HLI)K79b)9GXguEXiYc%7.%[n8lR(o4Ae$N"$MGGK`k^r71SbqYV:*/(iss9N[q55D?aS^M*tpogOt2d'UgD9Lh.`5.^R!`nVeE<n+BRN74Vl*p^1jS^=TH!%rE4aN,F:f.g&tIl8J?oI6/\LniL;"**V_*]4<i6O:PkUi":`9*N/u*+>U$V`dtJ9ah@so$++9\7jkMiMK=U8@37Ob;Q.oe(Gd$4p%p6!3=$@%h4!qHQ(DQM'p#/h]U^PJpfDCHc$=jnXqc?$fdj&dHV=bud?JlG^+:0;dR]<6512nNV.^+lcsV=cW<J.OS1Mhj+FLS9&k%rQ#FG-Xn965ombKdt1]1.Y3\Gf86S]-N\i$Al+muAW8^tobnUh.b90:/ta5C1YAZ:@YVI!J=&3]L>G#o\]]j#W4&oHAG/jp*/;_e%.i+t)XOIu`BgC-`IN3fR%s!Ga"A.A[I30#$Jb2&-ii1e$V-r&.JHFn`]F&[E]7S!%;_P.SRH.A27O0)n,rZ(4_?9:_6aQ0^SsD8T%Jj]6Q)@,I+#%KR<LJb8?:5G,DWrZmZbq2LY:t,^'W<9sh*4geh6"IAA&s&E[U`p=^.Vb:1bTa?eRo!7IPV/`L9KS?RP23*qk>K>k%(*OEHSgBrB_T*.NFmb#Ra2YVJJ-1Eu[u'6faa%?IZHI;.US>(-qIA%>U/<MFWNZN+$`WBr_lL"7NH<]SFhLPKZ6?])cBZ6jD1cY^%\kHE$M-*)EQ>:M+,3gCCeR'iLTJj1r/&6fDc_3I5^iAKaX@*I.'_Qa_[IrZR7!10()dIGG/a/GDbS!ejb[%6dF3l'AMp*["3'f$.%8.hDI@3&2a4R?$pg5V-[\d^\ekh/JL`Z3WO5n)nVh5MN9"S;+.Z3I[jBL6KB2.8Gb!c9GVRE6M6\@$JSG,j#JUZqp9Bo&k"UCLp!%0LEu$eK?@tg1q'_*US1/Lucd%]U`)BFfX?K8cqSD8XNGhQ;Vb$H2JlMZZ'o;3qEB.ZeR=6QAKTFb7UaF=Ypl6M_=+1'i:!*-E:gq%P\]X.;SObh'NCDef68+N"ul^&9?NDL^?IKt8>M.Tb7%R.#%9;U<J?E/=4&Mr>4i\7DD=k=L7NsnR`Gfj+m+d-AV;:2#Kf><'/Y`D%;plX4ZOFhqU&s5S]aBUi.a\9.R5nHL[Km;'8L@!B^f;[2L^iZMJoX[H(+Q>P"YI&]7kKp9B#c;&B97r++:TPkKBY]gq;,>ufO3&i%KHdUk]>;-01/lmneH6!oiC7\/[B.8]S[;LfU9m9uF@fnKE*>)TH#@1n,ome`1Z;#o#/!ki;G*2==2QKC=$]kA)LW#M!sHMjd?5t4%aU&.uHn)2F[5;PqlE,@CQNj@TOclWnS\_1'0SneqY\?o6)Y39pj*5?!:FUT-0[MLC,&77+,$*?98:]G@6CjYb2Om[Wo3GP<'Wm]A%%S%EWV+XRFLoSmNDJ<s&9%M-)!,)tr+NE/SQ3"OWP/9+J5K0;L8-0dYaCp2s:_I?uosbkN=hVU$$U,dN!r)p7](#i6X=<*8OYA18%QB69m\q?6%h*HBMLHeguM<gJ8#d@'<GWfTb;P+@._,@cs(uHa@.$V3>HQjn"QBF?Fbe!3LbCR/3Z3a,(HNgt+U562EnU^;(+JsYu%&77fsgpI]1>amfCTHJ?5[NLC0KimC78NAb&"Ci\"@9t5\mC>Y7&_ZTnb]d(/N<Mc24jiAlpN]M)K0]>/U<"P^X*RJH;:U(C.n'0R%pD<lW;_G]9=S5-7%8*VK<4d!k#,]aXe%'$T/PB2u8WOujdf"`N>AG\H9DX)+l/QDuC6>t](uA(<k#hD,_6Gg$i3RKd7CHu2^SG2_%W9]6j^aTd<)R+uQQs(qp=@An91Pf/rd:5_,-PWZK[3X[W.`6uaru]eMV]I117"ip'mmN,u&M\)a0C8e?!T$.B,;Vhd,F;kW)3_&+%k%0aC$"1+hA4d4<.F%]P*,_;PT34*d'03J'q@!j3+KqNHU)VV_![O5?Y"\TE&qQEL8Q<ZdILl@Vb)D-E<&c>\D[o1b<$fo@8TU._%^KkC0OdhKZbja#^bSnJrGJf0?l3_nrWCFuATS9ZO]FqaoM$W\/O=.%2]#I5R7g7rjn'-Er1.Y=3D51'emk^(@rKlkp,/Pc(RYmQV%9]&7fSPF>dAG/d>Fn3g#^7kiWE[cmnU^^l'Qb/B@U!.Wl/Oa5NZIS(ojY_BUD'12mKNt9o*=++bc6QWCMAmQ>B,DhP4Znp?22SKY%>?YORI2D"N2['.968j0KVWmiVgp<tWR,013<_9,>!a.sGpUGG]XYI9LHpgA\[7Z`YP5r';Ml,m0UafdgMSJ$#UV9*+[0$+I-]X@L%DhFq?0TpFsLH\T8D)]1(;d"`9Car\?n218g3k]b"$Vk6gLlIsA*JR=1\0c(BARQ"s(V5XsaU&4#]p@k.bR;O-Mg_UhFO#`%W=tUX%Doo"nEL0[qX?6`#IRa$6+>CGQ&-MFj4$o2c7jb&pd"9mn"Cso&eDcL#A:90`@e8)=-tZ=.YO57*N^MAhoErED343J`%Q7e5`?:05%Wfl<X9[Fh9QrsMN/,$r^%!1.=4,oM@]UoL(>;R-a#4/cBO-/%[6L,;"[jdgcT1(_ZBWY1bD.cV[_!PUXDRj*j!mnENe\eH/i4oV)%]7d`P'"p5#3"rR$pMsabL4t.uY:@'uBGU<r^pu^_=FbI+n$>K<fd3AZ;d"GSkM@u%V_^-UA1+jE7RA]8LZIA,2egP3YaAZ=C\Eka%ciB?#k-c&u`V,C`M`i[Ob^Uf@FfE\]j]j1:mk+^eX$GP13RUV)`QHGH_tg2$"b(2c<l+ECnRq*-/J/^OkX*K1YPE&Y99:kl."5_Z%#sD?U[Yk]\Kr@Nokr>KNS"$j\%&-!RW)W0op9][Eke/f:D6]0[nHu\5O]+:7G$.V0A_>kX'hR&FCtL8Kb/lbP66au?<@*aaV4s-*%!U_k:Fl_LD6tD:B,bft<o2/X@%FD4Ont+(S,:'uNo*?_91cI4DZ_Y,L,%OO`,HfFj+Cc`S?RT9b:cpRKlKHVt1eb1hg2S\2eJ&1-%,MGZW<HoNFYr(s8=CcU>dHI.[b);-W^]l^VL*_`-!YHE"B5g[`@UjM9^lWD2,p7QbL4lW:6rCn_J/:H,+q5`PQ)rmHNHi\"Mr.r,%I0i%b>VBiu[V!(hS_*A?&i)e--lG\\AVfcG`fRu-QVtiXKTDQG=9][2@j,<sC<C[gOH)dPM4/q1F>U#iDPD/2Z_qGGNpG1G>9CL]%f=O0gn/JtuA@X/G)gSdr;)(NQ6lOL-GQU.8-'mWuhG'0FAELZo^b97',.s&/.$./i/dRgNE_M8P'Lnch9_?p$5`>VbQ2q`NlVLiA%N$apn\-dHI`pPUQouXMTaNbspN.MO`Lu`#+,Sntd,#-AL@4i_/W^el^8&&b/LG7M/K;4fgUdT6p"u)C3-&8Iigg&2N3%2:]I3#O/%*4W_;:C?@`WQ!ToE^B-&X%J*_H-A'6M/kD:72-o1e.<!F)6>4g"Bc;SL-E-ui*hdd>s/XElEj\Np2l+^P_=blK9T0F3UOLb!u[On%YtHoI0CP]WGBWqG+U(.A'((>j%Qb).cZlXq@qa)/Q#Y&&@L+7.p*rqCXMK(m2j>"Ci3j=*^:'RMj?B:H1ouD]:6X(n*3:Pq_f(J7%_1Ac@+d\2Q>\XYZ>"FZHJ&luHeg`(alV'cc>KIe+!jW@p1m1`mWGTqE@l^#)-oD[+9%UmEY+'QOk"fpRIU/ZpLoWClEP8u_l54LX%=(U,;giS9VJ3(m3XK*oB48/qm:!PbF@Ij\p`[J4jQ7DCJL>1dH12s8Sc3sd!`ur^P;O$qrQR+Un9&F[)3`'DQfA@b6Q1uqR(_lLK%SARXQ"7>/_kd1?bZef)n;:<$`&V(dsl3lC(L^&i7@1[/kr8:)#<dc<BDW+2o,%7rHf!`tq^;/qT"Pd54&9#XHjs[7Z$@"\1=3M-C%cPs)$&Ht-0%9OKd(E-O&/M>_;S9if_1,8>b8O85<&!N0?csfc\/e03PMhL_g0S7@Q=7-LtJuV_aIW)^sA9sCqUe7dYEl<26C-`#M%'O:1-WHBU%,$LY,[R=.mDB_!CErcWJ_gn5a1-.+AYW$;lC"t2r[sQ;kJKCqf8*\&0[@a9\YqljgllBO<(\*f3KnctQpX.,"H1kFL%4qN%fqUJm_X4#Rtg,H$l;D!YeM9'_P,R3NAfN<#JT,EMq,At0@s!2-_`HI)7UZG=I<fQ0C0a=A[:!7.)hlJlM2)pFOP*6%X'F)0I%(i/?"1ttZ'$O5$Z;7WZgQlb>i8nrbd:j3@NSB,H-DFF:&V5`JI<fJMb5h9-Y--fJ[&Q[Y3/_d3_S'MXi7@?5/m>>dL145'Q#:<2`%PbYS)9:`Fti[7;Ke,bqmP4P'`.M*\]Jg@fK@St0Ke"HmHn5YNp+tM@S&Hrf'Lu.oA(_[g"I.^7e(i3QL+O4?ZD2H?@pDLo+Dq#5b%au3?G[7Pi*o/;H[09H?;3RA\$W,b1:ZG.J2_d2sJG+_c7_-a7_TWVul9?m_ck%=APO<$UFI?#us:*c8s1?-4ko69Qf56RenG'10,%61>TQFZKVn'^=d7BH:Pj`2G!,94XOVnE$>5W7]?/X;KnkCjm!pU:o+=%'HJ]0;+Ir]U$mffphO?f\UW5.T6<c7e`<W:()-DTs?Q8%cs3NlhWE"FTT2DCd"BD5>+0r%\>l\`&HMIE9'fM334:S((IEtB*dA&=/k#?jH\JL'R>;?]e1-M<J4M5QL.fW,8kbp="cA0h+WUSr%6*V+BA.<Jnns0]X90fG<\\^H"@Ojjo!!]H'9p^uHes:'Z+=\\[4JG8[>"UE\6h:]O'(VW?B9!^\BNr:q(tM09S"qhCNrj2noY((C%g#FD[*t2/p45^2RZ&1sBoa>e5"G>L$K:0456Z@I/.u(%D+H(f,*_#%+P1"qF>U+>K(!Y]=<dL5``@"(,mQ<!Vm.sVP>am[6G=`W\%_P4:ffW"#X<hVocf+m/K9sblUl5e&5>hEo?`rtoL[>i^)kK:dSBCg_]m`%Dk?%C":k$?U6Gc3%o?tE`UFGL/Q%6/l`MZouXb/ADc%`F#+UnU^i$&n,tt3L3"u'"PHVl9`q`6D89pM9o5C'sk10eXW=?#*LsKREY*b_,BMD!^;F[_!H^mYn86X>42h&F;5(\NgC#fO(#A2%d:[&D$Dr-0f,2V<(Ae8b:>O%CYmeLB?&61P%&D#/fr'V"M[pL2]\`oR7mK;uHCY)#&Q)h?S0cK+@YsRY(N9*V8K^EsW@"+13#FVJ%hoA<e@@VHISK,aLf&bo,>=mJ0PcP#fYGq_\'F`LF6tF!*3R)tBcOAX*<6i;pOEoi,%>H%3?4o=fT_*A`Q4)A7TN_Rl'r&mq_,-o7%>V!0#4M2L`7i2po!E04[Ll.!'*`X0^,t+]0.S0^N#*AkMA.i2Pg#Joc8H+pRIPFi>)"5Dp)1[ADoXY*iE'eNbJ5G5Vb8I!:po<[<%X_'[fD1F+YdgYit2%MH-='[!6LSV"8FcuiAP3>qZH/XR1hW0Kkk[9BaH(:_(,@Z;K^9_&N.(bA)<+UKA!-AfU"`?/m&;rRXX&D-!%,2*LN=[k`>Ka=/j@s>k%M)EEJU.\N--kZ-rBM>u!+qSdu_]#18:Wg]1L(N*VQRg;B3X/t'afN=qctLMJJ/lA81VS`g7+8,]1tq45%=-sD,'Hg#$YjiWDf8+1I.k;OEH;I0JU_LhHa!$;4!fN:KlrQJ*JQ)]aP)FXT0$tqS"O-<'XU7JAF^u`p[p1A>%pA+lQkCTb*ORjL%(ghD7W5W+<)-!OcBWf^UG_b(X/XK0VCLA+B*!mG^R-eY3a44;'H=tX$A>V)0<JPLfRN,BJ=ocOCaH>O77[1EOHH2FK^"\.#_i@eZ%,PJ\[cSV;A'Oj)<R0JGm_N&V;i]\6DW=hok:Q*07T-cqa%1:S8&lZ2^(BtdE`!6#(3=Lkl:iSM%]]]g:7Bp&io62[I<%^R^80eG0%?V@JQf3TcH]JfoW<DCog//EW8g/]tj4nYDG;HAA;ig&(0rMq;60<B_hm+'C]84:T8(?cXq+6_n\?Gi"d1Bf^3EYYaH!FOohlnIW[%/7CeX09'n0(^QoGEY14B1CCf->HslTT_>,/h]@lM3j'#kn$%7Dn_NtZc.%9t3%1a$+I3su1]J_%=F<Y+b`R\r6t$WOQ^hd=SH^^c%g2f?.alrn'7[Ml)04NiNa4eo9oe'ndUG]p-:bH[@LR)&AS^&bJ/FcZ6JPY(kLn"Pt*uEP)PF=4(Lkm>C0o0@h5-0>UWg'SQ]dlp8%8qdG,CI*_oJ`(p])/'is&JZTC-?5cLOXl2M/!-eYm6kB&4<4Wg(sOlX^,E9N>p$^ao_L'i(ufUL<AIpnZKW;"M,,=&cqkaP866$i%fP//oQN54lV)0aJqa2qe/k7f"ZL#p^gg98!'SOBNP0tjsB'O4WW]c_j@`Hq7iV>>`.P=Yh2aqU!U3Y11aIT^@Fc3_*-Po,X^%e<M%;(onA3JFr;b=uF)`FuDc<AWVDn'U7dil$^2#+?R7;c]+M@\!f;p.V*3E4'3m3brbY5Xo3;,!'9$YcX'3[r&TeRG:?EM`O4/6mN-T%,#W>nk(Rqh:`-nJ;NE)7,Jq(9`,[.lBFA((pr_S(/Mgs\B"85IUd<Zp_dmaAmSV*^#36C`U;R6o=]Vt`!R,3t#,T0+,-HTT)$7<X%k.2$)-?mM7_k7?me7OCA(dpo'H]mOr+dU/91G5)#0_oR27I4M`Q6Whlaqjb9U1/ENa[l,"Sq&o5*;P05>`^ZER5HK_8EM*;3-l50%lI'Y>FD;L$ZkiQO4`=72;]F!k0dm$9Pa#0t10QEBV<$dtP,12C;JuXc.CctW[5Kf\J>&(B[D=0IODNS&<cYF#q-(+s4,;>TUd/!K%0bFkU\B=/8mS_P,NW1,q+WZp&O;<ES^pG_KE)`PQ7uE0K7*VW,.E[f.0]W>gE2d&rW>lUYMhnAKbpDr&HD'R&*+4goNZcW8_7OfV%GY;a:A6!LmCYp"gA8^pE7*IC);)q;"3CATWE!Rq!@@=N!?=P-2^I2nD!F,8s"P]<=,q3Rk9n56&%[5<OjriiM`%Qhbi5/nQ=a85>%W(?M`9)Vc=R"ZeA]FnZb*EXRbPY8#'gW'k+-EGt@dcW;]Kn>/#,3k'h>epDNEr?GN1qL(C)E8>hFgD+?4cr+Ua\uDL)TEH&777U[%M0lF5<hi'>Qk]VPf(4WQG).PsX,rHr1)!2@/K:-e$fEP.r>IH<$0/>Rmo*b^$uBdSr`R`"'"R]qo!ek(8ra0JZ8e4`*TM8f`%o6i%.%5f@%`5YjXTj.s`rhcaTTMCa]eoeCM5oR4PKGCMe&u,LXm>^XQ=)3sc-VY2`06&C9r_hd=ppljL'SD9Ad2\A(u.f,fJIbf'02pZ%igmj<,O8bhjN=2[9VQLZ#d,hsRoE;%Le%SZ76RSE"g2mr5qm:Q7.j#D76?jd-St+fh7E5lkRqZA%q;h1Ei[<h>8No!9$E1,,rk"e%L00C.N1(><_er>jD;Yo&3j91QD!RDkbV4<b5h6WWko^c$o\-KBXVsgWblUe9B<eT(kaN&U@X+`\TK+hJCUXfmhU*Y#hA03>&]mA*%=*2#a@]L>_3=NX*9qN:kRU^n8+.65^dS4#'kjE>oTHP,N8-fibJD-+*1pF`J$CV/i+c8Cu6E.irr%*M#6`t&JX/OJdF-'3(Q'L>R%>%q^V0RsEd>9&Ru#,]^?:b)7QcqCH@[>q$$/Bso^i1cC9OQn<J*DL/0mPLRkUNBqb?rE7XS92N,L2,l_[Kp*q.bI4s[\c)Zc<Qpp%mR\H/n9!`\1U!p4oHqCc]:YQe5P\K'\q4S=S\]8&rS(%TOX\5bdV@C&67'07,qCme#o+*,V,o*7>:J:,SbOZ[f=BC4+h@Ugk)2r=%e^>L%+?Cfce#1f$-)5+_DFa/ejH:A91-0dr'8])d%*7@b><%<`QKVOe%P*sNEJ]_cMpB4^McT5)qTQ#NWcO'-5V*78Z*&ASL(=Uc%3Rn<6:dsHHka'M5#7\?8FY+2Y5gYm!6Z"J,_3J2$#(WX?64Ii5o+Xme)A&UXYJaIuc\mU15d)lOVX*GBLq>+5W"8IG8h8A'#N6uE%RjJ"qW\Jpm+=:V$-[m8Vhn)*T(rRm)Jd<F>=e^s;[As9A_m&d5Yu)VkC34P\2m7I8A"KqS231f;.`!i1$V+sM+<+>urL6em_pB6#%DGIchUEm/A,F'%t?5`;e&HbK`qI>l_=KNHpUFK)>FVR'6Uba3(DB;]/LZ9'kKYoe-,cjKNOV*L\?H\!(Jlsu*A-0"i@geD.Gbg:#%'ep5'Bn5C'N.NK5Uo9-t.?9S+!fKH6MLA$71G'LgQmGI$7/1*+T@8f(j@g^@I/SZ5DJO"3FYM23]4>m*6=!VH80S&<%k@c75f9Vc%hB*.O[#.U'Bh?m<(kWaM_rC+E(fW6XSkda$(N`&4U9ZXQ>&$thqiG3X5^2FE@6h911-*@B(_@\RU]43825ie/i2[Z=.]nduhCQc:%PktbKk%b/$&r^CDTe?gC"!LM'<_kIEE1`,*]M9#jP-%g?4.Y0Z%4_NP7?\Ih,@_.HD^CFu9$B$QaNrDijY7L:-duS-$n?u/@Xil[%&Q'ipLHuP#@Ta!kkL`PNBNHe+0'L;REAf:oU6nA)3'D&cHW$P0E#4;++l(KL_'rTs6+2=8R,>8<Nl\Uq-H,l[V.Oc,ioJ-%3e'5<%lXBbcm`ri>q;M=.B@DKcfmH;G[qG.gG<4dmhs]o*[q?YDlJdtrghQl`j.Au"9,*(&d0Mu9ec+U`p+O1gUd$6GjRM</TA=%18j9/=%eHK?^CP"MseS:RV>TChc?#iD9Dn,U5-4@nWa\H(3dj9lDCi9H@EB0foC[_726JeK>,l-)YG](>3O-Y1JIc%T+JOAbFT>Wb:K1FKd%-L2J)L3X*KF',i[KWa\\%4PeHp)d8Bbb0'XOd<_[V-']C/De%b"Ddh5A7cXCDOlW3i3Jl_efbN(/Jb%C7suub&?Y;lnQSY%m>uR5%f45T3@R>O:"oZWl!(dBn7M+s%LA.i6fsYe-T@G]Mm=rsNCJq;sGtEM8.FYn/a9;GH'3o.jWEdL`SH1;&BFI='_<1eF(%eZSLBWC@%Ma4&e2k"$DEqft?*iG,2!/U3>dY"eMhZ@4Opg)Mcm4n]7ERl8P+*P%9Z[@!#%#l#:\bQVXK9f:BL8maZ"VEb#W.'jrS)sOi_E>s<%Ke,b7Yb2=K:"8/8AJ=senFr.UcZ7;gaIHL;<-L$XJe0RJlA;dKb;H6IKnf,@VO:JJg20HNArJumF2/Z*.Q-DlLm"(+7d)f5NLe."%ccgRpEhm.j8:G\&o?dDu>=`A5=ptLlE=:N@*'k@m89^-?ZHj!\!t]!;$I"U2RndQUO_C4V)CS''&48<>1eYndFnT>79&N^Sl[^`4%[3rc0iS)6/1mZ<MP8;Z$8jO^M^-hgD9e'+6**l-^-Qs]0F^Z\2I)lOGY-<:keK1+'PYt=@V9-VP,/GS!+--]..CaEPJf-\I3I-R"%_9>4GT[i#DOFdJR3D<uTQ8"tR]onGuad%L5^IG/-a:([AJ53%G73bT.RD0XG+@T_pB@dV/KS4lYcWYLri.9%o,]QuK!,tTC=k@"b%6dBTn6<'8?1gf$_p'=6]I)Vo\!]Ss[Rc$gr_"%.!f;H:/2%,>TPc\=45[NuFk;-da*E6sAB=*g-`6uKG8h_C5(c^SJ@Y>`3^]dn@%]EPVk-MhS0G=lKfmd-X%Y=D'O=gMJ_99+i3$<&t.<h7D>[SpFdR,G67cAcoS8P==pn[?LpENR!EVP3"FW492>4VsLedO_dFYN2Sp%AJ@rq>Z_bm_M_#cUgPeR].H%106+TDe?pFN35n*]@d6sQ^'Z##hZhhf?>NNJOllr;"B>Lrndur2TNM1kej8R:NS+@^H%VH*AaN5@%'f7[R(.+UC]@"G@Y&5D=htlQYpI``aG)+NYfq,Zp?l&,U^pWnFR5gkGW0%j0R+mfMPAO2H#]OIq-J]//,r>%GT$g?Nf8?XbhZkW8%nU3H6kGV[oD:o`TP.\J_ZdOkO57Lm7@nYNnHJS,PoS,IqQ,HH7V1`m4nYX[^KpU%QgcO=8;.)C/aa6on@1$Y0h3I)Fb8$gSRH0Zo%.1j"5R2^O9i]U4t35sUG^Ud&/0A"^:^N>r$E0_cP;]@/Ih)-Zng%j\>Q)^50_GDOnc<$N-7l"CZ0E1B6\aJ7;5O#>pf#^N:`A.d_%;UY!O.tA,&>]=AraU%h3E0SQ9F1TeRFrPHY;8Fi"0>W=WR*4T8=R!87G?%t/<2sL"e>GIAeR]B80:'nt]ln1?E+a7j?upO)3r`u9%]d6rl5g6+N/l&R_31+XP]UrH=IJ_UlqVh/>h1I-k]f<RN(AtK:hi^[8o7c%P.Z2O*k2iaIg30U\g9#2^m@k+PA5:`Z21qceP=plr%26piO;;PNiGlHZSX82Y9LgCbS:/Mf9N3LPFIDU9f=2.X7]2U\r_L4PP=?nbc45@9BS`"TJJ.r8>@<L\?P4^6%oP&\QC]`nn=]rHB%d^72m^X?)GAl`SsQHb#0N^siV+qfq;Mm\DmU'=_+<J;e(S*ZV<M5ii\kl<mCa&ao7r9[B3:V(kC2fim`0#646L81-P2)pl19$<Kc%$r(>OQJOll84Tg(i]cU]"W-qJ.fk1*oY"L[\j]V)7RW5\*Obu(NX`[OYX/cKJA('kiZ`^2!HBSu&3IIA3us##e0@VTSA>:SZ`K=T%jT->Xi3U^UHY:4\1LsrbDaV`gU!`L#%#>;/kslE=!'LCegb)HP"r[6N(t-E9]dc-fUjDR<[k,W8?<%3!ZtNj\`KNcNRBu79e0EVJ%#/1&/(g3ZYW"?j@/%WZVY2^uj9`>54BARtP#!<oOQW;bs9$uAmX^*/1,QWJc0pA>1,T`gdhunb<QAX5n.iC@I(9ELs?*nsbRq9iJ%fpYTSd9k_9[&CZ$(!&brGpAV/n.q2@N6,4n+j`gdP0kjR`.+''X<KUlcOpmg3su7:257?k$I`"X(!m)>8CeTFT-1b"a]2h7lkN]8%5(DscXpXP^H_V(ZFN]ar?q""__%T'R+o7G&6WNM_6k+J\#e1<GAseXBMA.8OK7js%I+>B*N/1oo#HM3kl/I#>TXH1n'@aQ^PA*d$%4UZrqiC=#40V$FSMl,_;)Z"9nPHGG`)dW1?S(-PmV^HYiZFNi1#"k;N,Cl)GghSN7<ac,W1;'t*gKT)MRoKp^]*dA+(/Rce_BVpe%H3"\aI8qJsf4bU@)b[0(BC(D[U+N>)nPgrBYnD2$WO;$E('HEb>*,.j?"$p>)@7Xe]1#aL;8^+]\2[3CPQY(kOV.:RBQ*1>OdT+p%Ca:7crE8:rhNtX[JDo>j-iP#U]ndLMrefDJ\"IpNH*C!-9WS9M@ub-]^KtX8FoYbU=6=Rc7>o(.$J$a?($TS$d`Q>VUQC,RL#t=Y%mcIn"0W-.*n/4YTjnE^"/%<P`K`Z":9T:kD$rqjD9k9P:g]3*HAT+!%3'?'7,a3$HAS/hq==J4ZW5Sc;$rlRlAX+Q-BT.K[*cm0c%(LdN=cg@$%$Ufmab:71.p(7mG'+4--$X!O#(BEmAl:iE'jJS#7AMM&\?.'X$cjm":CVt`3LbqQ!*>9BU65cH=$;0T80dnfa+KmO#%#rJmjPqCdYf79S6+b`P@A.(-h1/TiqdLZDuWe-t1$Kd/\2(O%T>o&3fa%hUq?ap*`VTLU=c:#H1J8(SX)a\DJQr]o2rfbOj1(;8G%bCeLA@pCZW;OMSkL;i9?!eV6N4!?4i6*S2J1bb<oePs4n\9JTF>DATTRcc!k]k(:klSsJ+O\_=H([Ym`Ho7qcpCs$TQNTfn_+;i,%M^O,go.3jKi8C8+j9?JfVqAR9BH/_L%'HM6=I-m%?Wihp.LDXk2kCX6W(M2[TfXmpY__3]9[b>5>`4MR->tA!.j.U9CVti3psR;?%Om1-C(dQuR5p1i0Rc,-:BJUh:*,I@\MnGHoA.^BTRfmfL0Y&+;2=l7N:oDAQK],C)Z`%0./PmrB@i!!uoYJV=g"RtW1D=6J=Ci2q%rCY6WUnBKY#Kh=X!I;W1N[YgQ.0c&_o6\u^lDc1P6Wlfl:pYP/!.A*VLocn9!YkfP:QrH3i9inKL$c`MG("'jd8?KnlQ9j,BWi23%!(N8!pUOraQA8RAM"/p24soiK-Dsiq5`c^M]=gMg/Z,40M]4?*?)&&p=9M,HR,6hK]sMGrN\8ugbFA82!2\UjP;/@eDU6/<5m1.\%DRQX*5kpJfcLMkbTSd<);])+CE;)BG)2tO`d9^?(imAK*Xf*hp*P%Mng^,%k#+RskR'E@)lQl!(V'pi2M998$F^u=hrF<43;8>M8%@@-7]_']>hE&jf].VkkR4c`To.5k1N]dcQQS\]7Xf-'lpf]`qY!5j-N&ob_C@]>h=&rNM6m4#ug7m&a^OIES"X<jf&=4(#&>M$Z!%J_uh?)UOpn!'us)GN)VfJ!DUD:/'DqA?:k(+lKY$^+h5sAd$VB6ZlhhRuh&Uf7e@'AknAV\e$_C2nm?Z'0o2#L>#7C.=($;j%EhF%9JR]SX+<NI'st>9oa6X!E'Di-#r1UB`A"Wa*Lf2NeE!9(7,"])hP!t(7G0ka]G?m%j,-8k2C6GcUdVq#nci1?[U*neiL*`%JPNM3%WKL]^-SJqSUt%21QZfc!5&1>5>fVthjbiT`G]a$5jAV()XXTDST$:D:W"pV=WPU,q-RY`$;J0!K^SJk!%M*itQ'IYG$bQ39)M85#%ImQ5>r(aB-6-GJhV8HJ2go(Ok#Rtj43:@6kEftj5gC6fLSu=,l'Chj5)Q"Q1o_`AX<K@i5$710K+HLP:Q$cABd70BRQ3#5t&PT<a%0.9!>BX"K><`%*tlBnHh+L"*#LoJ(a?gpfi?p`'Hie?q@Qc]:\&[$[qj`+/"9*<:.qPD2^PK;q&/(nCk)jjo&9;c\ff@Z(cOdQH,%U+oJFkdVN2V36j1h2<<,cq>*KHrFBZ>$,qKf**`CD=)#O7`V1X2.CU*?.A&$mhYOuN@%/)oI3^Z+Wcih!<>d6544$9pDVeZ7'nRc%6m/jtJE:^nOcM53!Z5T#>o2t[[5a*O"'0V]_Z4oH._FFo!X(#A=;2YSa9)NL[jb0I!%a3f<M*u5CJcDCrQX?4/+X%Jbs0L=K"i_s%=d]@*aEash\JTHUkkd@&i6KST>L5iY_Lkon2BkZMRLn#_KMnYn<t!#0C<da]fGL2,%TaAGE[h/B1I#CdP.Oo"=Q2]-b3RBNXmqiR%9Aa%c8HfHY>QLprZ\N^tk/Q+kB;@];4&AFQ;rG_g+*ta'j6J*q.<RH'aa@U:6TZbu$@p2eQoCIX'>hF8XFHi#q2BdA9V!U-n,!qt%U<<]8Hq>"bS00#0@iU@1hSZ*&Fd2BZ>C5X->Sc%XO'QYa12*VM8[T/r"DOoUB4HJJ9%sRM_Qp/9QZ-5P3?S?GoP(?,`M@4;,7!k;%;\=h+LU?b#AWmTmY/=Qu?9>W[7J#NVFDl>LCUURscKU+>G@]6/GdO]rbJ3a_ajP2dm&d4RgmY\s:V4W/]4smV^GOH#+OAa./t$N7%'&5hLM:@m'YgcS3rE7WQ6F;TrlZk$ck6]kR16"-?0@LQUhUGVh.E/?dgK87lLsc9=Cf31UCudVs!R;/t!AWs*eg/.%_T)\/Q<mJD%4Ye<%PfI0Cg""bE<RbCjD449T=IS(h.EIi]POZdN+_p]>MZqd<-L8a<j(6^t<N69mWjd-u"d9urQG_SF:hAtn<L02LC+NE!O:1o.%O'Gm9qoWrWnRYsC/*'J?ngYel[+IXk.9f=07HBmK[07C!OM/258$:oa/%3Hn"X([E2l>G"fq_u;lYm8C_")YQ9F)1U*ADNfopNgN%(<@bd:s!oN)ePMmBU4&I(Hp^6.+-$b6^@n?AXNfp>]<DndJt/f8G.`!*1<*)=u8,;7&Uu4RQ2l;]9R@&O+<0iqZn>Ud%[*#A@-Bh%a5mqD^YL-$p,&Y_04@*LF=cS`JMK,Qe^6N/!3?uJCN"IKO_[;5(1=d?p6ObhE\1d%MqA(BV$5H(Zu#)1_K@O:1gk@TP3%nGI866@%3,4.PpM'`+BJ^>L+U=Q0U`:cli0')?Th^C\YY;t#@p'H6MCI-V\(81*e0U<^^A?>LL/.*$h9)!2Q,eV+ARfWkY(N<!5([^$mNX^J%H71]>UFMoZKui1RX-X9Xop2#86S]60,di?#Y!YmQoSlOs/*:n6%95,`/#]\2>qQ`$+C[m8JOmp]`ZTQ*1TgfAKL04&QlEILksNGF%=pKtL!>>@j]3D7j^S[,4]`O4!Uq5V0g'8e0"Vc:cq2U3I^;?RlMltfcLi8pPmQ>:JqOjDIX&k#!\+'$FV'gW3rVY@"@Jf6:[GPT^%#>5kND="FMoQL4Y\heb!RnoX$2eMZ>8,kK0+'5=D>FY*Ee%H9]lWWl@mdAZ68NGHcR,$Gb*_`_r'YQK:g9O8mHUf/?rF<Dr<k_cp%US>tab)]TMq&inWRot]8%oiQ(mbuI2EQjii[7P?$0$:q2kF(W)IGV\jT(+UMF!m8`(;n#`kL9D.amH4p`p>+F&#ME-Hd\%"ZM0D0%g2bu<9iboUG9`rOKb]$A4$WKoH#YO/+3!`giS*p3GInlWB@H[m-F6h3RTUk=q=Sib"Ae3]r(d.,I.tsl;Tp=#?261FYOBJF)eXEa%0FlJ^@51r%F5Ho1s5@X'0@o<ub[P@'nnbaUFC>f\.%r_$9/2?"mISTUIkN5*=X1QG3bq1Y%o[*1`sFr?[l$7;?eq)Th:gZ!G&ag(%&u2e^5I8:1ZlbSd`19U%B[7IO9RPduk)TJ.aa=&dVZ+8t1XnPGWiJ]AiS/-G+g9%<=1)2?_sK\M^\#)hgn^7IrP,,i6r;!5F,a-R%rU8XskpZ)3ijRE9.P(r'YPU7Y)ik`5G#D82g]'20h\5YUF)HRaWR/']&rpS&4[>YAoBt<8rs?%cg882G[/WX_i@luLf\[[U"c\'A%m565OD4uit*R^a59.M-4H`\^rLKi/t'YP8=s0F;Mj$c]YD9%jnT+LCRX@a:bCn\:'3AopU[m9^gclJ@tBa5japcrKm\S"Dm6$93u%\:"+V3ai[dk71a=.ahiTa'sNG2Y$7(:]BdF^ZW_r1YhRK*:us+22[,=fM^h`YZ*M9)XarUePZ;)RmaGM=e0BrZkl;0Mtko41hLR7%I>A3Z6_OIWV+*WnAWH3Vo=]*2BB"'sO+*FC8@jqjh3W,:Qj@hT^='(AIs;,,0?.ini`02DA`tVLKRE#6<jV>re,F(=^ng8,`lglt%!s\,u1/IK0X1Yb!YJ.\NnGiL(]I[eYhAr/qCWdT&K+o4]-0UO0kk6[Xn=gKI8aUDFP.#GD"d"Cd]NW^rluTY)T0`AVl41=Z=Jml*%jF9#'V>d1g\_:@rY'R[c9t[R%ce>u*S<DI"6JqZ>f\>=qZ2i84X%[7-cu&*Nl(>AWkmMX0WNl_COa>ehQ?FmE[=H$=_QIroWiQJ4%!Cbp!jGeA[:O8+J?g"&f(VP#A4\<8dU19.H:)0%X=D8,=BD#eCS#]4S/[D3iHJ@rN9FkYe>;;>r^&H(8KfcS!T.G@.q5$6g?QB!o%p1<LBURg4*GPE8DlUr%C\he[l4kr*nq-lEkD>tqaQEIpRgtpeSTh(-sFTYU=PF>im`dZ]F](Tso2K&*Idc=S9D>X@g^pZb<H,oXK%flV#\%Quc1g"MV@/(]KIT!uK&+3`CHh=d_JGCQSf?$`rNo]<q#+#XXA$'>:Q0=9/CrF9#O\L)@ac;'*Y&Q$u2EqC_WLgDK!J'-uQ%XS7p[lAr63*oEVLfPC<s?S4,s"8tN>Wc3,*"^B.8p(&YhoFCDRhH;6@LfoPH1)1I-/2LTMn]I*JEik,X7hY0pg!4-i7bqe.1(1on%Ro$>28ZPg0-ETV>,&PqP2K?EBTj6_h_f2;l10]P$PE/6"EFd!TPuh"D>,ETMio:u'[>_!95ZldJ?uS4NBUTuM.%!G`)0)IJPfXX'%YW\OQGM^Y"romtUKA!W;e@=q2B"^44U-)f)[/.VO>#B$B3k9VW7;lLLm^B_7SSg-?d`A^UN`MJ#q=mDsa-(3k3eM.CH'I%?[&CF?%4.oWA)r#P^#'IJ:]Csg*+3nN3(=Q8#)i3BEQ`e'T,lCtjQ<e;1Ia;h80qGL\>?g_Ta&_WPhr)Oc_?RcO;j@3)HYk4$Lfh6__>u$:%8m;&^pA:0%mFt:iU<3K<me-lp`]masE5BZfl,I?4RQm8(fGCf40+MU#Xi]tpI.Hdc0oS.^,DYIL+gBO@pumc9C:$o`[qG<sf#He=%?aF7pUa;4"*:E1>%ZY>='V_d1rk4i)D9^Y@Fq6cAm!L5]q'k:no42e#,A-W8YPE9eF(>5</?COT.P(+9HR,3Lla/c1+=U+K]tN*U%^/'XXk:>p\h3m%Z33\*^%"lh1_IC*iHh_JoqYk"W8;bmZcYhJ@!V_+?\c&V<=+U"d1UqpRJ\Q9NnkOX[n^mKgmM<)'s-2:ol4Fgd%f='Ph>sI,9m2XoL*_a\9Mgr&>pKGn=HgSkoX&!mtAtqS>3P"WdgKQc,cWAlEl?m[?n=[J<Z3g9ZXndA@5JuJ:n4uZYJ(WQ1R*X:.%Ye=I0Ce)KoV*>I6:4;*VcMlQ_VXsa>';K_SoT*^5J88;^mk6(ZpO4uJ:JgQ's7t'qg"i'e?spEdf0@P=:,4RQH0%9FYI2WGNOGP[%"FY&%a,AWe'CNg/rC]e5VWn,9,N4\'M%fQ3P>8$>/Gs!jp&EH0^])91[lP9&&$K[3hYQ41_=%#H<g*FYf&?<#.B+<Nb\O]?8XJJP%I:'X[46$:/VYpI&QgVWco7-:Er#ac"qcfQUs4:h%W$G<g[HFm\f&Ek3\[b"eW8f7-$iXcbE36q)a)pUaD"IU\P=Q*4q4I%T`ZT3&%3j)iiFeYH%TC,G!Yh$iJ]t[=jS%nsO]kM'"mG6SC]!8\jcs?uYBC?>%c8XL%j%4PSr8rLFiQkEj`U;]4I<M*MOoFC=IsXZ`VjjnR%4.'omQ_Ao_NohFlj336m+&9,QP/9V,=M_HfH9]5aPKj'^Xm*Z<Z:9l9/OLP_i37-<4_uI+BDWbtc_pXFZh`a5ZgDAqI+Eak(h3sj%YlD5^^-[#S%jpc.]8(__)-hsme&-gO[_U;WYrh3&KDBV%IrF&$lM=j>hp%/&roS]G^WSn4&$bJCI^$7BSSq3QGIMbY'ArNTn>&M1%PJ0kSdB(FS`FZB/mBK)EL$]ijpgY7Y-%0DMT$:pFZhY]Laii@e*DGm=C`Z:%2RbRTrj#[*Q>Kc'D7,_b_nF1WFQ`V]o_iUsCj-Cg%GN#I?Z]35Im::[e;Yg::k'FZ;YU%9!Oe:OIChGYm-65e>_n@_Eo+K5VDn<4$>@-(5rK"XPmdKQ:fD(U.KU>_Ij_X:#0'fGdV&d.X%m?Ure-asQrG&8,B#0XTGlqR6.p?up;+)WCP[=7)A$n&tfhUsliDf+pMjliE2?g[L!D].sbrC+>Z[Pi>APPp.0m`4!8L%d:m]78&e%l:rKI'%^"DK/r](l6!A*K6B\c9t-u]lbcR:D9tS\\1j*5e?/2b2eF#H\XcuPZ?ssofr)a"ZQ%X[g"bPkg"e$>n53sS=`i>mS])fh%=uoVfG(lf$7Ao'h3X+ajED]jTf3ZS_geLA;,:o\`rV:PFP8=1?B1&M.:S;i`TR=+=6[<H"+7XgIIrtT"prV?)02=P4;L%^S%*Lib%$%J)?^iZZRfSKi+MLXo)a]HLnf.i2ej)!*V@FsMhlWUoe[q<j_1Q:,N[+tYsf(+Q7j>B%u!H@"2p@Oc=O6?7/^=h8nDL^Ns3H:hf%2GVJ$oNV$CY;,rh_7dPXo&b+B6nE8aGM&+E4P82ZK[MOp=`PS@A-BepA6HH7S$3eH?)OuXm_4%gG/g;8IHVCbN9P8mC[IMWDnb+s%FtQ%T"aOk7oHo!&_;0=)>I,!-S*mIs*c+XHN\2emk/47RT_/*3I!L-aV\QrOFIXE"<%;TkH;/58$d6gSQ?VN![>u1R.ep036Q^L7%s4oi6qka'U89p1g,1YDUE,3%or8E=jr`Isa^%^8'QeSQ`HUC!Mro"Au"3&qUaZ&UO*GceLr0(4!fW(jDm?T(bS>]p52LVdb+IbI]%G)n(1:HYtD.E\!H[HW)=Lr&2)m?#RNg>/"7LD(@[&TNE.M3'\_ku:?@$]Aq!k9'H1XZf$ZC\8"V-ETHtl(2i5bfRJfKB8)p^%o:r%SYJ+2hYo:dW*3o>J+OHD0=TAj/pTNqdH(3GPl._uj`t4CnG,7Ko)2.u:g6\k:qT\dSSGF"gk?PcS8ZXG]=Z[UNAq`l`HH`\ER!h(%bIC]YDuXsEm#)$k%mJo(0KS.ZR3U^#EOAb8O)\GaIc6EV#R,f(?;N-%H!Y/;6EN)tR&p6D\MN.@K3EVtZtd@:f8_'cgl?V_FPP/&%H[%N3</BH0-^(9ImWI5AH@jPhl+!Ksrr2]QUFi62LNa,!mB9<pB&IfJ\Kd+Y.C?Rlrmq_iPfp/sllS*\D4-%$/Q;BpPk=k6Kl]p*%QEJ9!(ir6gYpPA/lV,E6RJk#\oI:q!>[+O!Am7c_[^AhU%NJV^BD0&&"ogQ^h]thKbM(7hA[X]-gaS[S54Kn95>4"JoAi2%>,j*8%X0E%1.i(58p-k^^]kJK9K6R(@O16f]Jc-h)c36*95=K/5qu#Xe/Ah7&BDk4"JP/d_G+^+<n)Zj7j.pWEe)MpknGVp9jiJ%>[J',Q%4_TQ4RgUluGl$dO`Q94T0b6l;)NpS=2I7+]#rd'%Yl]V#Bh*'7i.R]3InuEo(;B3D%aNp5Uo-mIp5/`eC[7(cQ+QY0kC%63g>pqX%HZ)?&h#?)PpR)F?IJ@W&CD1aZQke'2['I<M_,$#F)_K+TGFKt-`uid%j#`uh+7?5>6e9h\p>Dn<<p2TY_UkIpIcdIf\XhMjL%F$j%@!2=tCjs=AkCgFfj1\a!oc061-eD3BMPVqX':CKh#j2lU-U(hY@2`*HfD[D6]!td1T*G)W.I/DMc$-X8bn'g/SUZ$4jSNHGB?uWa%MCe\pp2P#MKjV":Z`5uoGs:*@fj4X)IPk>dYEh\J4*oF*7c,*Ja*2_,g^ucJLSQ0+[C1u<IJbrYX>k7a:\R``C@(iMm\@M/5G.q?%FS<>aBscAdBZAG,0(/3'Rr&#W:[+hcT(*#OTC?8/Stip>hu2A[p-/J?N^?\lLDcN.g-*&'h%PFp-=l%gQQOquPNdHQBqKeeIC)`&%/O8Fl-\$T4m7d5OIulp_mS)(#Oei"f\kciG[_?h/9W?4!n+W5]qe)8K?b;)W]iGb@>.HJRAoZA<meq6KLTDpr79:gQAbP@`H[VM+%lk56Lfjp:@0@S%ooIhuS:A=J9dmRa'ro*\YC>Qk!408@=Co"M1<WX8LXkS7?X5D^)*:A3M&BEmrSXqG!p%d`V,$@_>?/+m`pY)iZ%3Ud8,kAB*g8+4SakJ)#7d"'0O:3HecEA65%R*Lb;:;nO$(5'ZV<q;^b_1FI:^:6o+Zp`\&dP%?mbPC9YZ2`dMp\D'P_;eb-R]6T/%G$.V`Q\kP<U_UO)lM5-!(%/LXjdI6Arl?nW7Jh+BcbT8!pm`,JnSOCsg"\SS_.5'i'nQsWeF.Q+i9aK^]<Gt\Ch`<5:_Lt4kUW=W%0+u%5#H5!?8"C970YM:Va:#>o+*i+Zl>,9c00^FoYO,"B[nb<DHgRB,IDEPMSGd`Me*cZEl!rTjfC/7In]9\Kp3"Dk9M:OD7_9F7%Diha.9KHM0[KdV,X-\[cWI<+$5KT17`EmpMTNsYXW7h!6Vs!h2T+,H:IRmnWMl2Vnm=3pH>AK;M,IS^0S'U<S2;;[n`?S%(_fcB*%L@0EfgYFa@_VNiAp_\rRcD<qtD4Weco^i02diIYo^)RVg"9RdV^JTV0.ZPEuhj/LYV%fAY>;'"u5-2Ym)6G7FHMM1J[CZ;/X0la2%g?$AA/q<iY+K)tc`E1r&cg?MVlu2g>Qhf5d%rU9MfA-E$i6:d3dl[$Rl^RT`G59/Lo#%Gbq1BWaY$O3iI-L!sb;VY7Fm@tMIl4.,%I+W7bqXr\8WQU(K?_"^upr>IoY.DZA]6<6-"g1%Z>.OE6Z(LDJDB!f_A+B6@?Z5)9lb"kM<Gqj&X/j"lgT>qGh+%=m4a9%m=ZSX:%hn64;lcS(JDngSIm,+ldI.bDJ^"n/QYO9]nr6*plf=fchn(kKrA)1M'<UFHOq%qpo?FbCHH!B0@\Z!-gU#g[0q4\n76(uj-q>AG7%QYe$M*kH.+$gC,sfm\A<i)TKom`0Bdj.,;$T169\TABKJ/arQ*o$.'0c>gmM?LE2G^:%D+0C%H0r2oq\rN5eZf6=fk^7#$!ps"$C%Q/8]n$.g9uZ92=T04-hE>rp`@2HF"!5.Z5e][EuY?'t*XZh*]ZTD:Fbl0S8C=R"8e=RH+`/!$kdW&/n30KoI4mWbSIlQ=qGGNnX2%V5Nd!PY5Z(W1I@D1=fNNn)Y(((0"J/3W&0^X]p]5rRK^go<7UmV/9S&C@>O.k5<-)jW?ttps!a+;Cd0=rd8X/o.LW_2Rq1Y/[!ps%cKXY<-3'K`qh1u_31SO\T8FSK="^tI(;#3qoZL>1(02?^St8-%Q,](?eP>;BS3-U_6)F>,bFS695$I4MXe52RPs/kOD"jjZ]An><%lL]f/o@:DI=JbW,?iAZ9(V]n5kHRY8^#nb-=D:u4G?2J'nS8'bGbrCFTA@2Q+$:Y4l03Ql?_74@mF@-"8sdi7qc=9"/Egkpk5=TE%2bt7^o[L;Ernat7W7"=kiVi3$V6?q<:-EJFXnJ(+pA;F)h0uJk^:noe=)%J>p#@R%o^830pGtJ9f/IU?Vn6B=d\X;IV]YiN?[Y'.%?-1Xj.t)eZ^:CJrDa(m@\[A*YT.[\kf4Xtc.BTl3!'e'kk0_38b/%bf0A_0VjhaW^]Qs#6mBK8TneXNm\6%jCX@ENjo]hj^([os6%lHr42Xnpk-Q%"5_gANV+FQr-_?QZg[HhfT..fK5'X'^>Np"!fQ5CC.fBro``-<%<jhqgEh@DMrY.GW6F?X=_UoZ>SV^\rE?X%T4Q%rd:sJ*EPkrbHS2)cRtjeED`S,gtV:Hs(]3pVr(aLs)`%+V,qA8$Wh]L\#\VB!NmN7qVd98PtIsP&+4X#c.DR)++>]<d`[8;oCU7n%(OnI#IbX;5NH7&@rP&8Wl1l-!l,Vpan"_u,*^9s9Bm0L<Ka6F+Qfn87^HFrL?B(5Y[A\UX>s@rD9R3hDoUGf1."&AU8>T[#\9k&2%]VfZ'H[9!JrV>CJ\"2Kkq#0;-+5HY"Xei/ng/&K4n#ocmkC.1s]m&,4FM@SD7BQ4YGK\g655>-NflLM?V>8a#YHDoB</^DAbYS+E%mAFSrW>c98PNLZb*tQ)4fN+FMV"=N8g<TGZcfSSos*D:pAb,0U=5SBeqYT7De5u(sS')$EIQ`20:\UKP)>gh4JU:HnS\>!@*VsnP%_E:rT.B@f&GkuimCed4iY_Suim+7eRp%7DPU%bV4re#iUg>Dg02?*9dF/Q`tqSV.X(ArLJjeIUgT%P4coo],sl0R]sbMdEVn)`:O%hqU=V^Ym^6n"*gg?<nTM[=7["O-;E41,<=>mL,N-X2A;fF5KcC\pJM7Y?tR[[IViYht2B*&R2qsl%^qSS$s2]rSYiQQ1F%+nR!Bq%](as=Mtt?^?_9H!:ZUF,hql&Zi:e=CgWoPsAIEtCrdFP+a&tS)lg(18Q-Z@0jkGn0qt\Z9[^q6$^]"*GjPe1`diYn8Vls(o(6-u5%a!^Tk:-Y;/J,R[kr8IQl%o88cHM3-_2I9ZKp#PGD?g%#"DnfL;Rt(%cKa[PMo'lD?p;<fch;5#9#=<*Qlg=EFWLqMo)?'6tfBX5*%Sc.j'YPd]o`7j*e>eK^R&!s0`l^N5;^Y6"1h]<0)S'?R=IUhX(*rPkN`L^\lf[DC"=e*(qkY$Ejb+7][S@\:VQhF_\G2q\`$U7oZ%Uq]'fpZK\uX,l,GGG-*C<q=qg)nR3Hf"Cd4l\dW-HX-$0DkEdh*qEfr?V0_#Z>.]jgUse7Z+]+e^=thqY'&jgr,d,]`j;`Bf_Ju8%4b@UDa[uD[].K)7[4e,$9[E[Eg>_+]`Kd%/pWM*@Q+D=ObGP^t/^Lf-Un.G,\$=X^V6>A/U=/q:_W"2Vhk.Zl8oqRL,h:HVcMUui%^-SUi\%2\>F'<;Jieqo'^\d/=;X)33F(\sYD(T+4IK(QngDaO(D0t<.(9_'uY4VA"pTChQ]@HK,@6paWCU/@MX=^Go]!,)DNSes3%(\X,4,RZ-!qoJMiLA+<A<,NN.^-4[2RoOs7]k_T[r&:1&-\iWg.eiSZXLIp?PW\p:`i0W9RifBCGW(["e7Xu2^OH'&DsOi=?b(.O%p?qnn=oIaF<p9PWO9Yt7CHMOpe*$*85JEkAI-hR>%I8f5?!1EXT'iLhk?@D#rhgKJp[n:K[\;;sDsgo`GhL[e[FO0Kp0i.-/H'S.%._*u,F/cUGD9l"%r2&/_h4m<IY_ZcWk0:MNP<W6m)"64Za@Ze(481goBQm0pd5K[+)pY&:5A2cn*ZEb<Vq-J^QZ'%g&!?re`r5o2%ce<l?UQb$5'%b2$AT=L=H]@;Jl.Y9flW<il),JZ30UK:Kg;<5]m*`#d_rCums*1-La[c4%[=>PEf"\&fBb1$#l&U&.Ah_M;rq3=Y%O,odF/!"hdd!LT"fW^-JCVRN(oO+5;rpIPRC&@HmK67='=,Rmldb,9bpGc:Ch>,rX4R("GlcM[J?!4dgqSi78T/?+s`r0(Gao?VH%fCk7HpSFVhX!`4"?eO\%T"AoAp<j;LpKc1QFS=A?puSZnqt'f8A!)f_i;H1/oMRTY/+:2tH>mDA=LMS15CQ4iY(O!k9/#L!@q'fT%Y.V9KC\\cR5$Io\Y'!Mp)<s.nNZ[P-ZA02Q`6G/t^Q6'#f3"qP(XI*)`l70-.sp)^ig:3-O>(n9gfa&9(u'e9Fm`kfQHs^BlKL.]%]`7,<*Z!3Ps1Nu/GQ#Cn(7in2fqQ$?XQ7Pp0O%]Zklf5M=gblEUP$7jQL4D?h=U@)mjHb38+/KFajYT;BYdq[\U-dEd(/^/j3(m`%5<UoqFAqI"./fi;OHnHCCL_\eZ!Y"!Y'ns9I&#:G?HLfK?dQ+Fp[%UgRW$5.H0+aRO]tq;8ijDVRigt0hNYBSIm6.qet,k5go(&%%Zh*o,*)+E/)*;VRj*k(0-HFQ_fh\-qO7hJ0hk%j^IbXY*;b%?6p$^V>9kmEFEE:*QSD[#kf(\.IU*b;`HiKlt\F<+g6MBg*q'5A+%SJaQX8pBk%S(gf*@jV-gAfKp2GE6Xndb0g>47:pE<4b1LEFuXmc$t$ej/q`*N*'00rkf?69!hA81"C+)6Ha9Hq"eb"iVJ)5b2#k.%*QPUoStF_XE:XpgO^)S?jk0G8$a8/TB*T7>n[lYjr_*/2m)o&5ZC_YG5Pg%gZ<21'1O8K_ff1nd'*%UO3Vg"b*?2[r%S#X\ZgEsV%&Jk$#k'e!OMtY=#VWk$,?EYMm;]9MqEDk^?%I)b%s43PW\*_QS]TLs<eA]f[lLp9WMbe\`Mb2Asg`7K"?a$eur-><r^2W8ndjeIm%e9EAWhYWof4r.srp)/%"@?[#&ISus?V?!hXQ>F+h*e#F:d.Zq`VnVmAp@%>5h`X/LaHoX]k][Nr?/\3JN6Y-]eb*K<msji!B2Q&U%no^[EORqRI?0@q@q/6f"4+I,"$.e:fnM>FQi1sS)iNl$]8MjQ.*t6_,.PcIdER<Iu,ffhlLF7=h+0SuH[_KWpBh494-+*F-090qp%_Ya3q6]uq=SJ27J4c3%.P5R;qhm&>/>trbQ\8Y@=#"ega6g3:@Z2?Q1)r'8]g&B#6QHh,08Y!.Th]A@S8%3T!Q7i33q7ScP^apH@%Y3#'K;fj.?oJQ%"/CN-l=)oKD4.:ol<LR0V?2#iIW.1*#%fXo0'3qDW%^(;*k&68#mUO\:`AX^UDShsLgO%F5#4q7em#qprled,F%rUQn:#6'U)If6lWr2\I#s/n7@s8)W!q$B*hFS&1Te3!=%Q2oQaeCN&0n,D1Z*3Cbs)BO#/m]nZ1eYes*G*eKk=SJc+Gi<\pJ"uD]%O"ZOMG=V,5mRhANn3=?WORi?bYKm<OkXkGI`9c2Lp5?#WU\1b-bl(J.]Y\^US&9`c<dE8V3:[\$hsl**&'7U\9sfa5T7=KUREM)6%c9@B4T>Kb)cb8DQ5JjL;+oJ-'Zst3='D]UBs%,ehcXgNm4*'f*q1#cbpO3jfdOonN^'><6@#SsAQGa3ZA3>NR#R1J;%$Sa:cMP<T%S88.(:R/NA/,&Q)g&&83G.ChZ:m.iM8r!UWW3=[/51=@rdtEOT^CQjW9)MpsS"u[c-easp-eb?7:UFgA8_tCVE2%c-5AI;A0#:=s%CqA#lgm%sn8CX#0?;fM!.`0*`bO5=!P>8JPm/9G4T4jFm$ad8<M>$.HCp.O8ePt#N-2$^'UM[6]b#Dp;?>mZ/<`:m>T':4"N7,k7%dZma6!PWMb`2RONj21khX/D#V.al4/np*5C*O76u^Xt91)dDBb`SR55bjKm^h"tN%1]MU_X'8_2>!O6tK8j:ebhRA2"hB>5PK-ST%=kX#\X\=r^a"?b$gR5csVMaFJXU/ZW6.Bi(?$KDSMuISgA/Y3Wa.tB&i\"J2j!,"Kc3;djA+OWVgt322EU$i^dk#NL94KS9H%k+G%>lGLcZ8eX;nJ6JWN-sMu7IJ$hDQtRQjSMNNXK9Z`B@(KTq^sEIbj4<(RUpBSOh6][_U!CLTmUFqpZ56>82U1@PO?<UY,n1l3]E"s%Z9[j0bGjc?D^r"BB-S1f/Bj5)#=uGf9[8V,g5lC^h;"6eLFUM1C\op]Bl3'+nnC*a,C2CiT?jg7k,goDfXLTNVO[5Kh<@D@1jP9?%-P+j9,8\h[KPP:?lErG`:S)ke^%jQR8Xn_M2I54t)tg&"2O+A&=4Y<n4FKFu2]CuP[Zd3W3dS25l`uWFL)TqQR#1"OfFU/jRUr/,%P/PI*pY2*q9bB+'[^Kg.he%lk%oqSFm/`cH"UiZ/>j[M%(f2S6YZ(=Mn("sO:B,Jm*'=&DIh*t`DYMdqgjCt.Jo5/eBO^1;8'm5a%$lq*XDKZ.'CTkq%d*7TDRh[Nb8.=>@#eGJli8J20Ak14MX;t"Dh<YEYO_DQua3`(kTNbP\RM`Wh&TmO13.`!Yg!:i<km1b^Ak14u%.,6R4FL*4U6lqg>6e?NQSfV>6AWjD`dg(>J,g`Bk$[$/%dX2"lK6`L3kMMdN&2.$TI7nn;hZ%;M8*Fof2p]tO7=<4Tg\C3/RdOmu%cod:Xfo19HSJ`7Q[P7bMl.buF1j4',nNhbt+#u9-Hs?49bMYr61$6^Kde(W$3AB*E/rbY1&N[L2d+kk3B('QDXa@cFMZlp/i!R>J%J!r17bA0UXRq(@'M8;T<%;i!+hKn#%%<h&a67rHNQMY5r`4,r^9fCabC.WK!h%&NRdQ]>T`6>IOeuIt>22%E5UD`j`?a-fL$Wbh]%Df#%t2V1H@nd1G>"4+(#a.LY#EN#,YQ!Os<Ym%g)299m5&6"GG)]HRQ?amd6ad-5SA#%E(I,JsR*%#rX@o<<Si@J$uj7L.d8Prmb%<L=[0pAFf(EFP%i^=fIn#5d)e]eS'T\G!Ju5ca.CBc"Kj]KN)a1IUJ!#^l'iF<C:$km"7s3]YLkIXsJm:U>*OS6-noDf/7mFCsaU%n4I1$5912GFdA*QOXZ2Ff"Y4NS?WlO[$HDXCq;'+iBbVCG1[\u"2Ef&bgG\PKl84,fHCuc^MhC,@$IcW't9\F0/n2\9P^:_E2H)g%riZ'h3P51c`KLCgR$Ai;hAEU]6eRrl,Jm^=49!\a9i)\X7'3<:?FuJo1+.4Cg`]a4gbLWjkF!CN2Lk2AT8r._`Y#YO3Z1q(KmD-%%96.R'469&'m:;S(C&[o$AudRThO55qb7R)t@sptFc_j3>M_S5284kZ?j<gBXdj(S6Xh^XkZ.u1`Ts-s9O%l1Cn#(qYf@aSUVcMr%%C?Rd>>&jBi:a561Z,"#n\>`aPM+=F^[Y59\)-sP+h.!]7m"QZ=o=WNW"NAXLdV/'/Mu*.V&OaX19OHrGF@-V-Mu(`hjh9/]%mXZ/%)rDXCiT'<:&=J!L!Ia.\njAmsaE68Z_o'h:7q<r7$`:+_FV(_-C+LS%E:J43+>Ql7I[ZXLT(W8=F7S*CK/e.DQc,^B@tEe**ZU[<%2a0W3rc70M@M1=Xd^)(@L+!t!_VI3j:^9@Wj>ku0Ob\U`SR5aZ8T*U<q/U,0lb_HHYn>TAC!hP(ip%<NAXqtXH=s1khX%b`mZ*bS%.6QKR"Mo60P>p)&4NpeYJ,.$^&\%F,4$D=CM_DZ,\bSCL+s)dC@HPAb9?4pj-ND`XnSj]*TT;,TDCH+H_=;Jc4B.@i*Y)iRdQ;DS%4P[l6TMtdk%iZ$<l4$b;In(Fg2^.W<20Qq.E!*BK*'l\l[4\j[h\!oH:!gkVQur[+3NRdL,[Tj6C^(gE'024bGe.]O`$]TL9B'o;%s3^DrolLHKoRrahc7I<"_%p?lB1.#OUc5D<L3AlBZ0,0-p#a@[nFKG_7l(1N;1E63q_P_?"B-@qYg!Zrl#";GqTn4nY9Sm[](^Va%H%E[dp3?GZR<"<^h1jNfll@:?F@7%no6gbrE::u4A-5:_ZaSgHm1o">Ymp#"ng7Tsf+#2Fh4?ejS(:OtCMKrC@V/q)[(<6AClL9g%N=cSWBQHW,=UK9dOo",e,#Vcq4i3$)gt:"CUqZVM";.X0\3Gk,eCV`j4Zg9@@1fKLSYaWV.UHpf<fsr+RA`;$)Nd'C%<S]b:\O+l%#+:T1F\sM2b,BCLo\$KdGjb3oKc#P[8LWBDF6lFbiCG#Zld=0'j<6kKVQJ%hL;GNr>7M-s>>24_Cae(0%\d#0s%bu?-DCi;*XXh8%*uh/Njnj,?;)".tGt-^jha(_VN:<V5f\V`:<24uM![#b64ZEF,VT/IhaHqushL+W:).(Osd#UZRg"IKX_O9Ao5Z)u?(g[**!Q!#*%>oLcr'fnD7H4U5C!EY8MaNd6H6\3JNfCQboeS!JU5J4B%rQ=Q9K9tb.ScAZRHbH_nF(P7BPH-(fh0sVAil8mnc[Yq8UWGaV\=]BU%[<)<2MsG<+W=-bMZ:kP6\&+=N:C)-UHa/UMU4=7d&kfI`M8su;C\XnG!d<PXcL\_`_/<&H7\*Cf5!:.-%V<&GI'bn"7CE/_(@3q,%_X<>Qr_Y/G4nYRL<;Z,uYup>j#eQ4,\,5#]+74i6U""2]dEu>\.ZjI7>(iGNT+PLUr;,`]W?5-ln,.3Ub"&EPhjV0(p!7?gDQdXU%]:Ec8J+Ua5'@47NNn*/o]D(ctYGZg@[i*YApWhfu+3j!$[;1i+pK.#5-S-Z18N"+%B?kE+HHtrWOlpu(N'=6?4EKr]J/1)hIK"\t%]/oPNpY;\ig1a-V-=!K2Z[D3(]%i<<Y^'FNHJ_26Fb#+nYgB!5,?Zmi.Jbn`Q2$`meauW(bjd'OmH;l3Y=DVbDGhLcM)eS%W[,%r%$9+:Cm*O.AT3'UnS35eZ^V6+)jQ?71*DmEZWT0IGpMHS,mbBG>XYheWdKd9[p2[,Q^4+l,rUP5?^ALRjY/:UnbsQdnO/=ui%^T7o%h'>.V6fF%TRVl"Sh;nJfb='fR_?;7QQR/Ek-H4Cb&c&qe)1/B]rLp"N7]'`R[ebfSkpA8F2ab['d<(S:qI)>R,11Lrlnm6uGsp&%%P@EcG/0dXr9fEAkl0!a^MJ0Rm=F6sZ*`Y&QN'(03(elq<QEK[<H5+bKP:g^RrfK\!:$U/?B&i!JkpEOib1]2Al%!HY8aA=_)eu?c%]()Z[eeC;91u39,ngL9t(7MKq8(3GV7Cgp.3h#K@1U^CBh'<GFjiF4]-8g>+l6D:cS(,6rO[mkpZBgIF^b6^&2^t&1<-qn7RVl$u%=PklS'[_#d@d-ANQfY",-;?t5>1Sg(dg_,o3eD%V8[3@nlL?I0!+%d9o`,?W8:@bXkD0rW"2p4Zbkm(I*5_iM#+lY^>o\"#\k-1r%.:!pn?JS<>@b<ffX_ca%dWUpGj2>jF&1iR@^t%mZJATg7kK085n'[l(?r2!VL%o@[Qe8q1epr#AU%:+_O^clJ1Lm$5%Ge_28?TZr%1r8n`nTOq)R,DR>".?3-Z0?u1(5Q+_>ir2]kA$AT^3H'XkpO^B!VYKGAaX.uEX`DP)jD"`[XYRs\m'2?[t!HV>;j!&5af5-LuRg@%bPb+''PA,k)\T3Y1TS`*M1&UH%sTQRA1p.#3&,-k$g"qqEp(O'/2!N@0IZ^=^5Gl1g:>[*a7=Vg1WU@Wo4RAN3]W:>::YuPr-:g1%q2ZY[DQ`Hsb+K$XktW3cUXEgbRNler]/(2u)s--('t/'NNlMghs#B\GS"(F4R_=Kne[>rb:gqimlJ^-96TmP(DlAEn]qORJ2W+No%FS!b6HsC%4'S9A_V?:1.>HFC5?$SRb$10:U"4>94ff^obGeRf,)OhgN4/2lSBOG\HU:Ao;Dgsf4qj&:p'p'?gq7_rD2dPRD`loRO%nETG13gK`Y4#8XW"7!SF&0aYK>9EO2cEttC9li/]WBSgm()#G9<6@;.$ANY(*a-GDj3LX+)&Cp&hqekn1c.Gfn`M^OMA&)3=c*`$%X[YC1`H+eR@l9RHpopM3Xcp8&+eFf*1-:S+5mo?f?>%7Z),>UN)jrI#)_P.LY)BKR>iY6KgMj72h;R[#02gbHL,=o/G=N8@G]i&&%.cnq.5(bBI*D'MaZl4,rO(r-=n$0Bu+b_6ZY&H=thWrj7$u:<G]:iBPa[tSb!kZBVA%M@p4L"PPnQ0d@@980gf"O?IAg1b>5RHgH%4s!!tm>J03U>$L/F2dMtMIoT*&Wtg.K"tQ)V)UN\f#?d\1HdBrm93HMKU`t#oOOZjp'EhW9A_5qkPF=oD>83e>cXn%2Ee<=:CJ'O%`:W>&7+^_]@WTGS`Zi9SWU86I9NBl?0("TtmE2>Z@-Sn$9WnpqFSE]=Pn`FB1l/-5.6N&ujV`J/rErr&0]\&>XeB/sK*9)_Xj%Ho%OM8$,2<QS0-lDAH'b'&FZ"T*^Q)FXUc."F%B0Bm@T,J;"7kGWoZ/HQ>XjMAa!1B:E#YlF1L)KU?Qtoro=^,k@EfY.QiQ<)RofW7B%gRFU>C*`(i<fCh'He%i_=.>Df=2N2<m2R*Ne8$%up\Vq6\$C2Mg%E&9Y<KRAE9Zr<k4dUl=17gHG-5Z=+ZI]%?cp?op7^A,6'k(+%YW_jRiVB9o\<SoY:4#1"d+s=qpM3gp`PZQj]ROj'&>&pbbh=_j51aFf5@A8Qm,,;4fACIArM[=,qiqDM5.\&>FkGt-Z-eX33NLB[%Au\&KNtOPLG&H>EKjBWQ\oU[Ig&61gm,.?^;a]"DIf-/m#3"Y]_Z^#1o>dlngdi:=89MWF8>"4cr;1/R)!kr&hrimHTDHs-G2N8i%G1oID:&8P&q\JWaGWKu!e[<$8DbTt?]\+fA3;V#-ph4dpT>9$B%cA]@_E9ccqNIQKH0TJ1CL+[Q@WtY,DZ)a`-eIEs1I:4U)u'2i%%qE#>B&^aq-J`jOga4s>]A,plZ_'DlocKZG2a>(2[k!gH#g)_#Up!.t`"<P:3jk&"bd>/43ld9%[HdS<WK'u,%!DW6FT9jh$eg--%RoGg;q:3GhX(DKbNFnbEHrSf^%o)SH*Q1aG8!rnP^-,O6ES6l6V*8ZifIqk)ICPUZnDm`GJCAMt"o$1K5HRT6T5ic@rc,@=H-CNH%GIFN<3B<7<fQ$TTg/.D&$k*nsj,PC#gbi:6,Dns:H0km=4F(TnQH.$P?9<bONHrbrRB.4KCOJ`aH.7'1g/0,hV&7"AnR?RI(2@Zs%Qdu^qCrC&KNVP[T2>d7Fmd)Y=4^m37+%N.P%tK9;K#-':qTQ3%@7^4*hIQRG4k\@2a::!aX/l^b6hD?(DTpG<0Ii,We\pA%QuP,=%(.]4Uc```l30<LgBV'ioFVg(CRO>c@d+HdCnbAGLkMK"YF"fitYIcXRVmJi?@/mm3(s4k%kA#;ki)8mmMmGBcrpf-50uN%ROaDSW%`jQ-EWukV/UTqAKIi"NX\b1B*&(2HZN7jtr0fQMFZ#JZAl*/nqLPZ'P)?Vtad=$fNYlUk;af7(tM7I'8K44gpoa`,J34aRf@K7nh%eO)_*cApj#Z\ohZ$?1YuVJ;LYI^%:%BUOa(4Ca/+!phM\N#9@8(osXbYtRU"8k2'5']AU9os'YlHR8E!CfDY-e&"QL(95H!kb<J'%C0CS?MXjJ.'op!Vhu&@J7o>M3FlZIk1J^r-o"gL!=9Z?)']kg;_B"&%^7"YVO/sbed/'##']nYS$Il%\pL6ammQDI&)EajrhbiHh%U:PeD'$59,\Y5=ildm64BOK:4]PT%Iop^pJ9o-&8<*d6NXrOG+GM(\IUNQNIUI%m:nHJ7T9j&X=l8L:Re=q*a#''4^Fo>p!L/c7E%;K_pB6uj;6>sFA1RKhr`pWJ_BrFQRW]RJu$lMAc.l?B06+;=&:boY5B&(SYbqFt4lficQ1;:f`pa4Z\^d/DW8)LaM#po'APQE'70%qkA_.k6UALc*$?@?j<X1Fo>pQ\l687(U!'_a_RoWlF1ju^*AGZ+(!Q;Ft6\n,H0oegRqGiF>$YGDg((*KS\,Feb,DJ:aoEC7]J6a%\usr#)dH\!YP9Oe3]ojrqTV4J<^uM[_q+LMBW#Q5#hG0)YNn.%iOU+nHMG(#^%e_7Wd\H'Xq"UdDtX="MJUJeop`MD*YBbA7:![]%f&6etnL]mBUL0(#q7)4%<W*\ok*TE*DmkLI]!q'9Fo>oFnf788HsOM?<W.q).W(c,`ld#_eFf;JD]\Qq3,Dm8fiA!:W5lAtPK'\M%HqPj9Brh(N8Njeu](CO>%HDU0(+I3]El'A/f5E4mU0#mKN>Pj)Y$]@Y'<CsM-7WkP0kVts/QgVCQC.:'CY&6@UorTP`4aI"lSgB_%FkO?TD(>^(UE?YAhdScN'C,E74rD#9lIW(t>[*I/Nd7'neSdpCZ\@]@9f^6^$lHUq%U%D%[\M:gVKBnjIac0ogq4LD*qOLAoWVW3%FBuZ#oZG)&p$3W'@o`JnnK+dtqT\/YQ%:(H]XiQu"iJoS\7Am[f`AA6NP&M%^Y)Wc-HK\PWp;T:#\"\6.-gX<Q!ouZldoLcdAhXO%UMC[ElSn]]QkRG!\?=`Ub<[C"10&4O>n=Pb7[NpW)#*eBaX^puVYAhmmoRjgXI)qqo5)JEIb<Z$3TeWdf!jN6eD'\p5Lto4%d(2B%#f6^:#ZRnAmSOK=M?l:eqYBuKA"25NIbh<Al"#'QpY3N8q0)SdRD07RCi?JIqoM%teR/$p`j^G8D1DQTqUEc60qGlMr8b3Ea)6<4%5Bcl!Dqi>,?8gtA5(%D1lIu,2%sLg_qrc/bb$+CUpZnmLrpB.2QeqafpRaP9*i=&R`QbTI+6kM'rd+@cK7?*J]!;5"O2nGAXIjt7%C1h&T^HMVS]oVnHIfAZV`j8=q&(Ven5':gP:EDUsq;(6$20JJ^T@]_&mQ]Q!)o%uYnFbk_?/#0kT<94T>Wd61fU4sAr-HRl\bBOm%kC%PG>uqgqW9_2_\ZTh?pj?0!\9I\>K7eY,DBA`NkJF3:Vp=.I6N]P"Od6ft?J@F]mlmWq3JOasFmX0nFn"eegF$Z9hKq3O5a$7U%I-H?'hlf5UIX1\aq9.sq]+U318+>#nYJ3f'X:O#Jr9)JL/12NEqUF:`p>kY4NCdXAOoG,slf=J+et1__)1VX)AaTK7)n/WAq=)s\%Q[\e=fk?"*o.n"h[Ma7<qCf1o`q=8jYM\%rG4=rBR?K(Mo='+TgcO`gVk&/2r42NpLTQ_!+aE=<DJ7kn;pWA#E,$[Tc=c1?4h:.V%nYPXAB<H+tpLa<F208@eVYti<dU/&a^O,cgoB4qhjNh2GSkf:YG3=q@-Z3Chk/uQ#2;ZogWa*((j>?gWHK4;D[3+!rhn4))?[I(d%Q^+tLIp[,0>+AC?p>:?oCA[8m:%RZ4gTtYlp")pLj%kh.`$W0g0?j$[hqO'MNc1WEEjhT""_C5AHaf#Bo8HuOS:<]2JR=PIl*mja%E!bp%at:=hMkB@X?[hhBqQ';PGLTtQ0E$=`kM9VQ\_hVrNh07CrbVURVZ+KYg7.dHj>gKDl&gGLrb8G4_r'YWCB's,5AZq(ohYD$%h0"ZUhq1*k\ts9%iKZ9Lr5Qp^rUs$V<BE.RS5Vi1Q7Kf/<>;\0;;Z25%K1%Om5H]Mg9r)>n0;kcBZecn@'dFO:1e)u:%_p9D"0mi%bmq/Q5Tt!WhS4=H^Ikj0c^npN.;F4uqSr64&)Z.>fAFp6Y@bI.f1sNX>NIAMrFAmi_o&ltB@H_#90]Jt-Yo#!iL$]TNbGU@>%__r%H_f&SUM3b/c0F[0hgX7'o^b@iiK:a!3W/F@2!\UPbkeZ$a+TZNSt!nF5OX'5I-8V85<D=jlTa7?09bndCq"NKlHSoG'0]hg2clX-%d_#U`mbdX2.<G(1&!)ZGIlr4;D/ZSZ^OA%`#L^jt7EqG(Z;qtGmJ`Vt!)Umd4p&_6!:PBY5Q,X"de:.'(NBderUKa`]nm!08GufP%`S2J;29AA\3a8[\k&]lIG3qbEkjd9;S^23$)P#*f^A(0Ih;5[8putMAaqs'bm.G(WfgJ9Qr+e:0HiNd/LCPo"G*C6_=cL)g&St/s%`Nsru5<`I5I<RpR_M@;]O3Tn\#`du0iIu5Bq[`WkT0;kn2XTPtrn^H.$1kj:d<>>Hgo4MgNu)tYrg_8[oqRFcnm/c5Xo+YM(\p2'%&0B`aq=FRH[omnPE^_%[EGh<_k>u=g]-5KqAB)tT*hA=:IK.#?@TAmCJCHp/Qp*/7pNUL3mXt,cs$??F@:f-"\DQ`B:XH&om/so?%cQ?uQ!Y64Ejl41XJQjeQDUfXIm^ijf?C`5]j57S7q!t@"2U3MkM+igl=S2FRRCQU/D]Bo"bIt'0d?o,7nY=^Sc(Als+s"o7a4&KE%jn&65?'DIS$i)nIHZOggg1k?V/M/X.fnWp+](gaNJ/M(PhKi5IHl4f)4oAH')P!]Mo@He5_s'*-Is[:q`8)8)G!Np=%*5RNJbmGV%g7bkY7F52pUHb7[1$HNM]0-2dViS,9=4ZiId`'Hq[Z:C^#_E6%,BW/,s,>g9XRuoI6R]WeL1e_bHg`7ghu(jndGnMu$bF6:Qek[R%s(A>\G^a&X?jcH26fkA\8Qakqp@`'cKWWMU,e1&F,eU4V_#4/(SUtMI'U5+,`KGK)qh;6F-K4VNGIpGNcTgVQl5<lU[&P.;NgEER%ZR0+]j8Pss5&Xe<4ug'XpO!f">l"I8%]oWh=>pQ,gpcH2[?L*%"s7f=CS&K]dhq<uo@UDs@%O"B`2j.aImsN^^Ds\=]eA3%R(XTq%FW#&U`RcDkn`lc_@/@$rfu0@u6\cgB\At(`pO1.lr:=EOV2AS>S>e[l>F[3jW:blAO$=Y*GF&O-5#5o9O(EPL0>8ua_VBVujcCCl%)Y`,/9^Ta?g9>"uq_iXUcCCsS\@D/'F3cU^iVl&71=c?t5@ujiH[fW@T9%6hb*c>f_=@6+FF,+A-Ig:Ip\*o#pKk5>ZWHg#?2rqs%^HV4h0C@!KR`FJ]*&'*on#!;W5T\\WkM($8ZhJqFl;g#*Z\_IBQJ&F>NIGi&6_i7g+3/$gJU)(_<dF<!YWKQUnBXD@@u"m[rK--2%GpC*"oR3,JT,[S%A(_fHn'0J\f4QI+oKMd4/'HQ]r6<\1?b+S1n&-EUHM@A9KOiZ6bV(K3lLi8[03EK`FafBO@=kh:iG=BP<YWM2%-IL^ep!0&)U"YSkLucsQB:r[sNK]M-h`NF(mVJ#YG&s^4XjT7GL$XE7@qe%$LO+=DoXXOjF(`'K!95PY\9,1VK/n'opHn\nor[Ki%J,FP:WVg1+eR'3A#be-F?bUMoURSmlb;ZSBG(7RHpaDb&2g2Z!'>JN_+odqeYU@o?bYL/=)/;6Ke$$M6C#]-;#!HubrtFsOIK.l1%dI)IR&bYDfmM6kc+*a4lqu1Mk`+GS?GtYn92=MbLEQ2>_4j1H>_=a!rlNJfMKsf-3g!N%-8,)Fgi@FUo[.3='0A$6Xq5:cPn&gE1%,1\e*<1L%pU8aEc&I[fYbrdr^g\0XONlCOJ2u?-gbr1X.TA-pSkbk'Qh"`>Qq/Z<*bFb@;gF%((q3dQN"78>O\&H4#b@lBKlV&\M%S)'*A?>%N4.uWq9IKTRpQ;Y,lo1uQN56eJ[e,SnGs)d@j]h'p)?=p3EDK0#TgZSWH.(oe>3HI3P'&Anbs8HY>Of.Y,b*ICBfCJn1%XmLV!huAQ/-0r2#$H05m.R15J$#^HLYmetj)G=T1k;MtWPQ+qH/_BElr6Afkqi4?''MPh:D]&U:TCFh0loK;'KsGl*&$XW[)[J'q%IA>^P0Zp^`CL<m\GulaF_Z95J?MsNZrKRo65@)lR^[.o"[t"4Tng!mN[4>Ui@hQ,`NUpf*q!N%XJEu_#s*J0#`9:9tO(!2.[iZ^K%*S`aOp[<SrXe&hoH"HmD/Zg+CHMdO7_7Op+^\e&F?i@Y;j5[aIhcJ.+DI7k&F6cm!=5WCpIf"!t)(PQVTi/,jlb^2URb?n;W[r>T%l<ieqqjSs^49,0B?Y]$r`ULAtf'U`RA5^S@^p/k,msd@+IeQu+G4qPXo:Q$[C[9WmO)khmSc/6GeRP*6=-GN#]nqKsC*u,Z5!JjT%o?Z`p_\9*-:-]^NS:>VUm$G>n0AT4W0#X6o4P@=Fq3cSWmGPr>KaaTX`o,nq2]qIbWE(bqd$[,$BAGS/i4l21c9?]&/U.39dpo:7%?QZ39h55[N5.5aihTqtrl/f2CIm70t[e]1(Mdm_'>D]Mr[@oNZ608uoWtrILB_<1TWtrILl?d1-?+'H%Q+sWo?+'H%eU">NE*"W?%;or,'>q34gdk6mdQdj13iEI:N5@mS2GXF'(5HV"]]V.AZHf$n3^Q[9XD#88U[QQN3mJV4_kJQXCSSkq$*4o!ns5pSmlPG&CYjG5H%DL:N]I,=C1H0rR^=>\@2q%`kG0CmKUY6:flOb(?>->8cilDsC*YF/amCj&,jhu3;0li]9!=k<B6e5uR:s4R:n##97)d]l$T3k;SN%]O^3oT>b>Xs82Hc(12IhSisO`F,rK[o<m>:*5M,sh7Zb2*V'a>iK9L*/qin8pHfdo]lW017d9K7ZZ:+NdT[A9RbQqAgf:I.6e=6<%.pj5R;rjG<%*$?9+:/<,0%W&'$r_>i)ct&7)iJpElIQRtLt9[`0E$]@TPn&eX:5:/n]lr-iRkF(Vd"-%g\m6=TKSjVZ/ok0/n"SP%cY(7W+Ig,h0X*R.p2&%Xd[W;*G3.f8d_PiX,7W"$Y&%06kj)#_kg$%QRu_GtP4H']^$t5(Uc;hF$fK>tHi1:up("P2^%Z69ZVFD7%De><,N49#OJCB@g*anRNkD#801RF]'H!Lgi?n0"L8'MPi5p"JP^qNq:94I@9%TG,(D0R/;PY&Aq2gX`'s"%+,[_!u]hRp&9%jY'i%:7aKQ(XKep<$pSJ>2T7^3ReIkCk7csiV\(r@29qi4EpgPB7X2g)dnI?i<'G#3)sQ&QD63n2'^AQAC5sTHD)\*)F.<9?3A9J^-E?:%&Suhbbh`l<[8b!\Q5Bff@ZNH%Z7BQGJbg+>%V(+*h_N)oFDcH*=c`-:%;=b_-+/h[FJJs.-U7:Ml",#sBrL@()h>><AeXG+RH=:L%ZaN^nnOAra\/P51m`*o\I99XAd>LM@Eu@'A55R)h96KsiKnkeeRA!k7H[i,R00<q:<6i)G2G`2XB].Y8)`OsBVe'q$/EgHA-aR3g%/l,gR:Nt-I5K9>gF1]K=PaTM(-Srp^@`r8f-K`=kXWd!lI<BK+m5@$I44N9Fpi:8nO\t`&BG3=#?J8_#(cOCWX28A%4#G"l:CliF%nCVD-hRm)tDTBNfU9!CWDWKbNm%4]UbMC6cJ+NTh;EK?BfbrVK")h^p8U5a<>hRT8n7!IU4fp["#HFK&pTj"u^OBq*UfVi]>(&Br%D]`*A/b%&W31%%aT4it.lW![OT8'Km\lRq+7ZLsWr7U)?HKFC4Ed$3j.PG,cDAC:IIl-%MY?IT?^$h!43dTZ9W;j*6_(MNcrB%D#%Bg,)F[I7q`J,$=u3Q[;[G_B/SXo2aJ4?D<pa564\a6(:4FTfCi"[.FFVIJXJmkNhd]:-.QRhpRL?Q[d7^\N5/B(gd(VO87H[2-cg%^V\'7L"M<.ik`'JY$Sb0e+Q%qh1+o"bu--Y?VUUNTh7@]!r6Xn@[c2TBeeoi0Du;-Q*d@E^]/K=_q*^X0&PRdC\R+b>K7d[:d]I'%T_1jmOXk&Bk4N(bE-ATOkf=.@pgEiD#P\)`pJ8N8n]/!2pZ7/p:B#V-g"ZB,[K!BkmR>sm(<G6WBa]:dmV:Y/MkTf&I^1C4WXj::%G^-N"f`"H[qop4YE';SPQ[FC8MU14c-PeqUOV>J(VLGE4D?%O,ipu*4T7l7n]fX,)dR$I^(V#0_HDnb6r5l@uJm=GD!-Iii6Ru;W%#C>*TWS?S#k49$u[!"BFJoe0J-p$^/lg7h)\EBtQP&I$gm,;k3MB@-e;8+@+([rs>Dd+I-.n6PB]mT\s*N$N[ad\B3QG!5ueuBbC%q1YD6mm"$R@`2chfGh!?D8.CW]5_NeY+rrjptPh^Y`cP`bRLbYI<o+e)HPG?1?IK,mm"P5"9-i9GCTYiC%q<#^,oHEX8H=is%EBH%[&Qi*2;[M'4Ag=[XIR;:X*T2:pX@:=X6n(8hlm$ks8Cj$T3`W;n*2nW4oKNtdB0IMk>qE3=8COA=&8#9W)rfZr24\CDnO4UI'o\L%0B`?urL]>s.qa=47$W8"Nndi9dZ*uO9"L6/qqq=pmJOkORIi_EDY;W3kC9G\\(&95.jh&Dj/lOn_/:P8m-;WKf#4\(o8%R*>1h7M%X:c[6+>d<R7(o&h\#!?:*G'`>7'gHh$M@>0.jet#Vj\_Mj0q9'IELH.DTa?`9W$oQPLH[1CUT0X-F[p&Zt`L9ptS+1T\<!EI:>PB%@)rd6a`Pj^Ygmuhd#8Gues-*6[1-Fm[&R&7'Dc/!YE^o)BVeCu4pC4Vg1m]]1taH4W%Hb+]*aG;SKLO>>QdKng^+qlQIe$&Nl%+.%rTIq,TJaPF]]gBqKbdYYUU1_6^q7b$]UCS;2a+Y$pkF*W[Xr488'0X^C+Gb&<)4gRPsQ^DFhX_\;=[-%HS*K\l0-NMgm/Dp:SGb0%i-jn>nshSE2OT`[Ldu!(IZsW.F8%a'btm-c-H5h\\>>SA1@$EK1!bJ,9Q@Y+BoTt"k=kLP%n2gA-n=I`;t:K"2!$ltFi3I0HP0%T%TONsm\!j6ip\`'h<\8C`\SENcVUa-Ug)b[cUqB&57ndC_<lmFV^QK9J9P?ia(2QQhZ11.P]E=^FbRj/?\UckoBLlVZgm6KN?H\ta%9[cl4dFl`eVLH\N"c-J'8r5":g&C/jf%@Q4e5Fe=a7K$lW$j_@L0RN#jpE,N2jlKCH)7'C5.!pN9P3Dl@l4b!J:f.HX:GUO@l#&9%`<EGbC'5P%qOFKee'Y\-`Z!$=QF9+6gfCZ,Js*T=m/!s$P5d2aRTM5U<G&;RVd?!m[YtDt=3QbM\8=p3QC0Hc9qRP;kG+LsX5'"b%MDp<rQ<8oUNE2/Z3bBG;.^+]f,JaW]U2%-$_QjK%L(^poLqT_'QGkuJG3EB8_)/%dgAZaHm,m0heZ8L!q8`i50,EpBO.\qln-+Aa%%MX:9DIm/ArU+1T8M6f,LK9%?FCXAWUtO)SaYuih4*N2^0sQ&Ck#kYGA>SNSC+8f>-@*8Tddld='ogo.Q#jTYWhG"+O-t$8&V9+?%a5H9=nsF9'$<WEOm@n'IC[sKlK97&7Qp#F(HpCoP;pVENd7(F]9f*<'Pe,dNBK?Ln+ZC@AY+Nj0'0X*s2kX!;n[p-Y9Q#?FG$FB4%[#/%(jitZtj?fXeYbTT;%Yc*`p-rqj`"Wqd`O5MG>3D$/m$:?:`q'Y-?h/mdA?@=bN/$4IMT2W0TBYW)[+aZ%.EA[JO@4.RocNa2%$"nME5\YgT^1`X9':Okr(GlXD-!EM+pk)/CW1Y)@5g_%5N^@UE1QLO[l7'u!NNGXd$rQSD*9<8X7]%\<-\@_C%6nD<5LnC'q@k<i%hpL/1Kbp\;)icRgFg1(WL]e=!0Q4>bFGpJi3D8_1.7$&XeLV6Ym*YnMF@W&(1g.IIVLC!:,^^"3,@a1m$DrR7CM@l%3BX+-j"m+T%O?V8!IO)4PbM<T4YDFXu=M-8-CG=L2.<du#s8GV\bGu=$9iZ)P3U:G:C%s=I0j#4]F>3Adq7B*+nU/eH:j`Vo@9FZ5p[V6[$`A5^%Yp+;>>NRsfH>_OhhH*j_p"T_6XBQ$-YSEaF+&]i3Yo('b3_CH5(5j)VXee#jN6tIsR4knjSFCr==dltB,jBU:BtfNh%e35LHo:%R%UkqqsM&/WaDra'Tq7N%/\":5b;LXi6V$Ulc]V%59Wi+WQ^=Z\5\n6imRbJT$A"8<)r\f&M"+&`pFrd\GSrAuqE>#D-94RA:[tpK#%W!,7,fb>sYLFDs\X(3WUd#HXK>1HP&fFbr6<JbPe)XbX@YbSpYf;/8BI.h5YSg)fA-2,*N$_t1ZapiV0qYa/T<Ks'E!S9-!=0[-B%]6n:@XD-5OL2rPQU="[)YZJD[-d_(-TVK(gbI8U=3`AA&El3Lb9d=^^-o;,'EMZD0WQ71k2`(!-$*mBLNgYPnNbFEN;-E$SkX0gJ%3"bhBI#t5:A*MdJUm11"I\t4VCS/b.D[aBn*#&,DbQQ^hoU<rS.!kuP0i=/IBY["1kpZ@DF[!ln9WMe_0,@p#PA&JR[I6kbjdS:3%%2e8[RR?9mY4l;c&=XD>/IEmi\dKDuJL$['dS[(]fbNL.l*ZqRbMLPp-ME$;ae9pGK%+*]L)Y0C+j`(E_9rPIb=#QiA[*TJ=<ef#%*U=.tRZRu/O;5A$pk+.d8&mqJ3X%FJq(JE%NU<FG=9(G[R$l$IGQ'E'RON:6R*;+C>8\(7E:%3D*KKbuKGI965uZYEWJQpT_3-pL%Ro6aR1'L!\-<LW^1c(;H(65eB=9lmh%oJKP`2dKAa,+g>We:in%@8%m6fb097DK>Tbh]%U1r\pk1^M9ti4Hqk\9+Zd/!>0#M3'Z'%i^9t[_bmkBnK0fOEtdF$X>&5f*.>*=#`FS+PY[p,RP2"9id!aD@O8D*?@hXVHit$)G:F.j([9"Y.LO!+,ld0+TmZJj`8/oQ_/C(-%o/4^p$-i"S-VE6`U$=Rb:,NbtIsf%#>JhPe;Vk6*!-QXY,0B/)7aPFA"WP,Cl'/4s\T>E0'eQZJ9),+)l<L2s^<QP+3sPng:j<=1%UkeZC&-T,2Q@*X/-*MXE<_u#S=[(im;C(DiH;7ihM-u%C5@Mcah'X9rFRAQZfKUHn)NB`=LmU-9Vl_n?(0ULiXl#[;bNqP65YZ#b%M'BkgmgP+Q?59,l6mr*U)`b1sJRhpQ;PrP37K]O3Z:;^!TJHNL.2-i0.#aDP/)JiQ&]0+jL=iSaTQi+(aDMFM3="eUYpQjdR_eN[%KkS'qJFWF\P^FIF$_`,4+;F6iQ6f6''OAJ(NUn-c<)`?]=h7?'4eYk3>#<1pZtb:#rb:^5ROKWH3#D2f_?<Q6ifKBXUDR7F1kag)%3?2cP?&s)Zk3kA4b;2l&Pjeq3r0c".`;C*NQma];;KrHFAfn3&m<qW:pea,%NDWW+lEJF\['pIo7BA7e5Vk<aKpV!mqAJP?CAP<M%q0_PTe(@pTo9Ah;c,`#T[!&"AdXpCOUfH:jD%GX7;?D[N`1e]1,t6XP!;1'D>\c\M38SL,\q1O:6i#c$CXR>13&faQ!35V1!-AQV%+$Ik2n#C$kN$ZY#3Cn@ei3I2a7Pq<UDgR.\/7qd@bo`]D;^a^@7U+o)7=<5K'0WBTK\hjDK/j$'Tc*tLP+7#pOMmM9$=dPe2nj_j%2\8OAc0$[%:.<9`d4j;'dB\K8*KjS51($Jl#e3M^F;0&)+oT$PT?9;-EdK3',!:hq^mU8F8gG=5$M6Io/U'KjYfI&5=/bct6%jE0%Ue_YqkE>9^%&PK&J',lqkR#LI(`B\+"k1GWHR>[9P8p:c)Y9@c0to</,P&mfF"Ms`)jN;21F+S"-EsM9.?%ZqL.Q77RBXOcGb`p<%K7fRgT8s_hg0"PP!KW^@CJVq7h+=t9<E]+be!u5+3cd&12W>FlPV(6^-k)1dka(%'VQ="!GhQ&`_It>EV$#:j,7Min74,i3#TCgf%p`N_B3qgf4i'J0>kFU]NW?*MrIAX63Tb?EIl9J4n1<Ea'3l`b9mj=3kWL(gTL#?&:jL:N+bpJ"Z_1X8El7=KiNftC#)UIi)oriWc%TDlqh[E&`K$Xe+N!FW10PB]/U/+@^-Q?T;CP:B.i5*`=ZMSa$E6WDl?KE7oEh!GBL[+g^2fEF);4h0ftdAT-8GC6KoD$#Mr/52`T%eKu4d[\hEQ:'0etBt'hDdV_J]"f@9$A%>?p7IPhD<\%l#J7I(#T!DqfMmQ\c>%tI?M6r2,J@0Sa-d8=HES[=AopA72IT)nd3oPH!%YY%GPlo%8:RKY;d*^jFiW:2(3@<q`*DfgAqBpPP'*5tJc;Ja2UWStZ^0jY_J?unD(KPpk6XsPsR$o#6gWVleXZ2n,rSd7dH.!f`'%KCqD8D?392(CAHWgplqQ&B!o=D#f_MP^U=k`n/NRJ`/Bg!&%2OHhS7[A-C'K"Z[q;/rr]bEHW&B*XqT\dnH[oe)GU:7]TU5"He>1%Y7o&.>.&C]rum%E[-CSbm4ef;ib!5=:e"6dgs?BfL5mD4F>=C5[cn)jh*WBOTclnH7,ftUaZHKG1bo1#1I7\\<[n1t])Kb6Lk."Z%oS=j@lFPGr]2q>PfP%>][RT[*a"kWS*f7]P+ugkrY;\dFI._j]`XkSA9.-q[JQ0b^jk'R@+ro2"QGAT>F)l)]B?Gc3bdRK+[5R!0%jRI)[C5.3KR*)l;S_,k^b4a&e<fT]0IM+A!f!N4j$rIG9gNFgj8,5^>[Q@n^b#V"45V(Il8Ku+#B?1n-Z$qfG;oY`WB0blf@!Eb1%+2[_fcYm2cNYrnD%Hc-lfMQ/s@#Z?KUbaP:$_Y^)/YV.+m&\\^C]Wrh'V1<":TtkC?LJ]^_=K8'b0<Y*TLa]_"*D`Bh#N*c_D9n0%V9<kMV+ACXf#[!p9`nMY5!rgrBael?Z3SnbJ@/k;lja#s0WoO2Ri&VMf:64m_D""X+kLPZ)WMUDXWFU?e^Nib:S3ku9<I'']\_"g%PI"E0DHp=][>F=266f$Ur>:]-)bitF=bt3J$X?V6RO1$Jhp3$kAF@)j+(Lq\[+E`LCRVoh;+g_4h,A/D87p+nhfV(&)p\H*PrEt%%SUU4qe*E(`hQHj+nG;OeP]B'n_kh<.WLhG2>.sM$b%BMCoH1cX8XkTb$8u0R0:TUIjA3E]q?)$>;;TNE]t,)(&psG5G@Nua20g$D%fg"h9Y:T\+G'`^\s2o_.jU*_u&i\#.\1_6gb@1]AJ<(GeP&)!!4p8Y715AT"af?N'>GID\#QC2WQZ\HkK!+TO^&$IhmEQ'L%(Ojf%@B7#_bO4SA,/*gtbO@,?44,l)`5jN_'O7Bn@tG_2I$="I7i41q7^<YoaDapN61H3hOj&5ABFK/55jQI+e7'oq.KIhO((!AU2;('?%/]+t-*\F4T2TWo]kOLtc<p+A<`rf\D96Y2g4"G6f)(6SmMC-Z2fcf>Fb;;QrNK+-&G[D%nT^racPRsPh$]5kpJB<$)<huu5.3B%V%*I/XYp>X5].7WK!ROC4RY>(kt1mQh(QJ[>d!)^&o0,.<aWL(`knfBee&LfaeSST9EZ:s/WNXq/)XbmW'3Cl-NR6&DuiumEDck/m=%V2tO<h->gW[h<g`1PE%Y:/F.5)=8@4!V/>`VXY'Q5^UMp&43lO?9qo;R%U-bWA9'<#jlaCJ69[On[U"(#5he;JubLV."`pN*bTDc%fJGmkL+cYR(nhIN]E/2tO_ard:(8jjQ;r0O6%MU@P2T>3:O/C$3,g=ZQQ,LM4h+D(!1=W/@-.-i_<Nj]\Z*LIS+A`K0ad!-n,1D=%F<t\Q$jg>MZn<Ua!Q@up'TW5d%"e99;%Y*]Fl"s,\[c5[BT0Ha#@O@r=Z@Lkec19QTf!K8^n"9KBpR;YXHdF\9j"cB[,to2Un71R%CQnLT@oF<+EB9!kGr4T0Lo[4X])m/L&#no.Mg\-&0Vk"F%LUG6FPFUm7<AW.nem#IOiOt(TP8YQ[Hs?['<YgpQ7X^'B#VE+r)u::%j_Th02T(b/((M[\GuL6hi,4,f=N@M1Hc[h/eT6N9)Xk4N(iX_#@_hDF>:1qEjHdHaI"5qJK4tOKiQmXHKs:d;S`!4+9^#9'!Qj+,%T3'0n6_c!Cl%ge_n@PL8MqAD_<p=o3:Fhr6$(I%h6iL7'",e?r[iC`N%o<Ct-gkO%,@5[fG8^t\`-oRH#\Kn8"6WG_U[T#8?-N/E%k7/ei/8.hi(jN8=I*qqu_?&S6L*rP$9Oi-KG<>j,@Le4",`\T*QqaYO^V-;JFC5^W6)R=QA7d3^O5Md`XtbOA1<Xqja1IAul^;_V%P<uC(>oc-Ol/_2!]H8@a'UgXNg:L("fRkns':c%IO!isRbMA!,ofeMb7b2m1K$qMN`I#(frp9,L`Q_12HMi_^7c"KDO`re8i2q$b%OEP2g(+^C,OtCNtYR"Cs]Octc_jHr36L)$$ZKs3W`;)iV1W?-\'YM7g`d'@]>FG$)Br1VS8!*Qg[nbCL4[jOI`;R&(\%]m-esb?&%QYH[S02i:0pWQ?7/nYOdK[G1WZf?tVGmoHuE$)<V$'T<j$U3HKEa:2YQKTmL4>Z'S8_6G/!)XhBd%)^jp#LM?lj,%3_Q,!orZbYg%Te-ld1'!q\1o$Je36MRYcqmP$DJ-W&ift;bDXoGlQHj-:'E:s\]0ls3H[.8'`D6Z)S26AHj+MS^^5?#B!r,1uTD:m`:d-!8B^g`-%W\?UCZ\^h*ak#e9Bq]\&5f#2"TpK^%NdU=50qdSJXnahcjh+:>GBAa&a8XtHUkk21FN\"8%D>4@0DT^T]<q*QMLaJODGI#1DCs<K%Sqm2=)lt&t&`uh7m$$m^G*H'"$+o=O0$N!Va,k5>iKc/kgj`X5faDmaPPUj=38$#1L.&:s;kNgj:RF[:Xt?iH[o%BF3tW(X`LaRu%5eqMOfRm-7=MD$$L<@0_1b<,SP2h?2U1P"X=rcOfI=I+5aQ]5P9=A9nKk$Ze-RbL,RQt\T)DrB_Lgkucn%j!tBVo#c[)Y]K;jqPs%;:/@+oH_)M4<kl.T4!<u!KKPK7p'Sdm(*]@+&VUs.i0D:0skM^YMXuqO#WFa%1D+Fapobh,"@\i4j0nq%`RW_h)=?]XjFLc`a\?^%g^Ff@6nI%A+n/m0VeOT=&<3Q>M.LJnUc;ck>n1b`,[`hV3sp/(!/eD"&r+NkJ1K=g_&'1YaX&=$^32'0jKJ0oN3F^-XeHQUA*"i;%#:/V9%4b!o"s>tL[CT@ISL@:HlrfqS81s8J^h9I,:;iF5^?;S'746e(G;GkOEHQYF4"tt"7\<d'nP.E4XQGFAgLs!]Jq-,\ZO9)K%ij<DY!9>hI&<2sZ#q%b;)_Rg/OZ3eaTKP?im1jm+&;?I0]on2e?*\k;(=gPf;'=pp_0o!enVC9a*?C2$Eo[^g%A>4c'h`cCJL",#%/uY4YRq-eKk+bNb`QG/^.iP3dnI<>OSJO_FAgPQ'RIU(L5Rc;,NGF<P<?mt`2R8a?=@CgH(MiaZBiU#IZcjDLS9OaYM4Q@%P$Epf%W(gY[d2BplAU1Nm&^^$E%,)Eg#`bo]X#+c!a,rSKg(6ZSEkK8F?S#ql@$+Xs*C[)&49t5$dN5&XX&9O'FbCU-a^?ITN,j<iKDAZP%'#De;R2<gD1%#ST6inO*7b"GcH5*cEH:;RK_X*CgjUJ7jXKTts#,+G+cUFtA,b*59LcA/(n6qjJqF=ACk04p9etKl_\[4B>;B[G^%1^HY8>'s1MX\-<-WuBQ`1g`-m^GZe2BLT*;70f'O=5h(C*"'MP&d/@]^(Eu$jLPFE-AkfuV-!0C+N5i"(6-VD*bk3#EC30=p)HrY%C'Y@tGX%@CV<"H3"$5o\-&NFGRF!eu;u&o8,qk8o`@<U8"SXQHXLqt=`>\hc49Pi9A"4%'=G[`FgKZQc0.4#KU*V^ValM"bE_EE4%j$`$-U:)2cNR-EC.nPsUY=5uobWmWaCM9nLdB4D*l5hQbCb<a*d&ppVn\J#ei`b0<iC1gX-j(g%Xk6:,QloNq<u_N=U0<[h0?tKt%)H!UTL8g=C5uam17lSP$7CD]6i6#>#\lIg\>F9g1OPC^Bcl'I.[hsQcQa[`@ZJ_'k`;+(I48dNg<+gJ@0n)^"8RN"8^m?;t7(FfK%?g8C4/+@,I"N>afcqC[R@lkM!1)"&dn'K6OJQ90G0/G'IjsoR@$">IU$[OfkZ51-LkRp%1?BW^lp<^uVJWZlu08ZDlbn0YJHhMgT%i(NGt*4gbU.H&0uU2[Ha8MgW\$@GF0&=C<I$;kWdX#58rXYVk7n4W%GYg$p<?]GT!`@kpCNH_E\IS'.^34mo'QR#DU$l8c(U.5jR%6j:<K5AJdUSEJNp+tC-&)8=</p^5R@-!:JoHa/2Vo2AD;=N2XE`1oMB8Zj$ke/2hq^]C2t0.F1UppaM&Qb$UDUCOu]P[NQ8L+dZM%H91[RPF<m10mZF*(0]8P,m?15N\0Ft(2J)K?#%Qc8f`(H+bt4D];16Pnl+eW9<pKBqC^DHgn;`c=_!ed`\ZI\Qh`ds'</i$[2#!E%YtIdqQl^FM4^8;.k`Y)[MDW,q,uIc!/'t,1/JoLM8Xl-W6\-k(aiLF:6'nC,Z*N4PQR)9hRi'L`a/K6RUe%PRRZ>64:9]JF@d"Hm%/$?lE8S+&H[m6;0<7@5b%_Bm_<^@45L+^TSWK@Z)k`T%/L:VA6HR#:qk`X5k7W:tN0(VF9r9U(L@a(KV$6YQGpQQo*5aU1>oX$lM%[!$hd'^1\s=rVo[TM+R\([D`EQaD6A&%eXY`+"-EfHoMW[90&a`+Mut<<ljYl'(u%,r%DIdfmC[*Ta%=[/_joq`'^k$@#,_DlcK"%!&(t%6,6.QJJ>t9%:7J^?ppGrn.HA?W07WrR^/\<nBr-`p?L!t;UUb6YQ->s%`\V.,rVst4n+VDNS.Q5^e<C7&;+0UP*T.HciYrc%W=XH4?;fh*QjR2r*?H0U6SF9#;7AtIM;ijF,uM#LUBS?\*0/Na>fdlDbP@un%'F!)q:'-+77JSC>3R)M8PRq\F@ehCpOsNsV")=i%cpF'U/'4Up]$(l,m+0N0h:,#"Qd$a09-&+GcAYLH"hN2P(i>tigk-GZk]1K"-UX47[aucjeHNN@[TqAe]#:";J4`(g7.DHV(?gq<%o5\iVmK3,>c)24BQh3EgU4%SFESJYcb0VG>cPeuo)7lUd:WucA>nY/p7u0EsVUaB.F@kCm1;'FkG"MQY=uN-0G"H-]gSP.d6p.[j%[fj==TP/04(;$B;L`)moQh_bSIo;83dZ$YW6QL>A2^bqI_(Ka-l.Em+af@C#fHgN(<T&);/r>9j3buQ)U3LN)n.L)aoWV!$-9)ZK%QUj7^2\MmP33f#Vhup_=[R9(,H3sUH<XBVUKNJdgW%6dP$#tM>!lciA%R,b!QEa)o1VDi$$?c_q#5:[)/eM?*fKRL2A_3[e];4#c%@$RVE/0^c'oTDTnL6t$oP/?;g"N0FL$#g>@LC@KeW3Zh).GuL_LEo,5'V>$+JmE-5A5Qj'UeinJ=OoXm&Y^fjm#iV\NN92!0$+P[%$DP`%-#Jqb(eS6+P(![oB=rb]VJofK?:#Z29O[F2lnE+h9.1pF[@IA*6E1c+(Z6Uq3fJ+pp_"6QGh3`+P/`['Y/n1?$\fDgP#SJk%Jgfh/FK6fn'$s9"=%-d)5XcAA=VgK>b#Kq6'nM]JY'c48NXZIh*c\=0G-sdm[Hm16!&($JKc7UW@MS]H/Dqg2X+k2%"tuZQ-#j@`%,&2p.VZSTG=V\[_ff6(W(@4qGkthUj6ER8M95%=7:LNC,ChOY>KE`#5$?V,AV99)V+3e7iD>Db%kXu@j)I51s<m-Ru+Y@jDV96%m%=g1P^Ri"1om#q(.l=$%+WC#"37+r$fN7L0-jRR)k9A8l4[R@qa8TZQL,%HtdW=ltdfHhe.5$nY=8NIS;S1SghS][;HL*/OB'.sj[%&mCQVg^IITX%L>U6uHj*4tGh0Z;V:FUa'1"cp=#"<JaOMTM+&iZ)OBhBN;<^KJ7MI3GCj9>XGFT+d]^U9^3dfd%RPAO@u>;;-]2U%h&7q-j:YX]gt@Wkd\90-?m(lT>J96"N*AXJ#\$ED4ju-$_(Ce`6=?sJ>=,<(paO37Ti<>cKn*B*9?b*jDFn]Q8e#`4d]0#YmMNGZ%h'=C7g5=m[H((pu!aHAm(BSPK-rl,OVLi%#rSW"3V/?F!.^149o[OkdV#-QgiIY3Iaj\UFQF\M)>DH?J)&/8JA!XKMF:Y]'Pq!J0%Z!`koW>`$&!OL:=5Gc7KM8PUd4j9(6SCQSM=jiUN9^rCND'rr"(:8`i,u,Wm>*cLgJ<k;q-ikq-BM!u2D$7ENBPH*h]u)Cp;9:7g%0M<XAC)pmmNCo3TB(*"RnOP?,$>[n\$#@&&=]29-=I^Lb=X*Y[%mr$DU*s[-![+-^ib6$o5YGY#1Tp;Z7"fFh[j"*i6"<P?UR";U%F*Bo%&aJ-')RVuf8]t<`Gu9n>Lg<j#nZ`hYP*.N1W#:m7e.P=u)*/S`'$2(q9GH!>.0<@%C5JIA9&L0bS4$d>?U.7.#S,I<Q:)*5%<1kO9XB_nh#c0L_$><!fQc'CJTI!IB9kLd:/]U@_5YIOi0g;t;-)SqEPn-b#c!.ou]j.i;?2PXGe<8Z$KS*,p`&J!ac%0%2"o;qe%>#M_Oo!0?f=sEKH@i6Em+A%g]UYP#@>7sX4#j@j(ofH0X,uL`WWBsucU'VASYU.8]a(/>Q#Af5GeM98'/Wi3GCOQW#-,&Jn+NTWm%5gd6rjo!*G-TO,:s&"#(m_0IH7/G=GHb^q@?<=og;03?V4'b=ok+ip*Pl(Zh""o^]T[BnH/r:Ye2_;`j!q?^?V?OIT$;R0"\\o0q%ZPVO4">-&mJ4j&^E,PnbnpYI+i0"qu3!#rX>Z(iZe#!@TdSm8q_VtDE[gGf#RpNOJ$X=lV5K1e.&nb/5Ad#PuQ5\Y%\jTcAM$_6L%FZ^am@`]qWOp9]nU4QX%XkV%99E*>'I"bhb]X#+</iddJiWE+67hI6f31!$2*#+D#+d^j*``>j$=?JKV$??HENcO_HEf$AD3\SQ#%FTB9WMd-n6=PlIuM<7.0%!!_XTVhrG_;e?*>Mp,fDT.&2i"CBoHS*#Zp!IPf3mg?9mC$V4O!D8"*uMN+c,81G$X=;r,[US=33eoK%Y$%=2?s-Ir!LK</1feL\e<2=#%Znm('669WM;@KD^a5+0P<.K^pRmljJ6NZ*7c2*8OW<$,VSt._?q;$>L^aiiU;JQK1BisNaNL)&%b1I357,j@PY(VC2+sfep$,(0rE_D<qiZN"74rLm6%75.;,sc6;`u2HV>K-3@I4ClP4m3Ll':T??"NNI\_$T=g.#giuL+[IO_e$>C%QUHZg(!k3hI9@A14,,BP.F/AFcm="r"oY0bHu(qn,F@KHa&^J$\O8aqp<XH5Oq0G$YQ.p[TMlB2`+qhB^a8REEWAB+/et$$(AA!B%V"^&''lZaH#@f9V95Ko'64i&f\P2c$@Gm:eC7Pt;>S75*8Hi@.s1$!j/'$JiRnMKG\4#HpD8fQi^a2_i+<Uit`+?*"j`F'!6#`Pp%$?1h@aT=jHi0"b'V[Brpqp2&V\3qA[<XXf:AX!n7'lo/<2bBZ?+I?JE;XIZKOuJ"'20?t/'uN-ST%N<tcso>-Ht8T%!JW5C_HI@%%fRD&[]#$)IP4Cd&''q(Z!O,5VC#^F:J6h0cd#eJs_(Jlf&ZH,i,rHqrN*quPQWi_g_BaJ-#^4<_'1DUoOQoCTp'ciB_SLu1rt`5"%'PH+D'%eMYmKD9c]O^QK=,rX'CP#jOhK6>a?*[ea'W\h.CI1u)_(N"=U@2NW6u/V[@$fM!?D&6FQUGOIY,'#hELDKuU,fPL_Vm*#%=:h[lrc(c=93+E-&%c?eWsrj.Hd6j_!4ubNWt>dka8l.(PEnU*ODHI"G0)b+MI-X!QRn9,;/Jl_/cucl31i23NEbb4<NJ*[/NQq;%MM=RHjnRJAe?"07B17P-=hWf6)UKc?k9LNGJ1b!:E[@N`.Jf&>XTHQiCKH+(!P)b6Wq?[\_]td)^("e?I1r,Uop2FP;Qku7e!/I3%lOb<RR2._TCtA-M@DGI_pK#WelW(YebU&BLCoSV%euU.T9;"r/XI9L-ACX:SMrd?2nC&/aABCf!<[!</Pq#`GH`M-L^IqV/@]H%U%>AZ&5EsCl/J^5-`/m3?t'm.QDQ*6iR5(d=jm?7.BVSXsZ7E)!%+mG4DVe6BC@YpAPTM*k:)P.!qQ[F+j*d#N`;lH?^euK]nH!QS>%ATVntiE;k$-&C4jl5T%h9b4gGdD^:U,p[O^;$!Dqcm>Po%:-7TV(/B9VM#;fjF^=jE.KXHMff>;970\V?_Xu22Wq0-'m,:RO<kHh%/h:NKTG"8$EK_+#P%\!](4QmI/m5=I'm,:uK'GXgXB(#^\n&4K@F,/(-*($?&%Z;Z.TOhAX&Tc]#OIW(WhtPW8i[1N:fkk<L21\6%i$I\hD(o2BX^2_lr0$_&Z,-RWAA-.Zn4Qf`pqQuZaa03lja]!eYEEQWJM//M0d\.7-*C+A.eo/aX42bT=g\SOI*&Bg'!O::f(6It%c89AQ'5K)mZ9'-2^LYS=Q?]iOjm7gr%Mn7/34"2cnSEc%/8Gq_!#(Nhd1q0<c)S#]d)JaCH:EnqR,(Q<<O*;G"T?pN7aNG>ir<s=%@LB5-Uc`M0O.9H1dAAJ%h3BKqo)RXoA=Fn4X7rF:n0GN)R'h8R5/SgDGZ)7N8r;!p2MK_3;PB,.P:%AI6Gu)Kh`f.?.>809V9O\/%W^>_n]h#^'an8[IDusrlC&Fc:UPgEM_f=(c=H^E6)F%pqgGNhiY-ij[O2,YeeKcd=F1=gud;n7"O*jY@?.&-aGpHSaV]a9F4@Qc!%aFCG@pdrMFKr*K[F:<ta6mlhE)jsBq_[g>4iP8<(oVC\b'0M7p'-*lekp5?k7*@Tm>M<s`;Z\[T1`@bdcr_fm?<Tsna$/.GIBZQ#%$@r<hm6buI+gXUOVkpb-gKEcS?*D7p^Y9[K)[W.G%?'KnCDm4'j@n9*b'3QjV^V-@Vu*/I,5V>`;l\pEP>V-64Xs_rFNq0L0IsH(%Q\J[926;g=3`T%Ql]70J<5lk"2#%<o(i%4WOQB<dm?++6OeEZ-r#_M,9fEj#p<$-@eO<$@.h=^/b*3Q1;=ML'?ii<g"6sYmOVoJ/%,Ip_:L6GY9Z7J%#\F^F<'>XoSM]sAH.<N1cO%GMEG`.31nsG1\!?@ouBp()baUS;QRqTei,Oon%OmA0B=(s9>5SRm>3ui5?X!\d4%6W]f`jp(Cfj!ZNJ-7+,`8Q\Q?FMuOVSLu'?OJM*eKCZb"UTni!2N7ju1k6DkV[F-Z.e/4i8$(mN81u1kKCU'Ec;IH3J-a4A>!g:7%A`G-rT^]E=i=\u[*=@Ei0HeoV+nj;oE^aP!9WD.kVSo)D#)#:!&uquQh7,ird?se7R?lQY:qnNSNEU"TAD=ms:)(Wt:`o7R*^P>s%aSg^9R6h)AY2F0ub/7f;E:ggfR05I'GMGtP#i`R+ZQY#?Hc,T818^"lK8PN*dIuX$8tn@`^a='X#n%h7$DLD?9<T=5:JeD=l+5Xc%a'2CXNCl>)RQDF54OaW!)K$R>,PMQINC._]=5)Y15L;Lt_Bb;iLk:IKYRKE'9q=/:0c5,Pj4WOZ,p\XeM"V(c_17t'%0tDGD*Z<3%'V>UUr;s-Wn/(Dd>>WlkKa'=`3AKhti/C^"Gei<_m3Q)g8N]#XA0X)`*S9'jRUk$S%+s$u&qWPmYI"I\T0!c9(HT6bN4?a%0\?qr%,@jDG1:l(V5<5kf6guD9RCu9K;CC:Pb";3N_2VF.LD1X&Lm&5R&O815**&;d?!?Fsdd+GFaK+UqJct-pA,%MFZ@nDbH%7L2;@NJS%-jX1fbeS5)3!^f4JV/)u%L($R->R#b2+qm'VdSWg+b[RC`<PIT&laDY2;<']W'qCOKBTgE0[RZ):spU^JiKK]I-Ll!VDBJ**in>!%qu4_WN`<qObdgD85igR*be'[IA\VXV7;IoDid<<=;!%1'Fp]^S^#\;:=b\jckO_$N$73ST%tGSV=Rp<0Rcnkfe1PqQXp2g-.WSWD%#@A$</'A+6%#\&EZHnhi3iIN72JjS2Tj(*3JX$"_<f$KHH]`US/%;em4E7P+Y$640ckl,8=41(+d.nfhR)h5Q\Q93&';`tE_dP%e%4otH6.F]HU[W`A@#OP,ij?+KR2FO7=6KscS(2-fbQ!V:'N%+<;e1;4n3R\pBd_To3Ku2[*i++nKaFqFdE_sJ`I<id["Y7Eh.Ypbk%I=P3hB-!DCUgJ(7Tr1d:h/X]j2NmR_)p<NU=Q2e(Rn7XoYXc$Oq2'"o?mse\&)U4keO7A>jFNF5Ct;0?0;9\*Z:Q[4:*EYk'"%m7%X=F8N/in6b:ua6Wdq.hkP+2W/[-W/-(;U]4qmK/=16#mJRq!lB`oJuU$8lNK3fm7_m1HdG/Tk<p;b3KG;Lqp)W<TppBk&.FR)FJT%UCmiN_GoS!ft?)jjQ1RO_o;_M8:<i\%Ys#+ZK:k&^<J&@iIHITCUW?ue?H_6#nR0F-R'[TOugArHH:lufb47Np$'OQ>N@&U.MRTc%Pn<SBEDj.YR+WATV6BuP\[Y^gP\[(Qja_/>/r7!,jS@r*ajT`Ta*Af8q(uP*'O<,S!kAMZ3&puoc,jB&;A&F)U7L3Y*B8HQdL"r=%V/q$VSZUksO4.1qH_D?$:1u-m\)8`,n'eD[/sM0qjl=)64PcU8P2]5mm&l/.M=1oKFW)m#_mbO,i?i_k79mNi@u5mH,LJ2e`&Yf?%[>=oRY(L$Tg>lkfj3%$7YZap>1Kr(EMeWI$Pc:IN=q^7>)jg\Z3K$g,Q0?nHJYeNWYrA=%/&C$:Ig-g>_s*"?Mg:W4*86W"n-2UL%\";`'_3/8aL3up72B$HOAeJEaUru'%XJEoCU$hX<fPl=T8TI;$!DaA(<l;,:,\:@470_X8W['l%;CRXCjD"5W2W:ahTLg1,YVK&W%VeSe2A.T%8P1Nfp#YoA#"AWE#'\9"A'Or>Ek)G&3cLT$N6D2O^8CgFmKo)\u!Wbfq"?0Y/IoO$(R`'[.dQ6'$fJ+.b9HkV<%gNgM%M'AAk^KMBhn/Ao>)_(_V9p>;d#Atr1Yf)jSS8$hW%MkZ*`9B%ObTsQgI1.a>QKC/U57;a!EA3Y579aJ^ASRs5hAkh-9#;6P+Tt7*%!PjQW6/YtDA.(^O%0e1_?nf)5aZnOr.@Wq_VdUVWj<YdVF42hbP\3!q,cekP=e)M:b$<p+#Z>nun/+L)nWo;)$)oI@nYnoi_5j!=%f'nQ<M5:ngHU2Zr'Lr99,f,It,L2\]ms;reg&[G\WJK'@e4rX'>KA*aZlkig1Vj_.H@QcD@A_\?(5D/$V,BJr`u>[SZHdVl8UqF$%l"s(FOqA&<'?qN=]0sJ%_0)B^eBl$1C'Sc"!M\OpTU$c+e*pbtoip-NhNXJ"80Eo\6$M[m.?m(CMTogZG_#4-=u\AmBO8"++;6SZ%.0B+2+bKhnCuc.RcjV]7hcE5913jLUUnjk3.(3CcMP[@C,MB?dJ7PR*db+[d!e7S*M#l*g<T7^ET"YtB\8tr;*%4:hngu6L@p7hc%;r4j.>B,d/1o-Yc-3?!n\L'k%;,dV8l<-<hWYocL'eGTn5tRrkp#&)T^(X%&.="t81Wf/:=DV)%-(?A7:Sjo'X)<fB/@Ei<mPmI*%.PTh%iPiuq+3OVXl:rh$6P)%e\;TQK6IL0`Q4P@!KGE=HU]Mk39_0$OY_&oS$ZDcp#\fag.qN/%C1/Jp?o5W7bU8M+0a2`H<lnY#%/YPFQ>Y"s/>[+pSAY3u1)*7%-pW/Sn0g82O"e[B2afuB;qnDE)SGe&>TEH,)a_FSTadKueA?;;cq6i$"i0'4S4WNZ]1b[.@*61>Z%esaQ6%MWmmUFRXVM2I=cC3PCUlQj3B`+/jTYC4\u';_>JMNQJM(QMGZ)H"a58ZCdfb6od%ecICBR;#?G@g"O0+JF"8JS'R8=\pKD%0q$8@!5HPt:5*g.s5[($Zud]f:6K!UZL-=l/2?4?NX)Nf+$4Xt^]AqI(jQ\pq`Qm$Zl2[gioh"W1nph!>r[]OL-rt$XX33%b[=\^%O(=k.,DQ2RUd7;,Yf:J#l=sjn-R6`o[05Ks\!5<WIKZJrjd(K<X/Y/7ee7T/?;oZB`?L%N;>G1?#nX'qrfrqhQA3a5PfQTlM,Vs_%P+n*1A>UVJZ.i`>,GSMng9Q?&_!7i5Amsgqj5ojOcGt&'o!ucjZRNAhbU.(Ucr[:oYXE1DJ5)Ig2u+^3%['l_UbkPo6]H=RU,\9S%"E`6nf`K'5Y.SC9VNq'e4\B==a8D/8iCL0`/Hp>`;.;aT_%0@aOAn>.gQD5^'sSPR=\Q(O$Y+6sYB]L^p-eu_VCB"p9)_&r3^iJB%SHDnXP#NDgZHT%AnU7(Lgjsn&Zu_n`Lng-QNL*CTR1mUbZmkcKoh:=(/5'`hJT.L1>4UhKQ/t^$?rcQcJ-BQRY)4mF='!rb4t5Ct%AW(cD8>k[&_+%n28'h6W+^^T."&0UNdYYq,G,Ho"h28a`54Z^g&kRh_C//ZJ`$L9sgGTJ/ia<O#&"H%D<\>hGi=`sAGhtHS7,;%&%&19c-TbZ=EZj(h.OX'X+86RFEgkkNV-<b$T#.)EA%MaATdiSmCCt[V@m$k*q3C9YP5\*`L,B3`Ppk)\2NWWX+TQsCbi+U(@D1h1@%h#rop/$BU$S3mOoYU-m#2hHT.+A0pJ8UL`G@k^X:XIn@lEYdo/BMR&(G['Qqd#)BbE-2Dm(,b9A@f%(,b%aMkBLJ7<rLui&'D\,X%>jOHQ8R\87.<UaJ)XO1l8\DqE7;-9]-1ig'8=m[<.qRJ)BS9jra,[.PUjU)'7KHstlsff'*\A-^VHab:OfF@j!'mkogf77ii$V9,%:uFS?YZoo)$qgdu_i?NhHj,3692HIf%:(rX&U/XQBc%QY5o1)r1pULn)Sg=':kSP@9'8Rim"E?7K0^+4,'q>@%Y*k'Nh%U5-@"F^%-$V)eMp_WESCkcEHk64k6t*8_9e'iiMO(-l&WK=bSfsjVg5[qM#'!m9@>onIe'`048e2hYH&>#nTs-(H7]3?[5[&qc8_RXk:FQ4.%@\j+%ObVdA"cQ?&VVskuZneS:a^*!N.SiA:\rb"A%2(\EJE"Ln-r-ZCqq<G4M)!H<o;P@OT8"(%mI8M-gp-opF!VIo#\l7[_'le9%5(`9JUc`YXN6]+go+XPN;4OdsaORqE^j-35,"U?4/Z4`:Jf2,-8h%U28qb)KE]dK^UOJ03(DDL.ap]LA9IUQfJ[nHo1_2$Zgb>@7%oK-/4;]=9a`q=NB/qC;SES5I%BWdeW$j<.2/r&=UV?OD/Ra?"-YnUPbCbc"0MtI\s%[@eS9_B*T327d`KVI-[ab\?"6B8a8.oECC%<#C;C,!APZdl>]9MD$'Y-8.ra#W,orl\9X[ChosQ6Nfdoi1u^`B??$>%<mW@#%f"T'`#1/(Z8O.gLfAgBb!TZ$3r:U=aCCOguf9d%85X&nBIAe/P0OEF6LZufJV>'H7_2$4e*[K9QV7S&=;d`s+DrQT5j!H.$i(B#PGm`I5)\MV9!SMY^aBKRNr5KAOfA$)5ZPOQVZCB3%TclW+D#T0Q+e\<W/==f3Lk<9R6m2XWc],Fh&Zt"u(kfI9mt!Yk4Al_,Y4tc`'KWQN3URU9<FMFO1rJ?C)%9?o[D3R1.WAh=QEhag%<Itr(<eu\si'0ST80a?IT@5*5>C.(BYiMeB.M$W3=LRfDcJEd.8sd8Oc5nBI'\%%G)sX(1m7c0M['M-Xa&60/UBPPFEiEJ[Zi]%`%oMPb>UdbWaGI<N2:%KZ2]9^IIp,IIQMP3://``-7"a,_)m)%Ng$;:^n0ra)T^>O4h"JKhh:9o=:;94l7DJX9^!JSI#*P9ld8o"J9%Y`B5s'4_GiZ+]k3^+6'O)T&MPhFbLcKGZMA.<QPjbDp:fgIACa-o))7e)69Y-6FQ,cg$?a:$JJ8YP#rUfpe0>dS#-CXIQsa78`Qb%co=p\2pqrV2hjRV"pu8K?qaQC,Sm-U`<j"1SD]d_n]J3`(6-RHCs=,,UD`8_hEt,0P]F_Lb\F_-JNafZW]1YCV7uKJ9sMY/8%1-]%DWeM^"QZ<$%U2ZL`Mr?CORf[G3<mIAdWqYs<ihL\$F`TN)kr^HR:$BUW!XFrV1=^CR-]p$`;U^g?qJ)0"af8*iC#(F`;.0f#$6t0%Ml+Y?ob!u8*H+n*#'Ag5R8BUl%]/u2PBo_$+2cFQ<if&';_@S[cH.#`L([+mhcMIj0hEdFWjMFWU=_1-k:*rA\_lE1dMpuUCul4%%AV9!E*7uuKbXm5H;iFI"%9'X"lEH-Z7=k_mKSr-,M1[rBWU2)c5uct?Jp0e"QB.R:qca^5IS`j&ROG$^4/o'm[gj*RqAEg*pW$>F%0V8KE:f:nbl7)<*<ghJV<raQi.%lC8Y2k=:75[bT+Tqtf>CfF)gj-`2'?<O_kLmNcaG6:,>ZR,],1clkR4J`nVHP3JR4M*jV)WH&%-q^AM5J/abgR8T+1#(7\=N8QBX6VK]`S97:D%oqYMo^Sc"F4e'bdDNh@n&MThO%/j)+1iA6:+7H%(X%s9_>2HA3m&m+nl1B7P)b!%)7C.>N`o,,V8bkNIeX8[:WM7QU\Md!lG]Hj[1l(7V?LoBV)=4[/sK)Hdmm/K=uJeoXYULibA7_?ZZr6g>:5_Ac&1g,JYL>bk`'M6%\Kb=;Hd"(XZk[Z&cKZe$*BAMSa5)kf*%LB2]]s8"-AlkmmNu+IC[R3'LBr**[e5ru.?\!$R_,Q^,,OqP=)M]LK`clO8/7+tR0R0R%6!4ZUG=fiIV!^+Q&:D$2\99:J/506H@rLm#9i?a*+agR@d<>b"$7.Jh;I?^/Jm==@#*gUN/QUtdRAGLCl5TmMf,GVK>oBt$`t=OT%*j]+5eL0GkXh(?d'*Wc@jf4;3BPbIT>e:(PFuuVE[Bf8[7j[lL7_mhLb=.EuAY<E?5nRY8XXaG!SoO%MMsM`=?XGmAoZ+EoeO+/`%IuD)OF-B]W`)^WK+>-M`Tai=N!_'SYg;W'l-o`Xc+uBX+c07,j';-3?f\`Kla,*\>.P\IPQKih*/]2lrRr@8DB;F7..r^OYXqXQL%+pPmNQq,q\OtAtB[fdPN.+/s]`-&pX1!Bs5Ki7]!nhfPag3Laf9TtWDn?qNjLF&0gKVNe?7`7)-AVHd\[IW;/nB*M!^(LM]fm\1m%/9*uJMEK4TaL@P1Qr:jY3P:1aMGTp]EC3OW\dK.CJO1_XEM`8$,;Q_6[tYRbG=!8]j:UHoOk4%m:FG9T%Mq[!lsY9d4D9Q\/lM40%-J>,FYm_%+6C,$A3g1T'[e9mu\504G5LjZdKhm)8Xa"t7Z/"ns5o2%j8DLcnYQDE?1.?S;D"3IkS0G5lK&cr3=H2-!7tt*bN&70>%@">sW.n4,=Q%Pfgi*WJm(3@0)g>Xha(S+_<.,sq8(hi!_$!DHuapCsILO.u_L8h2t7>[P(fPu\Z=4fYdZ#%gD_GkL,+!2G?B?dTu%J9hKci,X@1:S(O3Wb!l@,<^AVB1f[11u`0")W4GmL5g;8Xcse?:s=*!V+ejI#m:k.rF32cNrKF)lsX&(jX#NM5Ulq[nkP4nkp.A:%%BZ.-lu-/?fPGP\5W`<IIQ$kLCJ#Ia8Z(7%fSGQ<nO[_)A5-c.>g-fZ=@!DR&B5SdO4f=t=2lepYldodAnn7cn`\X!AVnB6NKcQ2%_VQZ&_,t!p>`YYFA=+Q=?Y_(>i[5VsV&BK,.M,%>(k#C1Rhj2OX//uGV@HF5of.)?OoT3Ac"dpdpsLfbh^I>pUI,u/l,Y<mH7U'u%K6`^$=a$kP3j_'`_U;;]#.GQm9Au8(ULU>5[N+*-5S]:pBt!$baM;MNV.1r?e$=)cmMm0L3OMPbC`>jIpse;FC7ptmeN!f<+DX/o%NR:')pN.U)EN(f.Yf??gOBfltac\YeSl)aP/:h`m(p3VD_f6*BQ"WUb@A!bn-D;8A0k,4G,Vij40f'WpCk$Ogj`^38!i7%1VHbUa%Y&`@,H8rXHR[73eQBS[1NUIR"6i]qQnH&*\3.8S$7UEEqo;>It=!RbI]&\Y`f.Nfm.!((JDl,s[\+8N9S0V.?5<@Am#c+^<q<_>Y%dS\G$K4`(Z^_".g5HR,'[1pHOR3q3BPSD_;M+WZLT_q3O'FTb7KOu+5kPRqc8b0uD`^/]Gnl4I]Bq1JM8g3LURdoq8QVdiVV_C!S%&^)m(^t9ee2CNig%=!5lU0Du#QT.$iPWTX+pdjaX;(B'ib.a6n@!8ZE$F-r`G*E]KPL'&fG.jZ9:'!$6FhBrOG0ikJ4"9rJcqQ2\%ZR'UpB5<F8g")AhY*Yk3O8qtZk!ZZ@gQF%rSJteGXkQFUX^auTgZkcV<l$\\G>2dTFqZ4-S/"p1CQ0pZ:GP#Nr.\(0cNA(g::$uL%`n0]<+T%0e/0[WHm5r`sRpJ/nbEab28X+QYVr]ARSOYjs2C:;8&k^CbK]k3DYusU;4K'FLVB[^EK$O`S)7iDbg8d>99QV,qkht.q%[g"Y5WU5Os@^_i,/[/SVAWEf?JJClr\Y9q]aBZ;<645Q?G%.s^7r:P-8kWEP9h7A`i@6iSWo7ZgMj4b9]2TT##Z@oP3hD#',i2Ln%S^Al78#"cfQ;o!_-apEr3n`VbRMuLD'C-jB*=tZM@Zt]3OtOmU85oU^'<KhFAUf9Jn(FA@ck>dI/q\_@I-aeiDU7ck->N0F:6cI2%aZ`.'_eTK_N7=O@%G&\]Pk.Iu388iWeZ?RHFC/WPi^cFPX[S*J-qnZPfLAu<8UQ0@4_MP5=Zge?aZ6'Ini^4&6`Bb7.k=DpAD4;I%Nia:Uh5!uh]!BCgBo'dPVe'cm+Z(r`BS!J/8/2Il6PV+0=*K=nOa&^[D#(NNRPd\q)[0C5pFYBDEWW)-R"hAcU/]N<&frV%Jh1$f%=&Vf1=YD:rQa-\[]XJ"0:BOB&V0o[u'c,_e/B6dp@ebg/0(@E6^`+\n.A\4TO+rT%BZY5ZXK]T@`28R3?6J*a4G0I+BLf(6G[tU1%f0X`hKkSi0+:fWb*P*hF_YSm86Zsm/8?q9P!6^JI`@=lJP??a?>I"[JV3K.XEAjmJ9"u^`Oq-@rOX.H4"\hW7cVT:mN(6;Cpue+k%8X_0:A>T'VL]c`?8gV^;D/k^ZOLu2=Kc>VQ,QM$U/r`WB:>l@$_;+POQAJ0WcQj08@b?CNM>R[;Li>)JG%+WY;k>JrN8F9?'j4$q%hd[lVl$=&s1Bq&3.E]\gLI4^,5Wqq&`V=<rj(%Db?OM?%nT^uJVr<dV2.+89[AL==09YC^-CSQ8:7]Oaj[srnC0lEn[ad-e+QK_1%<X0KelL?k-,H3)S18<V`5&hKohSru>M*s#*6QVkQIH2>`4ng.5jnZDaq><ZVecO/c*@/r9ZK?]^ffC$O>R]SP%h]M=-HS[^$@)W%%_VU]Fql:%BSWMC*aSpud6\^8SLl$>=o,1Eae:Ee*O"^^S%Y)3$:Wtra:<):_ea_%p@kQS(Y&bJ%OA6p_\^sh,OPl-Wnk?q-N2^;X%%LSYg*,5rW4kW;R02Eup1=F&(S5U:s1AQ*Dd<YPVPmf+(,E$h0Oq/[-]%\QX*_PLXjeII_BpZBh\[%HV7>?c.\-eRY$sAKIVWFW0%7$3abGJ)-]$<L/(Jtu:a,qY[)P:psjBd@pP4Y+gZ;!rQn>V0%a`5Gef)kdE)j$_f0;34CFGg/ib#fIL6>5$L(X<W9odV_Wgs3Z+"%L+$2h<9l(;)G<3pGI'N1p`ICT"VgC*`'?sr5?*"SRZ^A*S?I`PiY;2Xl>rrU++e3X>PFYrQ1>$'mX_032Nk%CM,g3nJJo\gS$Y-d%ME,*mGjV0;307V7A^J_YMm\?+*7L/!fT3IUcYD:.)*j]I&+#]#8k>@!m`g;5g%RrA*(n4\,L;uocUMfqn/s#3,(3>"^hGp9?<3Y+%;`8;i4O$loH*1.:Xd@T&:W&2d%Pe2q'j\upVC<c<IdFWk3g*eeQK(;5s1pCh%2t#5)4k&UQ8Z^C]spl8Q6.A<;IJC%:l<l4Bs\Ea%2hWHfr&N&^X?npfNT?ZX$6RHdKBn8^9)^,D*;\d=a9d7)2(oh=N3k6FN9l'<]l9.X">ir:>+1ATbA`P^N$s>qbFjjVmAZ$QdE?Le%=UBtUdr=%%\$EdrD6's!W2MurCW#H4kXNQ33(8jd=Tort.pk,R&sQ/1+T!q&e"25)-,EqOn[=ZI0Tr?VZG/Q-P\Yr88lKSO"S/i@%KL3kJY[6naU)j[4h6ciOYg)qc8A<#K-ug1"V:Gq]Bfru*=3%53>`jo?9/n%>\M''.9hBRG]^Q[!F"*FZQWAZEJM3@s7O:t-$oF.$%2JCCQij]_WC`l7V'BN99l^3>Nq=dgPe20]_bEVRV[O(*]MG\\Z&h-C]l?OB?p"mL<iC4[ln4FQNEn#^gnK;(iLaZT(,<0Bqg]_0o%cqk]/'fjsfY-]L&h;7m`V7>g)Qe@T"^1=C5>uU0<NH?rKIBU=H,545*9R'.lAlT.FO<BD`(kuNKN:aeoJ*kQK4#^`a&?m@"dfb\m%5Sh,k.RmEqMj-Xug7E_!T]!3(2!:N#8o(dZH*XdCaUKDkL9.FoGW^Pi_gAEpEMp:o9l)%@b$*g0k-8%a)BB^UUYBM'Ch2qth#"V0%j),uKTGV[d``9tlI\b5$?VN=o4]r.lTho22lqKVm-8E\7RQa+]bJ)>dn]r+&#aLJW8P,j+;`qMl?OrP1eaRMhE\8oB2/d-Cr>"@i%Em'J<6a<.A:6?rMhq2thAUGr)"$+ou8ee,b/445-;<8tEW=gZH/u#9r&k,FO!6SR6\9SYd37?2p6:k:2co;)&.-j0U\F"Ku=451s%MkgrA=40[6&;mWsM)1Z7&Pk/LdS(g$[R5L6_cWhd(uY=SRcEOS3GGkjOtRH5,SK4Qd/6<]V;^(N99b/Url=oDMr&bTf*pjBaOS4b%#'$-dUJ$RK)A-!MR[;[JLld.u*tSe54@oD#!#^ADI5m'NF!\McQKuf%>mpji`^dY[;]EmU)O@lsK#UYGPhi>ZIR-q?8gY0iAd+#(%`H40o#LGG/VB_DD?ql`d63?>YjA"H2As:5W8[L_9/adFab;E0]Q0NH;A-2S.%*)g'.Aoi7@5s908A;i:c%P%<8u4h*&;U3.Y)STe%7<o*A1_G?&<_P(?]_qe:f<q_QQ>G))W.1b4"r0lHpWK=LO!&8c#7pYX79R!Lh(@Ff`P4@p\AVR]Z[D)!g6ig/<lBrB)0:ac\pbg1%)8.+`*I3PsPo(/hqN`K4lAihig#j`fDF!H8Zagk!*Z'90Ad@*Q`b5^^S^Z]5BBtle7<@5;3I.%2*UKr]!].*,0DO%=NZ'-Qn3*gt%AP.p@Bj.$C[(S<q,h01LGXLJpTE-NG%)>k/bm"=pj!DM22J#.ndP3fJ?X%hoEP1m\HEEick9D;D-319&:I<iJMdm[3R`T[4Xb]se%G]46&/<((!gn2S>"J(AlCaFcjB_LBbU>;\;,D<6Z?*3!,Q3S;/1EB,GNEITn-\:t9Ko5G6I^_?P_2=$iB2mfGIeK1UT%1H3,\r.u%#O+rpLFPUR)QEUG"_*.g]0!\Ip$QW.[E#=^HH+LC;97nAmNBZ@d8Pr8DRr<g,`G^YSKI%fNr(19dLR:Ydh5[O+FA)dI93pR>pOkd%-km4%^bD]=`t0%,\@$V8`-,?IKPDArFI$oGM[1Ci#!j_IMR^FFb9e7-Wj-2JBPjH%En65UEnb@kao-e5*hJpnB+X^&95D0#f85E>%lNRI=RDS&)(d-ef:QYmOFPu2l]Fti8`Khsq"uZVjJBSg%D]V)QfM1R\D"AD1D*<uO(WV%80j!Z$QH[O8%aZgp$eXH.J/g!6RS)*o%Gaam62N\\tnGqmXZnmZlptHQi(6Re`ESdWC0ig@8C9ZEJNP*2Q4Jm7Vm#>eVg"BP1"TECISuiP@MZ>ooB<$R'=AP_=W*-+-2FRYA%bl:QB(de^!Y+Flt4f)uiO@ib=!^"4I3Gu0Qqp)9j^e/Hk^W,:=1!?dU1#@qINHjVb80manLC(!(#7MY8N;+$LAJQFWR'U?Z)H<A<%rTW0)n0Pe?MSq0SHIl.Plo0:/7QZqff-/IR<Ul0fPqCN3m/G[\DbT"?iZdKt6*35=-)>V6'uK;lG],!u]=E4D?DmJ!.fg("baBu[%ShAq)O3aVC,UC24nW<LhEn-Ae#A%3#flS<3C*qs/aK%%`pLJY$/LVc`o^-SSR?pVK7HmAE.oT9R;Ds($j7m5'cUH[/k-0.$p/Mnk%b7hAF'kW.Ef(3aX\\oTo3"^'^P&.eE:<NIA_RoB*rN+qp@KEF6V+c>2B'N)0T*BoqEF]2oY%tj78O.nuJq0;,89GQoHSS`6beTpG%6'*09AM^R"EhLL;b7)a*L`5_fY+(6$GO#rGBm`L)(`2tfVIiBM#.;bs):d,O**Q9u(p,BV#]n4AZHOERAIi-Fkp/<E)`DJ&D8q\*%b"?c4ia_6\MI_rO1]cH'cB2@hoRNiA0j8V%!.eUV:`&6F%\IdnQTrg=%fZ1f"\Cp15qbn"?qUr+gtD#aqOega<2G;T6mk@-$q25,%A;*]bMMTE!%:EY4!_\E/m!<U-RF[5dPkG2I<EC!9\-M]*GQgqV3l\+Xgj)gpT*0;&c:7dh@V8tG-FB$4?kipS$8('6c,n8-QWZ>!%T&s,UJ;A@KF[>0W1IKqiK)`qs!U'>/ql-7?q0mU]puG>p5tSI2C#3rRR$q"9iu+0cfr%sn?`T#2+5JA1bKn"'Fk169(_DYB=L(l@%Wc#:(@;&(Ra4a=?ZTA[J)/?9h+9'A+$*:i8K=F!LVr`V$.M+i&:#MC%``Q+E(A]7";!9rA>+a)T&=8%$<:C;2-(13$M*Z'IBpo'r%^dqO=JeHY6?Q%UZoCC^+:4)oU>aEq!q%`ojNK$Q>h<0!d\qofb#W8-0ltcd%iQ=Md$fX**2:0Q>Q\$k?C)E=j-Lc:]D^RfSJ_6u=%`SEYdbqf6kX`D^+iHC>o"<?o8p2g=`!.K.?V8+CMAAd?IKB#4kW*uR]A6.n]^%+37hd,&<,p:*n9M8<K8[YSO!DJQYVaI87e=d5M%R.eoi8S/[:CZtHn8qC546DpUAT,^'.S@!!"IIcbee$?=1Qu*g-dP&NMe@C1^]]hU^o\;a'cO2*MA;tAZ'`&QIJnSD<86?Or\7d!b%Pfro!GIh6THofp$MlH^DZ[+^IQJa9$KB%EO9aD#YhnuMDb\0"Mb_\qm#qrr3&[28>XaOLZo`Bf4P[]V;YB*"u,rcW#)W&1aYKMh=%6-]ro%p-3Dkh050S"q81ntQub5a".+Z/EGuXIB`g><@;mno+(S0"Dn[ZmB`%4Zm,Wg,M:_I8VHZ.SXl#G.B>Nf;E[f=GIaR!4cNu%$pViZ=f$rfA'O`0Bl$S_=K_9)f+>T7D-^+K`P@<&Aj=T,KO#.[9@?\eNM)WTkb,7>%jOI!IrK@@3)Tfm'0k/mFiDTJWh.bC,%<U%%eJWWcU\J`<L<jqH+W+/S1"cF]"KDiRo":?3&Y#D?l;;f]['tCScH"^N[JFG>W:^=JOj(",BiU\,9VO(ec:Ir$Bq5OWQg3;Zc5%fE%B__o3+kUhhlV's.4ALj"FMb1K4DU^l&8`s^@$)"J3AM[!U6j7WjDR,SK<Nbpe]"=pZquM%j;qFqc9mNFBi*AH$a3B5jOhudM/g6j%$6:Ko@$LnL+YF1^Dsofo7>kb)+f>ns/N`0BSs:+8AN+%fdYdHg2ZlI0U:(743^$_`/mqK@FFe;>.VNPT(0F^+/)!,=CgcYA$KdRa%kU_(nbisAV;aN?L$_\H2bU++5\13&V/+VBE#1d/JAg<rN?YIY_P9@]('P!P2a]eN*U',lj0_bEW4jV:%oiPhQB@FF5GV($JLchQ>%lr>K7WaT).Lt8tt/Im((Vhh/Ph8+&i5]fhNn^7Kb5LJiPXN8_o3jJ$&6A(kWL,'8%g=h:G<Asi<^XDaa\N09nDF&+B4BR3><CWgM%4\u!O'U5]o*T+Seao49%GD1f4(U!Ijf.3JTC-KT[f3h6,-&m-f>,D#C8BYEljL=V2Q*HB@[ds*c2&98+da'd^2fc#a`5s42cZ;,R%D?@.Ep&+X"a,ZZ(GHcDLnA6$.'p>0JA0;4m@S]/G(?hQ(jDas<`_[Woq=@Um9<-[ZcH=uoW0FeuCV(7D(trFrS75d5_XD-(HK>Gn%1sDYmVFDP=V9o^MQsRaP"_qYShNbcGGC'Vg:(uL)H+b`pQC=>r3Id?M//hHTiF95&n1:m$0sMXAbiG%$:QkaA,HAY8\fcpI-o#e$%M*?)p/Oo>WGb15e:/p2322FneL-Y7oCjg50QGi@J&/e12(kY`9E1?YJNH-?M95ZE]Lht#a+pA!X<%$p\2tP8haqot8$'UfZkt<"n%HVF:GCM?B7kT79!b?*MBJtlr/n9H9L;DY*!OK.i=I@%RECeBh7<7YUldHH,LC;\?YA,[H0!5V7K:9;F[%+J;n'j[@m]$JiOHOeX@%BRo36nQ+6BjA>tr(1U=aNr-1f$*Nk)o$/.&eZLefV;k((K"&74Q]GB\\A"8hZfk=P9T,S>9SVPZ<%pheg)$@>E6;IJLYs2@(G(/#%,"uFbVil^f`!$re,h`H\9VPu9U.bi9m)m('aqPq1Kf^PP`P(`@gAEbIC2$aD]!?jW:YE>=?hV.![OZ+A@pB1V1(n@@Kabq+BFQ5S%3%L@[aOQ(K1:oeNe`Vj/0)RRt+C[Z+O:1;\]f_.DO"f[rI/IDh:cX3c\P'EX,?([4!R_pr1,,PLb.L?c0g]6`"_Bl-m7)A+%lp,q%'hR[>?/Q8$%`G-9SL*H/=C3-4?)1"%^V3qf7W,^oB><%A\&-7f<Z/'H`3-[4-do_B-@leU(X&DW<f;d8=uL1`"GOGo.UX.QQW\U:%N;m.c&Q;b*pQEh!^<`qHZ_bn,g(:0.b/_u*V?+s$8F9;^)-qQf;r!UrE)EBH-<khgPkRr5/Z)tdpJ)WYD6Yhr'rb'6Z;61Sgf59P%%OaG(M,t+0^dq@D'uO(7:0\E3-Y?0YE'rFVp75?3=[B!9apMU[SANIKp977T\h?67M*^PS.(:k.)Y14>emUh5kdkm)D5iJKJa:I<%b5m'_e@WpL<0144bXGE7@KI<45)rZF9*M;B1(_n9$G5mCJ^c7rc\5B6ot$/t:F_s9].aV;j])-3GNO%nQ@R`J:uGlbiVn\hR+Z51%,A&O02s)]g%Elkn/>/f4li?aWZ[]=t6>EQD27^^'@NPA*/^LhKiQ%(Oj!Glij@\C%-EE?mgLf2@1@U9nMbE^!dsIa5)Isd^gMYkY%q5k9+U3%Z#,d4QF>h,aO"9Ri$Q6ePVB%T=G](TYYQGg;(YM`BHOqUZ5jBN"l6<\@FR2"uV"saj_B/J`Yf3r?>T%#c)6Ws7g[0)(&%kTh%B*$`oKeXBcj1T8U]Jds>'jprZ2+Y/Y`ZKd\3b+qWn\IhrAS<a-0gBqWg3I.2o4'"Vl-(S&8Y4MLTpc+uGElmAh%))d!VhS"<%rr]4"4<=6q@87MRWXCGi`nS_!o/\I!G*i]NO[B=.A,8PI5s3?mCAST^0&<_3/&,gGJ:+VE:F7+O_<GdpPQFg)G8s&7@KrT6EU)<E%Uc_T/3X%KJeq]I#mpXS?cH@e=MY8jr<-RjuUJ"@!^_@TX3iG*AM[B2?1ajRN!1'ZF`3V1<KQbAEmnE$eX/Y<-p>gR.%4ABgU`u$7%.hpL0"_5J.FFAq"P0+LTEER';@<I]7S:XJR=#fUCkVXFin3!\;l<a_Ro\Y*)Jng_hg_TIHh9(OpV8deBJ5K%/".eqSb,RCG!"u*?%+lnYf.@MLC#?ufo/=$jW&"]JuFDoNcRth7sNpc2:Zqq`XWS)nO4PhCJkkV2QL]H3M%$[XQE92*>0n_K\>Ve.F+`9%Z644OJD@_K,%?H.8:ZiHtN>9F1`,iQG@N/s#O0H"1aJs1i(,n^PFp!;2>!56bZ1R?$73#AW8*t)=)\-Y$IAY:_b'1ji8&D45`iJ`S`5SETVNWeXJ%KDr#O-PCPrYZ#NahUFCNU&S_m_Xi0"TlKF@jgkC^F(ihF0[@#\Sh;qDj6!s:LHE%F\N_af(5GMed_XY+K?$S$Y*/6Hs16V<'Vm\i%:il#_1a,+qF`1hI6s2OleciD,'=j8^09=903\?;\N,%!'e\,N'8LFX`Dpa;)ArX*q?)PA=7scpJYN/3]](]UC"'1!A7*X+)C']p=%3-WChmbN!(`(@2C2_R_MK+2kknp]g;gDfKpX&PeOUf<_!/88>D>P31IQ(bTXf7+SWF]0Hl>U%m=$6RYu>G:o]A6EE(=DM#e,!K/?%0+!RJUCbhOAlVjbXG$IL-X"Lq[dQ^Tf'""XUeoiNIj<&Lm-/?:('Z#YA9!AUhcF2L-bjHY`RT:i&U^1jiAaa!mK23Y*d)D0h^lc^%Q"V%]pF7@??3cr7'[B=2lB^E`[Cn'm"gTYsUp<;lZ"A1DgB;2oT=%l!-@cO^-^r"")ZuG49A:CGLLg6-7>Z%_iTc1c`mQY,3#*m*%TPIBs'qYRiHPcD#:gm*+><Ubpa=CHJ],%)lObU5d"$.4A[#W-P7+p$\)gWDn6ko*4l8?W\K8U":N+-]N6`BCC(dk'<?IJu'<d[tj%7U+YP=V]>+6EX(-+di;gX-K],dj=Dk?1R,YCj^2(?(83eZ"Y^%1-f,T$<&r5"Yrq>jFpa5.M_(;Uc].0(f^(/f/LHYj)+g"eK==u%DIu<W/B2WS=n>dQMp;;(%L(D%]D8H7jZIOd`hA?E<2b08r=NcFEGss$-sm4!n)ah27^G=\bC!]"<;2^D-d9FR!,NsmM!h@/#3(]I%EYI\(M9Bif'kBfE2Ql=T&:8[!c@+X!PknPTLkIB-MkQnSQNW%^9=dZr;/=&+FQrpcPn1[Xd+TcX@ASM@nSlQ!Q_anYMWNb/:LtdA%*b>F+Ht1J@3=[@p/u>[;C<.*#juu7`M^%g]"J`c*j,\qo=Sn?_AlZW=iB/BfP0A*_;NG=Un<Q3J79NNabgj1V@jr*coK:!!*%HB&%X.'K6hpm*]CdH2hJ!ITnVFVQ[_:0+BP8Z*SfpZ<@Wj"IaEZufoXi%('i8K$A9Yk+slELqYk!]D&E`@?Nh<c<D)@dmI+NR&+p&O?c%ld2H-<Ea*ome@Brncf)]9R<\YgiHAdTggr<,sU><o`tIlO>@2_^;qbWkii_G^8r7Q=A>YhOHJLGTt?R!h4dro_FW[#%a"@R)HF88%lBG<i(H\TgGti%/Q1s2#Vlm+Odj5R\,0$"6Mtl2]5]cID(qX,-AI0`XMDc2ueSulpYJJZ95^m(pP_J2WN>00k0ce88P:=<u;VF.N%f]:l@d_SKU[8"f5agDbeWJgL+a<cMZO>mB_.%UZs:!oc@`=T?Hnn;Pj-*F4eRK,,e\8B4^C2[,:^`L:*$%Gb\]a3Id\SthIKacZ)%:H>PJ'd%>^"nY/k"RLIDdePi_]>9-"L'Bl-QF"q"9U905pL[t[rZG\RFjIGk.'0,)oJ58+9U0UcGX+;\or`'18G'T5G6OI=#cYY2%Ege[^ZiMg5MoG&RbKO8,ReO_4!NECV7pX=XRs#GFJJ_eF.neQQ,ANiN'SMN9/I5hj,SZO%nTUQ#MQ@k2Om0PSJH`T!5.JtV(oB[!%`3q1=Bh_+f>c<"M0H5F-";eN1&JRD>[=L>(d#LWY$]hMF01H(,>hRU2FL2%%3UQ/EZ\4Ouk)jr]:KiI6%4O$914,N%P6erBifY20%*rKL)oD.srJ3HH@cE^V(kB"m'Mp!8%PQ`e]L=%4i\_+sq`(Hf1rt@%[8eO9,Z?FusN_MV^]/A%CM.7p#&WbM>."\=C1aMq@kHiNG%1>g/fLP:R=S8"Y69ahZ9,TK[!G[Bj'ZkIK$/F'/DX#]_soI0M4;.G9B(+tlBgeTSBr\En:"_3QMGO2@^6liNeU.Y\5;<^,B)&pI9%P:<(]Ni=cXX/WRF=4(H,`!SptmUNKf;ki[EB5*Mr50^<O`]>p,HaH/2j".XG\SqC%aXf["BBec;@_h,:'BY9_B93B$,>40XG3A23%o1MVOB25f8I)U+r3`<O-UM!\p&h;n*0Atk;r*$S\!4-mILiH=:*<aNa;W$/=o-EPM-+"86Q#S)[?.e[9X9"u(KINL)l=@t"F\QR+%[QqWSS+amXql2-<"N*-URES&@.AYo@9[.0pQE1oY^^r*.,!U%sED1Brh9nHEK^N<?KC$WNbF^:X@pN6=c6V,@8`9&?V8^tBl"b+T%ZUib%dGnTuc73NJZtDm2'Q1>^aN<cjrjF],(!K&_QR1[%0#r:[f)Uh9EG:M/*4?VI7k'ip_Ge;QPRhk[<@$acA=/VE5H7#=*lh>o%X_YB]e8/2,KYg8Q.RfZ]E\eHM)OCq=62[7=*:?#V]d!#Clil=K,R1qQg^Elh7t@=YHG7nF*f9"F&l1ccN7`)e$7nm9mPVR*8'F`O%=c;A-5j0;7#OB]-i3T)^Kn3C>S.Ato8ee0KdMr4"2\e8MlI'Q*3[1idkXcZWZ*R0<TDDR+a%3ArF%rYJHO4Pp8"q[?6[]dI3MMaR%7\Ko?-Y+@:j"@1BP4*0H0CdYmVI1[1WiYQQ_?J#%@UqDG[1)VG`,@e>QeM+bc0"OZ<D"`c&:d-DYE=S5ANkuoUmF4p,e9#+1frc*%``:6O<i/`2k(m@cD+IXYN\6)N=!Y@sM.X2*XVqp";3a/A5-FKlQ1QKX)IKq7nSi:5q-DI*UR=$lM6\u]5Jb>W<nj]Z!J2l5-X3bO%-;&p/T$3Dl\Fn'/$/0!?O3W9uD>6!0PNSF<V1Q7+?\)dm8`%W7.[E=>da(2[R6!nPZ)fGN+j"(:)hYJS^TuK'Uf?hXHC]EXkI.!b%n;qIs_erN%8>.VAA]rc_9g2pC<Mdec=#l)_XJ^FbTn/CKd2fWsU$66HX"l5\)23[^p!$"QLYT&;^e<beBbrB^9bX;$Y+rjc@#XKK%*Bg<M:,4pG.SCC)^^0$Cpg%,#:=EYUh'+l-Vr;QZOcN+6T:1kQ>2edJ[\]1*UJb`B=HS4&es3l<:h1^F`!?Z4QZYcm7;'0=$8(]D%0(GfTA734lP.P+lM//#EaKM5W"lqhm5'2TYA)=`Z,0_hn&lblbOU>i^(fLbNh0dPk=]rAbegk$X>6s/S6a='rF&qB`o\$5ieFVAB%dOC#]FCeO8)UP/V&eeX3_d(VY):jtCe69odAl(;))Meuh-;N^Qq!KK&V_^mV98l>[/nK5=.WR+to[ub#.PM/)*0m>(S(#_i<1NeP%Y4fH!Osj]l@Q"31Fn"tb=VdeXcM_i:e<1?.aif\DQSN8a_#rR(CCL%Kc$PT<F'gR$h,7KOOG*-^Ak&F6rRir_m%l5@-%*[k$,R)J%<?-A6ngofORdIPN\rO1c6O@=]+U<NS8`kaDD/@d;Z(o*:E`&Wd[E4e&"e-eu+F8q'>igKoAflcWjAY.A!B!5e*9eIYHD-c"%Z^0.%;&O]K(u+s.M#EAW&P)CdI#(]$/MQ:Ae=&-@p:SLNIadYG8<Tn=5>(io;#+!J.;@d>5H/@f#K@O1<G6]EI"[`a,_NaooBb$!7pn\p%2s&iHUYM)ojCIk)D@7d,^.c]?CpF"(D1]i8F3B-R#(%JnoqPC4DNX(<c1.>LGi*7i+9!cK%5.l$n`=OFD=K*R]B*d;#g%X2$#,C@%ka^1^n2RkfBc%m=]#qZeEp?q?NQK[TRrijDd6M.:m"d5n.W?Jp*I^j0?ot]j?)bYu&a-3QY`^`udV*8A[:o(M[cVqc&"VVYeMZ$A%m=+8-M'dCZ6nV`5<0M$5N3tK"f%k"'MYqiRnaNeiX?)G[bHd1OkQ2=+BI4B/DrAW/,8"t[5.5'A0$[Wm$YZg/p3n+<bS@/cge65-%_#ti'Sh)PgdQ[9(!Ws\;-t;C\^Q_tLA2;fcM<uKaO$RkNQ=Y)3H*Ai>G&2R#_k(Ou*O7e_dt_=<m/cW[^,,<6.-6)/C=7=<V!=G&%r]lffJXrp)2F,INHb98,2;o78$/4&od7e^SM&Js_U<"ktR3Kb,a#uFh`j"qDooUL/'r[gCU_]tm`f]Ra2lc@e2a&(0n8G$iO]5JT%eg?`2AL"sed&_!`4-)$r-N2o"=aS4\\9@LeNbHXIc#^FfU])YFP%>qs8K3::X*pYZnbusUYVbsGiK6(^,YjRR-3X=1F@qA$>c%S$%ZrS/D?We`c*u$MgjQ_7rQ_jouS+T,FhGc(!PRJs[Eg0mb1fiCr>qGS`RQZ^?UoRER'?bP@;2$/h.r[+%ob<mHGVSM#H[8@[;/&W+%BLn",'hdd.cXYofaQj*S(gJK9d@&^6M922'kt=6!&+IhaZN7;i\e$UU>bp4a.kF1GlH!2Joq:K*/%ZoEW6Am!>M7'G$i&SN55j`p%rqmR^q>"Csq=\1aJ+Mo[^]+-0YCHK3hql-Gn$h3Rn:se(r:#bSIerb6^O>p=s8;TFVk8G<o&&=gJ,/2m?iU&ccen`fnLpMaqX*&+%J,],MDkDOZpL!qJ7NNZATE"Du+91<g55cRIlk7b~>%AI9_PrivateDataEnd